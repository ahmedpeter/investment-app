[{"/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/index.js":"1","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/reportWebVitals.js":"2","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/App.js":"3","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Util/StateProvider.js":"4","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Util/reducer.js":"5","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Util/AuthContext.js":"6","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/index.js":"7","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Auth/Reset.js":"8","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Pages/Plans.js":"9","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Pages/Landing.js":"10","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/widgets/Widgets.js":"11","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Auth/Register.js":"12","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Pages/Deposits.js":"13","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Builder/Sidebar.js":"14","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Pages/UserProfile.js":"15","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Pages/Administrators.js":"16","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Pages/Investors.js":"17","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Pages/CreateAdministrator.js":"18","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Auth/Login.js":"19","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Dashboard/Dashboard.js":"20","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Builder/Header.js":"21","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Pages/InvestorDetails.js":"22","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/widgets/RecentActivity.js":"23","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Util/Toaster.js":"24","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Util/Loader.js":"25","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Util/CurrencyFormatter.js":"26","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Builder/SidebarRow.js":"27","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Util/API.js":"28","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/widgets/Ticker.js":"29","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Util/FileUploader.js":"30","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Util/axiosInstance.js":"31","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/widgets/CoinsTable.js":"32","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/widgets/Carousel.js":"33","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/widgets/GraphInfo.js":"34","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/widgets/CandleStick.js":"35"},{"size":775,"mtime":1669039366000,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"37"},{"size":549,"mtime":1668169242000,"results":"39","hashOfConfig":"37"},{"size":374,"mtime":1642952997000,"results":"40","hashOfConfig":"37"},{"size":348,"mtime":1699085945664,"results":"41","hashOfConfig":"37"},{"size":2169,"mtime":1663318352000,"results":"42","hashOfConfig":"37"},{"size":3789,"mtime":1699085591490,"results":"43","hashOfConfig":"37"},{"size":1499,"mtime":1642266643000,"results":"44","hashOfConfig":"37"},{"size":4202,"mtime":1699069502340,"results":"45","hashOfConfig":"37"},{"size":16863,"mtime":1699198364142,"results":"46","hashOfConfig":"37"},{"size":1180,"mtime":1642863513000,"results":"47","hashOfConfig":"37"},{"size":9011,"mtime":1699085683262,"results":"48","hashOfConfig":"37"},{"size":5984,"mtime":1699085807834,"results":"49","hashOfConfig":"37"},{"size":2885,"mtime":1699086382845,"results":"50","hashOfConfig":"37"},{"size":7973,"mtime":1699086645348,"results":"51","hashOfConfig":"37"},{"size":4318,"mtime":1699085771945,"results":"52","hashOfConfig":"37"},{"size":5066,"mtime":1699085879501,"results":"53","hashOfConfig":"37"},{"size":4472,"mtime":1699085788010,"results":"54","hashOfConfig":"37"},{"size":9647,"mtime":1699194879322,"results":"55","hashOfConfig":"37"},{"size":20115,"mtime":1699192899937,"results":"56","hashOfConfig":"37"},{"size":2842,"mtime":1699085655973,"results":"57","hashOfConfig":"37"},{"size":32409,"mtime":1699086484516,"results":"58","hashOfConfig":"37"},{"size":3874,"mtime":1637323226000,"results":"59","hashOfConfig":"37"},{"size":368,"mtime":1643651121000,"results":"60","hashOfConfig":"37"},{"size":2589,"mtime":1644172485000,"results":"61","hashOfConfig":"37"},{"size":181,"mtime":1655070530000,"results":"62","hashOfConfig":"37"},{"size":439,"mtime":1642587145000,"results":"63","hashOfConfig":"37"},{"size":1529,"mtime":1699062686249,"results":"64","hashOfConfig":"37"},{"size":2013,"mtime":1699188936129,"results":"65","hashOfConfig":"37"},{"size":772,"mtime":1673286049000,"results":"66","hashOfConfig":"37"},{"size":1113,"mtime":1666605435000,"results":"67","hashOfConfig":"37"},{"size":5442,"mtime":1699085516931,"results":"68","hashOfConfig":"37"},{"size":1827,"mtime":1699085516931,"results":"69","hashOfConfig":"37"},{"size":3889,"mtime":1699086740911,"results":"70","hashOfConfig":"37"},{"size":10053,"mtime":1699195349969,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},"rgokl9",{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"75"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"75"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"75"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"75"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"75"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"75"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"75"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"75"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"75"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"75"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"75"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"75"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"75"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"75"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"75"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"75"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"75"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"75"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"75"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"75"},"/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/index.js",["164","165","166"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StateProvider } from './Util/StateProvider';\nimport reducer, { initialState } from './Util/reducer';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <StateProvider initialState={initialState} reducer={reducer}> */}\n    {/* <CryptoContext> */}\n    <App />\n    {/* </CryptoContext> */}\n   \n    {/* </StateProvider> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["167","168"],"/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/reportWebVitals.js",[],"/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/App.js",["169"],"import './App.css';\nimport AuthProvider from './Util/AuthContext'\nimport Application from './Components';\nimport axios from 'axios';\nimport \"react-toastify/dist/ReactToastify.css\"\n// import { AppContext } from '../src/Util/AppContext';\n// import refreshApi from \"./Util/refreshApi\";\n\n\nfunction App() {\n\n\n  const accessToken = localStorage.getItem('accessToken');\n  axios.defaults.headers.common.Authorization = `Bearer ${accessToken || ''}`;\n\n\n\n  return (\n    // <AuthProvider>\n      <Application />\n  // </AuthProvider>\n  );\n}\n\nexport default App;\n","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Util/StateProvider.js",[],"/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Util/reducer.js",[],"/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Util/AuthContext.js",["170","171"],"import React from 'react';\n import { createContext, useState, useEffect} from 'react-dom';\n import jwt_decode from \"jwt-decode\";\n import {useHistory } from 'react-router-dom';\n\n\n\n//  const AuthContext = createContext();\n const AuthContext = React.createContext();\n\n export default AuthContext;\n\n export const AuthProvider = ({children})=>{\n     let [authTokens, setAuthTokens] = useState(()=>localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')): null)\n     let [user, setUser] = useState(()=>localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')): null);\n    let [loading, setLoading]  = useState(true);\n\n    const history = useHistory();\n\n    let logOutUser = () => {\n        setAuthTokens(null)\n        setUser(null)\n        localStorage.removeItem('authTokens')\n        history.push('/login')\n    }\n\n\n    let updateToken = async ()=> {\n        let response = await fetch('https://dry-falls-41890.herokuapp.com/api/v1/token', {\n            method: 'POST',\n            headers: { \n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({'refresh': authTokens?.refreshToken})\n        })\n\n        let data = await response.json()\n        if(response.status === 200){\n            setAuthTokens(data)\n            setUser(jwt_decode(data.accessToken))\n            localStorage.setItem('authTokens', JSON.stringify(data))\n        }else {\n            logOutUser()\n        }\n\n        if(loading){\n            setLoading(false);\n        }\n    }\n\n    let contextData = {\n        user:user,\n        authTokens: authTokens,\n        // loginUser:loginUser,\n        logOutUser:logOutUser\n    }\n\n\n    useEffect(()=> {\n        if(loading){\n            updateToken()\n        }\n        let fiveMinutes = 1000 * 60 * 5\n        let interval = setInterval(()=>{\n            if(authTokens){\n                updateToken()\n            }\n        }, fiveMinutes)\n        return ()=> clearInterval(interval)\n    }, [authTokens, loading])\n\n    return(\n        <AuthContext.Provider value={contextData} >\n            {loading ? null : children }\n        </AuthContext.Provider>\n    )\n\n\n\n\n    }","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/index.js",["172","173","174","175"],"import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Login from \"./Auth/Login\";\r\nimport Register from \"./Auth/Register\";\r\nimport Reset from \"./Auth/Reset\";\r\nimport Header from \"./Builder/Header\";\r\nimport Widgets from \"./widgets/Widgets\";\r\nimport Dashboard from \"./Dashboard/Dashboard\";\r\nimport Deposits from \"./Pages/Deposits\";\r\nimport Landing from \"./Pages/Landing\";\r\nimport Profile from \"./Pages/UserProfile\";\r\nimport Plans from \"./Pages/Plans\";\r\n// import Loans from \"./Pages/Loans\";\r\n// import Accounts from \"./Pages/Accounts\";\r\nimport InvestorDetails from \"./Pages/InvestorDetails\";\r\n// import CustomerStatement from \"./Pages/CustomerStatement\";\r\nimport Sidebar from \"./Builder/Sidebar\";\r\n// import Investors from \"./Pages/Investors\";\r\nimport Investors from \"./Pages/Investors\";\r\nimport Administrators from \"./Pages/Administrators\";\r\nimport CreateAdministrator from \"./Pages/CreateAdministrator\";\r\nimport \"react-alice-carousel/lib/alice-carousel.css\";\r\n// import { useStateValue } from \"../Util/StateProvider\";\r\n\r\n// function setToken(userToken) {\r\n//   localStorage.setItem('accessToken', JSON.stringify(userToken));\r\n// }\r\n\r\nfunction getToken() {\r\n  const tokenString = localStorage.getItem(\"accessToken\");\r\n\r\n  const userToken = JSON.parse(tokenString);\r\n  // userToken);\r\n  return userToken?.token;\r\n}\r\n\r\nconst getUserInfo = () => {\r\n  const userInfo = localStorage.getItem(\"userInfo\");\r\n  const user = JSON.parse(userInfo);\r\n  return user?.user.email;\r\n};\r\n\r\nfunction Application() {\r\n  // const [token, setToken] = useState();\r\n\r\n  // const token = getToken();\r\n\r\n  // if(!token) {\r\n  //   return <Login setToken={setToken} />\r\n  // }\r\n\r\n  return (\r\n    <Router>\r\n      <Route path=\"/\" exact>\r\n        <Landing />\r\n      </Route>\r\n      <Route path=\"/login\" exact>\r\n        <Login />\r\n      </Route>\r\n      <Route path=\"/account/investor/new\" exact>\r\n        <Register />\r\n      </Route>\r\n\r\n      <Route path=\"/password-reset\" exact>\r\n        <Reset />\r\n      </Route>\r\n      <Route path=\"/app/\">\r\n        <div className=\"container\">\r\n          <Header />\r\n          <Sidebar />\r\n          {/* <Widgets /> */}\r\n\r\n          <Switch>\r\n            <Route path=\"/app/dashboard\" exact>\r\n              <Dashboard />\r\n            </Route>\r\n            <Route path=\"/app/investor/deposit\" exact>\r\n              <Deposits />\r\n            </Route>\r\n            <Route path=\"/app/profile/:id\" exact>\r\n              <Profile />\r\n            </Route>\r\n            <Route path=\"/app/accounts/investors\" exact>\r\n              <Investors />\r\n            </Route>\r\n            <Route path=\"/app/accounts/admins\" exact>\r\n              <Administrators />\r\n            </Route>\r\n            <Route path=\"/app/account/:id\" exact>\r\n              <InvestorDetails />\r\n            </Route>\r\n            <Route path=\"/app/plans\" exact>\r\n              <Plans />\r\n            </Route>\r\n            <Route path=\"/app/admin/new\" exact>\r\n              <CreateAdministrator />\r\n            </Route>\r\n            {/* <Route path=\"/app/new-loan\" exact>\r\n              <NewLoan />\r\n            </Route>\r\n            <Route path=\"/app/loans\" exact>\r\n              <Loans />\r\n            </Route>\r\n            <Route path=\"/app/accounts\" exact>\r\n              <Accounts />\r\n            </Route>\r\n            <Route path=\"/app/account/:id\" exact>\r\n              <AccountDetails />\r\n            </Route>\r\n            <Route path=\"/app/account/:id/statement\" exact>\r\n              <CustomerStatement />\r\n            </Route>\r\n            <Route path=\"/app/create-admin\" exact>\r\n              <Administrator />\r\n            </Route> */}\r\n          </Switch>\r\n        </div>\r\n      </Route>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Application;\r\n","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Auth/Reset.js",[],"/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Pages/Plans.js",["176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194"],"import React, { useState, useEffect } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport axios from \"axios\";\nimport API from \"../../Util/API\";\n// import { Link, useHistory, useNavigate } from \"react-router-dom\";\n\nimport { useLoading, Oval } from \"@agney/react-loading\";\nimport { format } from \"date-fns\";\n// import numberFormat from \"../../Util/CurrencyFormatter\";\nimport BASE_URL from \"../../Util/API\";\n// import { useParams, useLocation } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./Pages.scss\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\n\nfunction Plans() {\n  const history = useHistory();\n\n  const navigateHome = () => {\n    history.push(\"/app/dashboard\");\n  };\n  return (\n    <div className=\"account__detail\">\n      <section className=\"summary al-base\">\n        <div class=\"pricingTable\">\n          <h2 class=\"pricingTable-title\">Find a plan that's right for you.</h2>\n          <h3 class=\"pricingTable-subtitle\">\n            Every plan takes 14-days before maturity.\n          </h3>\n\n          <ul class=\"pricingTable-firstTable\">\n            <li class=\"pricingTable-firstTable_table\">\n              <h1 class=\"pricingTable-firstTable_table__header\">Easy </h1>\n              <p class=\"pricingTable-firstTable_table__pricing\">\n                <span>%</span>\n                <span>10</span>\n                <span>ROI</span>\n              </p>\n              <ul class=\"pricingTable-firstTable_table__options\">\n                <li>\n                  Minimum Deposit <strong>$300</strong>\n                </li>\n                <li>14 days Maturity Period</li>\n                <li> ROI: 10% of Deposit</li>\n              </ul>\n              <button\n                class=\"pricingTable-firstTable_table__getstart\"\n                onClick={navigateHome}>\n                Get Started Now\n              </button>\n            </li>\n            <li class=\"pricingTable-firstTable_table\">\n              <h1 class=\"pricingTable-firstTable_table__header\">Deluxe </h1>\n              <p class=\"pricingTable-firstTable_table__pricing\">\n                <span>%</span>\n                <span>15</span>\n                <span>ROI</span>\n              </p>\n              <ul class=\"pricingTable-firstTable_table__options\">\n                <li>\n                  Minimum Deposit <strong>$1,000</strong>\n                </li>\n                <li>14 days Maturity Period</li>\n                <li> ROI: 15% of Deposit</li>\n                <li>Take Booking Online</li>\n                <li>24/7 Support Service</li>\n              </ul>\n              <button\n                class=\"pricingTable-firstTable_table__getstart\"\n                onClick={navigateHome}>\n                Get Started Now\n              </button>\n            </li>\n            <li class=\"pricingTable-firstTable_table\">\n              <h1 class=\"pricingTable-firstTable_table__header\">Mega </h1>\n              <p class=\"pricingTable-firstTable_table__pricing\">\n                <span>%</span>\n                <span>20</span>\n                <span>ROI</span>\n              </p>\n              <ul class=\"pricingTable-firstTable_table__options\">\n                <li>\n                  Minimum Deposit <strong>$5,000</strong>\n                </li>\n                <li>14 days Maturity Period</li>\n                <li> ROI: 20% of Deposit</li>\n                <li>High Priority Emails</li>\n                <li>24/7 Support Service</li>\n              </ul>\n              <button\n                class=\"pricingTable-firstTable_table__getstart\"\n                onClick={navigateHome}>\n                Get Started Now\n              </button>\n            </li>\n          </ul>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Plans;\n","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Pages/Landing.js",["195","196","197","198","199","200","201"],"/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/widgets/Widgets.js",[],"/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Auth/Register.js",["202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218"],"import React from \"react\";\nimport { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Modal from \"@mui/material/Modal\";\nimport Box from \"@mui/material/Box\";\nimport MiniLoader from \"../../Util/Loader\";\nimport BASE_URL from \"../../Util/API\";\nimport logo from \"../../Assets/imgs/Git-logo.png\";\nimport axios from \"axios\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Select from \"@mui/material/Select\";\nimport Countries from \"../../Util/Countries.json\";\n// import logo from '../../Assets/imgs/logo.svg';\nimport \"./auth.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ErrorToaster } from \"../../Util/Toaster\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 500,\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n};\n\nfunction Register() {\n  // const [state , dispatch] = useStateValue();\n  const [first_name, setFirstName] = useState(\"\");\n  const [regSuccessReg, setSuccessReg] = useState(false);\n  const [last_name, setLastName] = useState(\"\");\n  const [email, setUsername] = useState(\"\");\n  const [financial_professional, setFinancialProfessional] = useState(false);\n  const [regSuccessfulModal, setRegSuccessfulModal] = useState(false);\n  const [phone_1, setContact] = useState(\"\");\n  const [meansOfID, setMeansOfID] = useState(\"\");\n  const [country, setCountry] = useState(\"United States\");\n  const [open, setOpen] = useState(true);\n  const handleClose = () => setOpen(false);\n  const [user, setUser] = useState({});\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const [toaster, setToaster] = useState(false);\n  const [msg, setMessage] = useState(\"\");\n  const br = \"<br/>\";\n\n  const submitHandler = async (e) => {\n    setLoading(true);\n    e.preventDefault();\n    if (!email || !first_name || !last_name || !phone_1 || !country) {\n      setMessage(\"All fields are required!\");\n      setLoading(false);\n      return false;\n    }\n    axios\n      .post(`${BASE_URL}/user/create`, {\n        email,\n        first_name,\n        last_name,\n        phone_1,\n        meansOfID,\n        country,\n      })\n      .then((response) => {\n        // check if username or telephone number exist in the db to avoid duplicates\n        setLoading(false);\n        // response);\n        const {\n          data: { accessToken },\n        } = response;\n        axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\n        localStorage.setItem(\"accessToken\", accessToken);\n        localStorage.setItem(\"userInfo\", JSON.stringify(response));\n        // history.push('/app/dashboard');\n        setSuccessReg(true);\n        setRegSuccessfulModal(true);\n      })\n      .catch((err) => {\n        // err.error);\n        setMessage(`Oops! Something isn't right. Double checkup all fields`);\n        setLoading(false);\n      });\n  };\n\n  function onEnter(e) {\n    e.stopPropagation();\n    if (e.key === \"Enter\") {\n      submitHandler();\n    }\n  }\n\n  return (\n    <div className=\"login\">\n      <div className=\"login__badge\">\n        <div className=\"logo__section\"></div>\n      </div>\n      <div className=\"login__section\">\n        <div className=\"register__container\">\n          <img src={logo} className=\"logo\" alt=\"Logo\" /> <br />\n          <span className=\"sub-title\">\n            Creating an Account is as easy as ABC\n          </span>\n          <form className=\"login__form\" onSubmit={submitHandler}>\n            <div className=\"form mb-lg mtb-10\">\n              <input\n                type=\"text\"\n                className=\"page-form f-11\"\n                placeholder=\" \"\n                value={first_name}\n                autoComplete=\"off\"\n                onChange={(e) => setFirstName(e.target.value)}\n                required\n              />\n              <label htmlFor=\"username\" className=\"label-name floating__label\">\n                <span className=\"content-name\">First Name</span>\n              </label>\n            </div>\n            <div className=\"form mb-lg mtb-10\">\n              <input\n                type=\"text\"\n                className=\"page-form f-11\"\n                placeholder=\" \"\n                value={last_name}\n                autoComplete=\"off\"\n                onChange={(e) => setLastName(e.target.value)}\n                required\n              />\n              <label htmlFor=\"Last Name\" className=\"label-name floating__label\">\n                <span className=\"content-name\">Last Name</span>\n              </label>\n            </div>\n            <div className=\"form mb-lg mtb-10\">\n              <input\n                type=\"email\"\n                className=\"page-form f-11\"\n                placeholder=\" \"\n                value={email}\n                autoComplete=\"off\"\n                onChange={(e) => setUsername(e.target.value)}\n                required\n              />\n              <label htmlFor=\"username\" className=\"label-name floating__label\">\n                <span className=\"content-name\">Email</span>\n              </label>\n            </div>\n            <div className=\"form mb-lg mtb-10\">\n              <input\n                type=\"number\"\n                className=\"page-form f-11\"\n                placeholder=\" \"\n                value={phone_1}\n                autoComplete=\"off\"\n                onChange={(e) => setContact(e.target.value)}\n                required\n              />\n              <label htmlFor=\"Contact\" className=\"label-name floating__label\">\n                <span className=\"content-name\">Phone Number</span>\n              </label>\n            </div>\n\n            <div className=\"form mb-lg mtb-10\">\n              <input\n                type=\"file\"\n                className=\"page-form f-11\"\n                placeholder=\" \"\n                name=\"meansOfID\"\n                value={meansOfID}\n                autoComplete=\"off\"\n                onChange={(e) => setMeansOfID(e.target.value)}\n                required\n              />\n              <label htmlFor=\"Contact\" className=\"label-name floating__label\">\n                <span className=\"content-name\">\n                  Upload Valid means of ID (Voters Card, National ID, Driver's\n                  Licence)\n                </span>\n              </label>\n            </div>\n\n            <div className=\"form\">\n              <FormControl\n                variant=\"standard\"\n                style={{ textAlign: \"left!important\" }}>\n                <InputLabel id=\"\" className=\"label-name-select\">\n                  Region\n                </InputLabel>\n                <Select\n                  labelId=\"\"\n                  id=\"\"\n                  label=\"country\"\n                  name=\"country\"\n                  onChange={(e) => setCountry(e.target.value)}\n                  value={country}\n                  color=\"success\">\n                  <MenuItem value=\"\">\n                    <em>Select Region</em>\n                  </MenuItem>\n                  {Countries.map((country) => {\n                    return (\n                      <MenuItem key={country.code} value={country.name}>\n                        {\" \"}\n                        {country.name}{\" \"}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n            </div>\n            {msg && <p className=\"typical-error\"> {msg}</p>}\n            {success && <p className=\"typical-success\">{msg}</p>}\n            <button\n              type=\"submit\"\n              className=\"login-btn btn-primary\"\n              disabled={loading}>\n              {/* { loading && <MiniLoader/> } */}\n              {!loading && <span>Create Account</span>}\n              {loading && <span> Submitting...</span>}\n            </button>\n            {/* <p className=\"label-name\">Don't have an account yet?</p> */}\n            <Link to=\"/login\">\n              <span className=\"sub-title\">Back to Login</span>\n            </Link>\n          </form>\n        </div>\n      </div>\n\n      <span className=\"sub-title copyright\">\n        Dividend Global! &copy; {new Date().getFullYear()}. All rights reserved\n      </span>\n      {toaster && <ToastContainer />}\n\n      {regSuccessReg && (\n        <Modal\n          open={open}\n          // onClose={handleClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\">\n          <Box sx={style}>\n            <p>\n              {\" \"}\n              Awesome! Registration was successful. <br />\n              An email has been sent to {email} containing your password. Return\n              to <Link to=\"/login\">Login</Link>\n            </p>\n          </Box>\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default Register;\n","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Pages/Deposits.js",["219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236"],"import React, { useState, useEffect } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport axios from \"axios\";\nimport { Link, useHistory, useNavigate } from \"react-router-dom\";\nimport { useLoading, Oval } from \"@agney/react-loading\";\nimport { format } from \"date-fns\";\nimport numberFormat from \"../../Util/CurrencyFormatter\";\nimport BASE_URL from \"../../Util/API\";\nimport API from \"../../Util/API\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { CLoadingButton } from \"@coreui/react-pro\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./Pages.scss\";\nimport { RestorePageSharp } from \"@material-ui/icons\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 800,\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n};\n\nfunction Deposits() {\n  const { id } = useParams();\n  const location = useLocation();\n  const [user, setUser] = useState([]);\n  const [toaster, setToaster] = useState(false);\n  const [loader, setLoader] = useState(true);\n  const [superAdmin, setSuperAdmin] = useState(false);\n  const [allDeposits, setAllDeposits] = useState([]);\n  const [allInvestors, setAllInvestors] = useState([]);\n  const { indicatorEl } = useLoading({\n    loading: true,\n    indicator: <Oval width=\"50\" />,\n    loaderProps: {\n      valueText: \"Please wait, loading records\",\n      style: { position: \"absolute\", left: \"50%\", top: \"50%\" },\n    },\n  });\n  const history = useHistory();\n\n  useEffect(() => {\n    getAllInvestors();\n  }, []);\n\n  const getAllInvestors = () => {\n    // let users = [];\n    axios\n      .get(`${BASE_URL}/users`)\n      .then((response) => {\n        // response);\n        response.data.results.map((user) => {\n          if (user.investments.length > 0) {\n            setAllDeposits((allDeposits) => [...allDeposits, user]);\n          }\n        });\n        // allDeposits);\n      })\n      .catch((error) => {\n        // error);\n        toast.error(error.message);\n      });\n  };\n\n  const handleClick = (id) => {\n    history.push(`/app/account/${id}`);\n    // id);\n  };\n\n  return (\n    <div className=\"account__detail\">\n      <div className=\"d-flex\">\n        <h4 className=\"summary__title t-xl m-5em\"> Customers Deposit</h4>\n        {/* <button className=\"btn bg__green pull-right bold\" name=\"newLoan\" onClick={() => handleNewFormOpen()}> New Investment </button> */}\n      </div>\n      <section className=\"summary al-base\">\n        {/* <div className=\"summary__left w-70\"> */}\n        <div className=\"header__info\">\n          <section className=\"row\">\n            {allDeposits.length === 0 && !loader && (\n              <p className=\"empty__record\">Oops! No Deposits yet...</p>\n            )}\n            <TableContainer component={Paper}>\n              <Table aria-label=\"collapsible table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell />\n                    <TableCell>Investor</TableCell>\n                    <TableCell>Email</TableCell>\n                    <TableCell>Phone</TableCell>\n                    <TableCell>Country</TableCell>\n                    <TableCell>Investment</TableCell>\n                    {/* <TableCell>duration</TableCell> */}\n                    <TableCell>Amount Due</TableCell>\n                    <TableCell> Date</TableCell>\n                    <TableCell>Status</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {allDeposits?.map((deposit) => {\n                    return (\n                      <TableRow\n                        sx={{ \"& > *\": { borderBottom: \"unset\" } }}\n                        key={deposit.id}\n                        onClick={() => handleClick(deposit.id)}>\n                        <TableCell></TableCell>\n                        <TableCell className=\"title-case\">\n                          {/* {deposit?.ref_no}  */}\n                          {deposit.first_name} {deposit.last_name}\n                        </TableCell>\n                        <TableCell>{deposit.email}</TableCell>\n                        <TableCell>{deposit.phone_1}</TableCell>\n                        <TableCell>{deposit.country}</TableCell>\n                        <TableCell>\n                          {numberFormat(\n                            deposit.investments[deposit.investments.length - 1]\n                              ?.amount\n                          )}\n                        </TableCell>\n                        <TableCell>\n                          {numberFormat(\n                            deposit?.investments[deposit.investments.length - 1]\n                              ?.amount *\n                              0.3 +\n                              deposit.investments[\n                                deposit.investments.length - 1\n                              ]?.amount\n                          )}\n                        </TableCell>\n                        <TableCell>\n                          {format(new Date(deposit.created_at), \"PP\")}\n                        </TableCell>\n                        <TableCell className=\"title-case\">\n                          {\n                            deposit.investments[deposit.investments.length - 1]\n                              ?.status\n                          }\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </section>\n        </div>\n      </section>\n\n      {toaster && <ToastContainer />}\n    </div>\n  );\n}\n\nexport default Deposits;\n","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Builder/Sidebar.js",["237","238","239","240","241"],"import React, { useState, useEffect } from \"react\";\r\nimport SidebarRow from \"./SidebarRow\";\r\n// import AppsIcon from '@material-ui/icons/Apps';\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\r\nimport LocalLibraryIcon from \"@material-ui/icons/LocalLibrary\";\r\nimport SpeedIcon from \"@material-ui/icons/Speed\";\r\nimport AdminPanelSettingsIcon from \"@mui/icons-material/AdminPanelSettings\";\r\nimport GroupIcon from \"@mui/icons-material/Group\";\r\nimport CreditScoreIcon from \"@mui/icons-material/CreditScore\";\r\nimport \"./builder.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AccountBalanceWalletIcon from \"@mui/icons-material/AccountBalanceWallet\";\r\n\r\nfunction Sidebar() {\r\n  const [user, setUser] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getUserInfo();\r\n    return () => {\r\n      setUser(\"\");\r\n    };\r\n  }, []);\r\n\r\n  const getUserInfo = () => {\r\n    const userInfo = localStorage.getItem(\"userInfo\");\r\n    const user = JSON.parse(userInfo);\r\n    const base64Url = user.data.accessToken.split(\".\")[1];\r\n    const base64 = base64Url.replace(\"-\", \"+\").replace(\"_\", \"/\");\r\n    // JSON.parse(window.atob(base64)))\r\n    setUser(JSON.parse(window.atob(base64)));\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <SidebarRow path=\"/app/dashboard\" Icon={SpeedIcon} title=\"Dashboard\" />\r\n      {/* <SidebarRow path=\"/app/loans\" Icon={AccountBalanceWalletIcon} title=\"Deposits\"/> */}\r\n      {user?.role === \"admin\" && (\r\n        <>\r\n          <SidebarRow\r\n            path=\"/app/investor/deposit\"\r\n            Icon={CreditScoreIcon}\r\n            title=\"Deposits\"\r\n          />\r\n          <SidebarRow\r\n            path=\"/app/accounts/investors\"\r\n            Icon={GroupIcon}\r\n            title=\"Investors\"\r\n          />\r\n          <SidebarRow\r\n            path=\"/app/accounts/admins\"\r\n            Icon={GroupIcon}\r\n            title=\"Admins\"\r\n          />\r\n          <SidebarRow\r\n            path=\"/app/admin/new\"\r\n            Icon={AdminPanelSettingsIcon}\r\n            title=\"New Admin\"\r\n          />\r\n          <SidebarRow\r\n            path=\"/app/messaging\"\r\n            Icon={EmailIcon}\r\n            title=\"Messaging\"\r\n          />\r\n        </>\r\n      )}\r\n      <SidebarRow path=\"/app/plans\" Icon={LocalLibraryIcon} title=\"Plans\" />\r\n      <SidebarRow\r\n        path=\"/app/profile/${user.id}\"\r\n        Icon={AccountCircleIcon}\r\n        title=\"My Profile\"\r\n      />\r\n      <SidebarRow\r\n        Icon={LogoutIcon}\r\n        onClick={() => {\r\n          localStorage.removeItem(\"userInfo\");\r\n          history.push(\"/\");\r\n        }}\r\n        title=\"LogOut\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Pages/UserProfile.js",["242","243","244","245","246","247","248","249","250","251"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useLocation, useHistory } from \"react-router-dom\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport BASE_URL from \"../../Util/API\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"./Pages.scss\";\r\n\r\nfunction Profile() {\r\n  const [user, setUser] = useState([]);\r\n  const [id, setId] = useState();\r\n\r\n  const history = useHistory();\r\n  const userDetails = {\r\n    wallet_type: \"\",\r\n    wallet_info: \"\",\r\n  };\r\n  const [userProfile, setUserProfile] = useState(userDetails);\r\n  const { wallet_type, wallet_info } = userProfile;\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserProfile({ ...userProfile, [name]: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserInfo();\r\n  }, []);\r\n\r\n  const submitHandler = async (e) => {\r\n    // setLoading(true);\r\n    e.preventDefault();\r\n    axios\r\n      .put(`${BASE_URL}/user/profile/${id}`, {\r\n        ...userProfile,\r\n      })\r\n      .then((response) => {\r\n        // setLoading(false);\r\n        // response);\r\n      })\r\n      .catch((err) => {\r\n        // err);\r\n        // setLoading(false);\r\n      });\r\n  };\r\n\r\n  const getUserInfo = () => {\r\n    const userInfo = localStorage.getItem(\"userInfo\");\r\n    const user = JSON.parse(userInfo);\r\n    const base64Url = user.data.accessToken.split(\".\")[1];\r\n    const base64 = base64Url.replace(\"-\", \"+\").replace(\"_\", \"/\");\r\n    let userId = JSON.parse(window.atob(base64)).id;\r\n    // JSON.parse(window.atob(base64)))\r\n    // userId);\r\n    history.push(`/app/profile/${userId}`);\r\n    requestForCurrentUserData(userId);\r\n    setId(userId);\r\n  };\r\n\r\n  const requestForCurrentUserData = async (id) => {\r\n    await axios\r\n      .get(`${BASE_URL}/user/${id}`)\r\n      .then((response) => {\r\n        // response);\r\n        setUser(response.data.results);\r\n      })\r\n      .catch((error) => {\r\n        // error);\r\n        toast.error(error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-content\">\r\n      <section className=\"row page__header\">\r\n        <h1 className=\"tab__title ml-l-5\">Manage Profile</h1>\r\n        <span className=\"headsup__info\">\r\n          {\" \"}\r\n          (All fields marked with <span className=\"bold\"> asterisks </span> are\r\n          required)\r\n        </span>\r\n      </section>\r\n\r\n      <form className=\"loan-form p-lg\" onSubmit={submitHandler}>\r\n        <h1 className=\"tab__title f-11\">Personal Information</h1>\r\n        <section className=\"row\">\r\n          <div className=\"form\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"page-form\"\r\n              autoComplete=\"off\"\r\n              placeholder=\" \"\r\n              name=\"first_name\"\r\n              disabled\r\n              value={user.first_name}\r\n              required\r\n            />\r\n            <label htmlFor=\"First Name\" className=\"label-name\">\r\n              <span className=\"content-name required\">First Name</span>\r\n            </label>\r\n          </div>\r\n          <div className=\"form\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"page-form\"\r\n              autoComplete=\"off\"\r\n              placeholder=\" \"\r\n              disabled\r\n              value={user.last_name}\r\n              name=\"last_name\"\r\n              required\r\n            />\r\n            <label htmlFor=\"last_name\" className=\"label-name\">\r\n              <span className=\"content-name required\">Last Name</span>\r\n            </label>\r\n          </div>\r\n          <div className=\"form\"></div>\r\n        </section>\r\n        <section className=\"row\">\r\n          <div className=\"form\">\r\n            <input\r\n              type=\"email\"\r\n              className=\"page-form\"\r\n              autoComplete=\"off\"\r\n              placeholder=\" \"\r\n              disabled\r\n              value={user.email}\r\n            />\r\n            <label htmlFor=\"email\" className=\"label-name\">\r\n              <span className=\"content-name\">Email</span>\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"form\">\r\n            <input\r\n              type=\"state_of_residence\"\r\n              className=\"page-form\"\r\n              autoComplete=\"off\"\r\n              placeholder=\" \"\r\n              disabled\r\n              value={user.phone_1}\r\n            />\r\n            <label htmlFor=\"state_of_residence\" className=\"label-name\">\r\n              <span className=\"content-name\">Primary Telephone</span>\r\n            </label>\r\n          </div>\r\n          <div className=\"form\">\r\n            <input\r\n              type=\"state_of_residence\"\r\n              className=\"page-form\"\r\n              autoComplete=\"off\"\r\n              placeholder=\" \"\r\n              disabled\r\n              value={user.country}\r\n            />\r\n            <label htmlFor=\"state_of_residence\" className=\"label-name\">\r\n              <span className=\"content-name\">Country</span>\r\n            </label>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"row\">\r\n          <div className=\"form\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"page-form\"\r\n              autoComplete=\"off\"\r\n              placeholder=\" \"\r\n              name=\"current_password\"\r\n              // value={current_password}\r\n              required\r\n            />\r\n            <label htmlFor=\"First Name\" className=\"label-name\">\r\n              <span className=\"content-name required\">Current Password</span>\r\n            </label>\r\n          </div>\r\n          <div className=\"form\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"page-form\"\r\n              autoComplete=\"off\"\r\n              placeholder=\" \"\r\n              // value={new_password}\r\n              name=\"new_password\"\r\n              required\r\n            />\r\n            <label htmlFor=\"new_password\" className=\"label-name\">\r\n              <span className=\"content-name required\">New Password</span>\r\n            </label>\r\n          </div>\r\n          <div className=\"form\"></div>\r\n        </section>\r\n        <h1 className=\"tab__title f-11\">Wallet Information</h1>\r\n        <section className=\"row\">\r\n          <div className=\"form\">\r\n            <FormControl variant=\"standard\">\r\n              <Select\r\n                labelId=\"\"\r\n                id=\"\"\r\n                label=\"Wallet Type\"\r\n                name=\"wallet_type\"\r\n                onChange={handleInputChange}\r\n                value={user.wallet_type}\r\n                color=\"success\">\r\n                <MenuItem value=\"\">\r\n                  <em>Select Wallet Type</em>\r\n                </MenuItem>\r\n                <MenuItem value=\"BitCoin\"> BitCoin </MenuItem>\r\n                <MenuItem value=\"BitCoin 1\"> BitCoin </MenuItem>\r\n                <MenuItem value=\"BitCoin 2\"> BitCoin </MenuItem>\r\n                <MenuItem value=\"BitCoin 3\"> BitCoin </MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div className=\"form\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"page-form\"\r\n              autoComplete=\"off\"\r\n              placeholder=\" \"\r\n              onChange={handleInputChange}\r\n              value={user.wallet_info}\r\n              name=\"wallet_address\"\r\n              required\r\n            />\r\n            <label htmlFor=\"wallet_address\" className=\"label-name\">\r\n              <span className=\"content-name required\">Wallet Address</span>\r\n            </label>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn ml-0\">\r\n            Update Wallet{\" \"}\r\n          </button>\r\n          <button className=\"btn bg__green\">Save Password</button>\r\n        </section>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Pages/Administrators.js",["252","253","254","255","256","257","258"],"import React, { useState, useEffect } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport axios from \"axios\";\nimport { useLoading, Oval } from \"@agney/react-loading\";\nimport { format } from \"date-fns\";\nimport BASE_URL from \"../../Util/API\";\nimport API from \"../../Util/API\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./Pages.scss\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 800,\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n};\n\nfunction Administrators() {\n  const [allAdmins, setAllAdmins] = useState([]);\n  const { indicatorEl } = useLoading({\n    loading: true,\n    indicator: <Oval width=\"50\" />,\n    loaderProps: {\n      valueText: \"Please wait, loading records\",\n      style: { position: \"absolute\", left: \"50%\", top: \"50%\" },\n    },\n  });\n\n  useEffect(() => {\n    // set loading to true\n    // fetchUserDetails();\n    getAllAdministrators();\n    // paidInTotal();\n    // location);\n  }, []);\n\n  const getAllAdministrators = () => {\n    let tempAdmins = [];\n    axios\n      .get(`${BASE_URL}/users`)\n      .then((response) => {\n        // response);\n        let users = response.data.results;\n        users.map((user) => {\n          if (user.role == \"admin\") {\n            setAllAdmins((allAdmins) => [...allAdmins, user]);\n          }\n        });\n      })\n      .catch((error) => {\n        // error);\n        toast.error(error.message);\n      });\n  };\n\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  return (\n    <div className=\"account__detail\">\n      <div className=\"d-flex\">\n        <h4 className=\"summary__title t-xl m-5em\">System Administrators</h4>\n        {/* <button className=\"btn bg__green pull-right bold\"> Create New Account </button> */}\n      </div>\n      <section className=\"summary al-base\">\n        <div className=\"header__info\">\n          <section className=\"row\">\n            {allAdmins.length === 0 && (\n              <p className=\"empty__record\">Oops! There are no records yet...</p>\n            )}\n            <TableContainer component={Paper}>\n              <Table aria-label=\"collapsible table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell />\n                    <TableCell>S/N</TableCell>\n                    <TableCell>First Name</TableCell>\n                    <TableCell>Last Name</TableCell>\n                    <TableCell>Email </TableCell>\n                    <TableCell> Role</TableCell>\n                    <TableCell> Registered</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {allAdmins?.map((admin, index) => {\n                    return (\n                      <TableRow\n                        sx={{ \"& > *\": { borderBottom: \"unset\" } }}\n                        key={admin.id}>\n                        <TableCell></TableCell>\n                        <TableCell>{index + 1}</TableCell>\n                        <TableCell>\n                          {capitalizeFirstLetter(admin?.first_name)}\n                        </TableCell>\n                        <TableCell>\n                          {capitalizeFirstLetter(admin?.last_name)}\n                        </TableCell>\n                        <TableCell>{admin?.email}</TableCell>\n                        <TableCell>\n                          {capitalizeFirstLetter(admin?.role)}\n                        </TableCell>\n                        <TableCell>\n                          {\" \"}\n                          {format(new Date(admin?.created_at), \"PP\")}{\" \"}\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </section>\n        </div>\n        {/* </div> */}\n      </section>\n    </div>\n  );\n}\n\nexport default Administrators;\n","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Pages/Investors.js",["259","260","261","262","263","264","265","266","267"],"import React, { useState, useEffect } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport axios from \"axios\";\nimport API from \"../../Util/API\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useLoading, Oval } from \"@agney/react-loading\";\nimport { format } from \"date-fns\";\n// import numberFormat from \"../../Util/CurrencyFormatter\";\nimport BASE_URL from \"../../Util/API\";\n// import { useParams, useLocation } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./Pages.scss\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 800,\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n};\n\nfunction Investors() {\n  const [allInvestors, setAllInvestors] = useState([]);\n  const { indicatorEl } = useLoading({\n    loading: true,\n    indicator: <Oval width=\"50\" />,\n    loaderProps: {\n      valueText: \"Please wait, loading records\",\n      style: { position: \"absolute\", left: \"50%\", top: \"50%\" },\n    },\n  });\n\n  const history = useHistory();\n  useEffect(() => {\n    // set loading to true\n    // fetchUserDetails();\n    getAllInvestors();\n    // paidInTotal();\n    // location);\n  }, []);\n\n  const getAllInvestors = () => {\n    axios\n      .get(`${BASE_URL}/users`)\n      .then((response) => {\n        // response);\n        let users = response.data.results;\n        users.map((user) => {\n          if (user.role == \"user\") {\n            setAllInvestors((allInvestors) => [...allInvestors, user]);\n          }\n        });\n        // setAllInvestors(response.data.results);\n        // toast.success(response.data.message);\n      })\n      .catch((error) => {\n        // error);\n        toast.error(error.message);\n      });\n  };\n\n  const handleClick = (id) => {\n    history.push(`/app/account/${id}`);\n    // id);\n  };\n\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  return (\n    <div className=\"account__detail\">\n      <div className=\"d-flex\">\n        <h4 className=\"summary__title t-xl m-5em\">All Investors</h4>\n        {/* <button className=\"btn bg__green pull-right bold\"> Create New Account </button> */}\n      </div>\n      <section className=\"summary al-base\">\n        <div className=\"header__info\">\n          <section className=\"row\">\n            {allInvestors === 0 && (\n              <p className=\"empty__record\">Oops! There are no records yet...</p>\n            )}\n            <TableContainer component={Paper}>\n              <Table aria-label=\"collapsible table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell />\n                    <TableCell>S/N</TableCell>\n                    <TableCell>First Name</TableCell>\n                    <TableCell>Last Name</TableCell>\n                    <TableCell>Telephone</TableCell>\n                    <TableCell>Email </TableCell>\n                    <TableCell> Role</TableCell>\n                    <TableCell> Registered</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {allInvestors?.map((investor, index) => {\n                    return (\n                      <TableRow\n                        sx={{ \"& > *\": { borderBottom: \"unset\" } }}\n                        onClick={() => handleClick(investor.id)}\n                        key={investor.id}>\n                        <TableCell></TableCell>\n                        <TableCell>{index + 1}</TableCell>\n                        <TableCell>\n                          {capitalizeFirstLetter(investor?.first_name)}\n                        </TableCell>\n                        <TableCell>\n                          {capitalizeFirstLetter(investor?.last_name)}\n                        </TableCell>\n                        <TableCell>{investor?.phone_1}</TableCell>\n                        <TableCell>{investor?.email}</TableCell>\n                        <TableCell>\n                          {investor?.role === \"user\"\n                            ? \"Investor\"\n                            : capitalizeFirstLetter(investor?.role)}\n                        </TableCell>\n                        <TableCell>\n                          {\" \"}\n                          {format(new Date(investor?.created_at), \"PP\")}{\" \"}\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </section>\n        </div>\n        {/* </div> */}\n      </section>\n    </div>\n  );\n}\n\nexport default Investors;\n","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Pages/CreateAdministrator.js",["268","269","270","271","272","273","274","275","276","277","278","279"],"import React, { useState, useEffect } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport axios from \"axios\";\nimport { useLoading, Oval } from \"@agney/react-loading\";\nimport { format } from \"date-fns\";\nimport BASE_URL from \"../../Util/API\";\nimport API from \"../../Util/API\";\nimport { useHistory } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./Pages.scss\";\n\nfunction CreateAdministrator() {\n  const adminDetails = {\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  const [adminState, setAdminState] = useState(adminDetails);\n  const { first_name, last_name, email, password } = adminState;\n  const history = useHistory();\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setAdminState({ ...adminState, [name]: value });\n  };\n\n  const handleCreateAdmin = (e) => {\n    e.preventDefault();\n    axios\n      .post(`${BASE_URL}/admin/create`, {\n        ...adminState,\n      })\n      .then((response) => {\n        // response);\n        toast.success(response.data.message);\n        history.push(\"/app/accounts/admins\");\n      })\n      .catch((error) => {\n        // error);\n        toast.error(error.message);\n      });\n  };\n\n  return (\n    <form\n      className=\"loan-form p-lg account__detail\"\n      onSubmit={handleCreateAdmin}>\n      <h1 className=\"tab__title f-11\">Create a New System User</h1>\n      <section className=\"row m-t-xxl\">\n        <div className=\"form\">\n          <input\n            type=\"text\"\n            className=\"page-form\"\n            autoComplete=\"off\"\n            placeholder=\" \"\n            name=\"first_name\"\n            onChange={handleInputChange}\n            value={first_name}\n            required\n          />\n          <label htmlFor=\"First Name\" className=\"label-name\">\n            <span className=\"content-name\">First Name</span>\n          </label>\n        </div>\n        <div className=\"form\">\n          <input\n            type=\"text\"\n            className=\"page-form\"\n            autoComplete=\"off\"\n            placeholder=\" \"\n            name=\"last_name\"\n            onChange={handleInputChange}\n            value={last_name}\n            required\n          />\n          <label htmlFor=\"Last Name\" className=\"label-name\">\n            <span className=\"content-name\">Last Name</span>\n          </label>\n        </div>\n      </section>\n      <section className=\"row\">\n        <div className=\"form\">\n          <input\n            type=\"email\"\n            className=\"page-form\"\n            autoComplete=\"off\"\n            placeholder=\" \"\n            autoCapitalize=\"off\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={email}\n            required\n          />\n          <label htmlFor=\"Email\" className=\"label-name\">\n            <span className=\"content-name\">Email</span>\n          </label>\n        </div>\n        <div className=\"form\">\n          <input\n            type=\"password\"\n            className=\"page-form\"\n            autoComplete=\"off\"\n            placeholder=\" \"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={password}\n          />\n          <label htmlFor=\"Set Password\" className=\"label-name\">\n            <span className=\"content-name\">Set Password</span>\n          </label>\n        </div>\n        <div className=\"form\">\n          <input\n            type=\"password\"\n            className=\"page-form\"\n            autoComplete=\"off\"\n            placeholder=\" \"\n            name=\"confirm_password\"\n            //   onChange={handleInputChange}\n            //   value={confirm_password}\n            required\n          />\n          <label htmlFor=\"Confirm Password\" className=\"label-name\">\n            <span className=\"content-name\">Confirm Password</span>\n          </label>\n        </div>\n      </section>\n\n      <button type=\"submit\" className=\"btn btn-primary pull-right\">\n        {\" \"}\n        Create Administrator\n      </button>\n      {/* <button className=\"btn btn-secondary pull-right\"> previous </button> */}\n      {<ToastContainer />}\n    </form>\n  );\n}\n\nexport default CreateAdministrator;\n","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Auth/Login.js",["280","281","282","283","284","285","286","287","288","289","290","291","292","293"],"// import React from 'react';\r\n// import {useState} from \"react\";\r\n// import { Link, useHistory } from 'react-router-dom';\r\n// import MiniLoader from '../../Util/Loader';\r\n// import API from '../../Util/API';\r\n// import axios from 'axios';\r\n// import logo from '../../Assets/imgs/Git-logo.png';\r\n// import './auth.css'\r\n// import { ToastContainer, toast } from 'react-toastify';\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n// import {ErrorToaster} from '../../Util/Toaster'\r\n\r\n// function Login() {\r\n//     const [username, setUsername] = useState(\"\");\r\n//     const [password, setPassword] = useState(\"\");\r\n//     const [success, setSuccess] = useState(false);\r\n//     const [loading, setLoading] = useState(false);\r\n//     const history = useHistory();\r\n//     const [toaster, setToaster] = useState(false);\r\n//     const [msg, setMessage] = useState(\"\");\r\n\r\n//     const submitHandler = async (e) => {\r\n//         const BASE_URL = 'https://dry-falls-41890.herokuapp.com/api/v1';\r\n//         setLoading(true);\r\n//         e.preventDefault();\r\n//         if(!username || !password){\r\n//             setMessage(\"Username/Password is a required field\");\r\n//             return false\r\n//         }\r\n\r\n//           axios\r\n//       .post(`${BASE_URL}/login`, { username, password })\r\n//       .then((response) => {\r\n//         setLoading(false);\r\n//         response);\r\n//         const data = response.data;\r\n\r\n//         axios.defaults.headers.common.Authorization = `Bearer ${data.accessToken}`;\r\n\r\n//         localStorage.setItem('accessToken', data.accessToken);\r\n//         const storedToken = JSON.parse(localStorage.getItem(\"accessToken\"));\r\n//        const rs = axios.post(`${BASE_URL}/token`, {\r\n//             refresh_token: storedToken.refreshToken,\r\n//           })\r\n\r\n//           const { token, user } = rs.data;\r\n//           localStorage.setItem(\"token\", JSON.stringify(token));\r\n//             localStorage.setItem(\"user\", JSON.stringify(user));\r\n//         return;\r\n//         localStorage.setItem('userInfo', JSON.stringify(response));\r\n\r\n//       })\r\n//       .catch((err) => {\r\n//           err);\r\n//           setMessage(`Oops! Something isn't right. Confirm\r\n//           (a) Your Username/Password and\r\n//           (b) Your Network connectivity`)\r\n//         setLoading(false);\r\n//       });\r\n\r\n//     }\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport MiniLoader from \"../../Util/Loader\";\r\nimport BASE_URL from \"../../Util/API\";\r\nimport API from \"../../Util/API\";\r\nimport axios from \"axios\";\r\nimport {\r\n  InputAdornment,\r\n  // IconButton,\r\n  TextField,\r\n  // VisibilityIcon,\r\n  // VisibilityOffIcon,\r\n} from \"@mui/material\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\nimport logo from \"../../Assets/imgs/Git-logo.png\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"./auth.css\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { ErrorToaster } from \"../../Util/Toaster\";\r\n\r\nfunction Login() {\r\n  // const [state , dispatch] = useStateValue();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [user, setUser] = useState({});\r\n  const [error, setError] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const [toaster, setToaster] = useState(false);\r\n  const [msg, setMessage] = useState(\"\");\r\n  const br = \"<br/>\";\r\n\r\n  const submitHandler = async (e) => {\r\n    // \"hello\");\r\n    const BASE_URL = \"https://investment-app-x8v6.onrender.com/api/v1\";\r\n    setLoading(true);\r\n    e.preventDefault();\r\n    if (!username || !password) {\r\n      setMessage(\"Username/Password is a required field\");\r\n      return false;\r\n    }\r\n\r\n    axios\r\n      .post(`${BASE_URL}/login`, { username, password })\r\n      .then((response) => {\r\n        setLoading(false);\r\n        // response);\r\n        const {\r\n          data: { accessToken },\r\n        } = response;\r\n        const data = response.data;\r\n\r\n        if (response.status == 200) {\r\n          localStorage.setItem(\"userInfo\", JSON.stringify(response));\r\n          history.push(\"/app/dashboard\");\r\n        }\r\n        axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\r\n        localStorage.setItem(\"accessToken\", accessToken);\r\n        axios.defaults.headers.common.Authorization = `Bearer ${data.accessToken}`;\r\n\r\n        localStorage.setItem(\"accessToken\", data.accessToken);\r\n        const storedToken = JSON.parse(localStorage.getItem(\"accessToken\"));\r\n        // localStorage.setItem('accessToken', data.accessToken);\r\n        const rs = axios.post(`${BASE_URL}/token`, {\r\n          refresh_token: storedToken.refreshToken,\r\n        });\r\n\r\n        const { token, user } = rs.data;\r\n        localStorage.setItem(\"token\", JSON.stringify(token));\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        return;\r\n        //   .then((response) => {\r\n        //     response);\r\n        //     const { data } = response;\r\n        //     localStorage.setItem('operator', JSON.stringify(data));\r\n        //     data)\r\n        //   });\r\n      })\r\n      .catch((err) => {\r\n        // err);\r\n        setMessage(`Oops! Something isn't right. Confirm \r\n           (a) Your Username/Password and \r\n           (b) Your Network connectivity`);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  function onEnter(e) {\r\n    e.stopPropagation();\r\n    if (e.key === \"Enter\") {\r\n      submitHandler();\r\n    }\r\n  }\r\n  const handleTogglePasswordVisibility = () => {\r\n    setShowPassword((prevShowPassword) => !prevShowPassword);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__badge\">\r\n        <div className=\"logo__section\"></div>\r\n      </div>\r\n      <div className=\"login__section\">\r\n        <div className=\"login__container\">\r\n          <img src={logo} className=\"logo\" alt=\"Logo\" /> <br />\r\n          <span className=\"sub-title\">Login to Dividend Global</span>\r\n          <form className=\"login__form\" onSubmit={submitHandler}>\r\n            <div className=\"form mb-lg mtb-10\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"page-form f-11\"\r\n                placeholder=\" \"\r\n                value={username}\r\n                autoComplete=\"off\"\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                required\r\n              />\r\n              <label htmlFor=\"username\" className=\"label-name floating__label\">\r\n                <span className=\"content-name\">Username/ID</span>\r\n              </label>\r\n            </div>\r\n            <div className=\"form mtb-10\">\r\n              <TextField\r\n                style={{ width: \"100%\" }}\r\n                className=\"page-form f-11\"\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                // label=\"Password\"\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        onClick={handleTogglePasswordVisibility}\r\n                        edge=\"end\">\r\n                        {showPassword ? (\r\n                          <VisibilityOffIcon />\r\n                        ) : (\r\n                          <VisibilityIcon />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n              {/* <input\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                className=\"page-form f-11\"\r\n                placeholder=\" \"\r\n                value={password}\r\n                autoComplete=\"off\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n              /> */}\r\n\r\n              <label\r\n                htmlFor=\"password\"\r\n                style={{ top: \"-14px\" }}\r\n                className=\"label-name floating__label\">\r\n                <span className=\"content-name\">Security</span>\r\n              </label>\r\n              {/* <IconButton onClick={handleTogglePasswordVisibility}>\r\n                {showPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n              </IconButton> */}\r\n            </div>\r\n            {msg && <p className=\"typical-error\"> {msg}</p>}\r\n            {success && <p className=\"typical-success\">{msg}</p>}\r\n            <Link to=\"/password-reset\">\r\n              <span className=\"sub-title t-right mt-md mb-lg\">Forgotten?</span>\r\n            </Link>\r\n            <button type=\"submit\" className=\"login-btn\" disabled={loading}>\r\n              {/* { loading && <MiniLoader/> } */}\r\n              {!loading && <span>Login</span>}\r\n              {loading && <span> Verifying...</span>}\r\n            </button>\r\n            <span className=\"sub-title\">Don't have an account yet?</span>\r\n            {/* <p className=\"label-name\">Don't have an account yet?</p> */}\r\n            <Link to=\"/account/investor/new\">\r\n              <button className=\"btn btn-secondary\">Open Account </button>\r\n            </Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <span className=\"sub-title copyright\">\r\n        Dividend Global! &copy; {new Date().getFullYear()}. All rights reserved\r\n      </span>\r\n      {toaster && <ToastContainer />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Dashboard/Dashboard.js",["294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GraphInfo from \"../widgets/GraphInfo\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthContext from \"../../Util/AuthContext\";\r\nimport numberFormat from \"../../Util/CurrencyFormatter\";\r\nimport API from \"../../Util/API\";\r\nimport { parse, format, addMonths, formatDistance, subDays } from \"date-fns\";\r\nimport axios from \"axios\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport BASE_URL from \"../../Util/API\";\r\nimport axiosInstance from \"../../Util/axiosInstance\";\r\n\r\nimport \"./dashboard.css\";\r\nimport CryptoCarousel from \"../widgets/Carousel\";\r\nimport CoinsTable from \"../widgets/CoinsTable\";\r\nimport CandlestickChart from \"../widgets/CandleStick\";\r\n\r\nfunction Dashboard() {\r\n  const history = useHistory();\r\n\r\n  const [investors, setInvestors] = useState([]);\r\n  const [systemUsers, setSystemUsers] = useState([]);\r\n  const [totalNoOfDeposit, setTotalNoOfDeposit] = useState(0);\r\n  const [totalNoOfWithdrawals, setTotalNoOfWithdrawals] = useState(0);\r\n  const [topEarners, setTopEarners] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [loggedInUser, setLoggedInUser] = useState(\"\");\r\n  const [disbursed, setDisbursed] = useState([]);\r\n  const [withdrawals, setWithdrawals] = useState([]);\r\n  const [superAdmin, setSuperAdmin] = useState(false);\r\n  const [userData, setUserData] = useState({});\r\n\r\n  useEffect(() => {\r\n    getAllInvestors();\r\n    getUserInfo();\r\n    return () => {\r\n      setInvestors([]);\r\n      setDisbursed([]);\r\n      setWithdrawals([]);\r\n      setSystemUsers([]);\r\n      setTotalNoOfDeposit(0);\r\n      setTotalNoOfWithdrawals(0);\r\n      setTopEarners([]);\r\n    };\r\n  }, []);\r\n\r\n  const getAllInvestors = async () => {\r\n    let tempArr = [];\r\n    let tempWithdrawal = [];\r\n    axios\r\n      .get(`${BASE_URL}/users`)\r\n      .then((response) => {\r\n        // response.data);\r\n        filterAdmins(response.data.results);\r\n        setSystemUsers(response.data.results);\r\n        response.data.results.map((user) => {\r\n          user.investments.map((investment) => {\r\n            tempArr.push(investment);\r\n            setTotalNoOfDeposit(tempArr.length);\r\n            let totalDisbursed = tempArr.reduce(\r\n              (total, currentValue) => (total = total + currentValue.amount),\r\n              0\r\n            );\r\n\r\n            setDisbursed(totalDisbursed);\r\n            //\r\n          });\r\n          user.withdrawals.map((withdrawal) => {\r\n            tempWithdrawal.push(withdrawal);\r\n            // tempWithdrawal);\r\n            setTotalNoOfWithdrawals(tempWithdrawal.length);\r\n            let totalWithdrawals = tempWithdrawal.reduce(\r\n              (total, currentValue) => (total = total + currentValue.amount),\r\n              0\r\n            );\r\n            // totalWithdrawals);\r\n            setWithdrawals(totalWithdrawals);\r\n          });\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        // erro);\r\n        // toast.error(error.message);\r\n      });\r\n  };\r\n\r\n  const requestForCurrentUserData = async (id) => {\r\n    await axios\r\n      .get(`${BASE_URL}/user/${id}`)\r\n      .then((response) => {\r\n        // response);\r\n        // Upload a Profile photo to continue\r\n        setUserData(response.data.results);\r\n      })\r\n      .catch((error) => {\r\n        // error);\r\n        // toast.error(error.message);\r\n      });\r\n  };\r\n\r\n  const getUserInfo = () => {\r\n    const userInfo = localStorage.getItem(\"userInfo\");\r\n    const user = JSON.parse(userInfo);\r\n    const base64Url = user.data.accessToken.split(\".\")[1];\r\n    const base64 = base64Url.replace(\"-\", \"+\").replace(\"_\", \"/\");\r\n    // JSON.parse(window.atob(base64)));\r\n    setLoggedInUser(JSON.parse(window.atob(base64)));\r\n    let userId = JSON.parse(window.atob(base64)).id;\r\n    requestForCurrentUserData(userId);\r\n  };\r\n\r\n  const filterAdmins = (arr) => {\r\n    arr.map((user) => {\r\n      if (user?.role === \"user\") {\r\n        setInvestors((investors) => [...investors, user]);\r\n        if (user.investments.length > 0) {\r\n          setTopEarners((topEarners) => [...topEarners, user]);\r\n        }\r\n      }\r\n      return null;\r\n    });\r\n    // investors);\r\n  };\r\n\r\n  // const handleClick = (loggedInUser)=>{\r\n  //     history.push(`/app/account/${loggedInUser}`);\r\n  // }\r\n  const handleClick = (userID) => {\r\n    history.push(`/app/account/${userID}`);\r\n  };\r\n  return (\r\n    <div className=\"main-content\">\r\n      <h4 className=\"summary__title t-xl title-case\">\r\n        {\" \"}\r\n        Hello {userData.first_name}!{\" \"}\r\n      </h4>\r\n      <p class=\"text-muted text-14\">\r\n        Take a peep on what's happening around your investments\r\n      </p>\r\n\r\n      {loggedInUser.role === \"user\" && (\r\n        <>\r\n          {/* <button type=\"submit\" className=\"btn ml-0\" >New Deposit</button> */}\r\n          <section class=\"card__holder p-4\">\r\n            <div class=\"card\">\r\n              <div class=\"card__icon\">\r\n                <span class=\"table-usr-circle berry\">ND</span>\r\n              </div>\r\n              <div class=\"card__desc\">\r\n                <p class=\"text-muted text-14\">No. of Deposits </p>\r\n                <h3 class=\"text-primal card__value\">\r\n                  {userData?.investments?.length}{\" \"}\r\n                </h3>{\" \"}\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"card\">\r\n              <div class=\"card__icon\">\r\n                <span class=\"table-usr-circle berry\">TD</span>\r\n              </div>\r\n              <div class=\"card__desc\">\r\n                <p class=\"text-muted text-14\">Total Deposits</p>\r\n                <h3 class=\"text-primal card__value\">\r\n                  {userData?.investments?.length !== 0\r\n                    ? numberFormat(\r\n                        userData?.investments?.reduce(\r\n                          (total, currentValue) =>\r\n                            (total = total + currentValue.amount),\r\n                          0\r\n                        )\r\n                      )\r\n                    : 0}\r\n                </h3>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"card\">\r\n              <div class=\"card__icon\">\r\n                <span class=\"table-usr-circle berry\">TW</span>\r\n              </div>\r\n              <div class=\"card__desc\">\r\n                <p class=\"text-muted text-14\">Total Withdrawal</p>\r\n                <h3 class=\"text-primal card__value\">\r\n                  {userData?.withdrawals?.length !== 0\r\n                    ? numberFormat(\r\n                        userData?.withdrawals?.reduce(\r\n                          (total, currentValue) =>\r\n                            (total = total + currentValue.amount),\r\n                          0\r\n                        )\r\n                      )\r\n                    : 0}\r\n                </h3>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              class=\"card\"\r\n              style={{ backgroundColor: \"#00cc99\", color: \"white\" }}>\r\n              <div class=\"card__icon\">\r\n                <span class=\"table-usr-circle cream\">TWB</span>\r\n              </div>\r\n              <div class=\"card__desc\">\r\n                <p class=\"text-muted text-14\">Wallet Balance</p>\r\n                <h3 class=\"text-primal card__value\">\r\n                  {userData.investments?.length !== 0\r\n                    ? numberFormat(\r\n                        userData.investments?.reduce(\r\n                          (total, currentValue) =>\r\n                            (total = total + currentValue.balance),\r\n                          0\r\n                        )\r\n                      )\r\n                    : 0}\r\n                </h3>{\" \"}\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </>\r\n      )}\r\n\r\n      {loggedInUser?.role === \"admin\" && (\r\n        <>\r\n          <section class=\"card__holder p-4\">\r\n            <div class=\"card\">\r\n              <div class=\"card__icon\">\r\n                <span class=\"table-usr-circle berry\">TI</span>\r\n              </div>\r\n              <div class=\"card__desc\">\r\n                <p class=\"text-muted text-14\">Total Investors </p>\r\n                <h3 class=\"text-primal card__value\">\r\n                  {investors?.length}{\" \"}\r\n                </h3>{\" \"}\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"card\">\r\n              <div class=\"card__icon\">\r\n                <span class=\"table-usr-circle berry\">TD</span>\r\n              </div>\r\n              <div class=\"card__desc\">\r\n                <p class=\"text-muted text-14\">Total Deposits</p>\r\n                <h3 class=\"text-primal card__value\"> {totalNoOfDeposit} </h3>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"card\">\r\n              <div class=\"card__icon\">\r\n                <span class=\"table-usr-circle berry\">NW</span>\r\n              </div>\r\n              <div class=\"card__desc\">\r\n                <p class=\"text-muted text-14\">No. of Withdrawal</p>\r\n                <h3 class=\"text-primal card__value\">{totalNoOfWithdrawals}</h3>\r\n              </div>\r\n            </div>\r\n            <div class=\"card\">\r\n              <div class=\"card__icon\">\r\n                <span class=\"table-usr-circle berry\">TW</span>\r\n              </div>\r\n              <div class=\"card__desc\">\r\n                <p class=\"text-muted text-14\">Total Withdrawal</p>\r\n                <h3 class=\"text-primal card__value\">\r\n                  {numberFormat(withdrawals)}\r\n                </h3>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              class=\"card\"\r\n              style={{ backgroundColor: \"#00cc99\", color: \"white\" }}>\r\n              <div class=\"card__icon\">\r\n                <span class=\"table-usr-circle cream\">TD</span>\r\n              </div>\r\n              <div class=\"card__desc\">\r\n                <p class=\"text-muted text-14\">Total Deposits</p>\r\n                <h3 class=\"text-primal card__value\">\r\n                  {\" \"}\r\n                  {numberFormat(disbursed)}{\" \"}\r\n                </h3>{\" \"}\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          <div className=\"graphstat\">\r\n            <GraphInfo />\r\n          </div>\r\n\r\n          <h4 className=\"summary__title t-xl title-case m-l-4\">\r\n            {\" \"}\r\n            This Month Top Earners{\" \"}\r\n          </h4>\r\n          <section className=\"row\">\r\n            <TableContainer component={Paper}>\r\n              <Table aria-label=\"collapsible table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell />\r\n                    <TableCell className=\"rotate\">S/N</TableCell>\r\n                    <TableCell className=\"rotate\">Investor</TableCell>\r\n                    <TableCell className=\"rotate\">Deposited</TableCell>\r\n                    <TableCell className=\"rotate\">Take Home</TableCell>\r\n                    <TableCell className=\"rotate\">Withdrawn</TableCell>\r\n                    <TableCell className=\"rotate\">Balance</TableCell>\r\n                    <TableCell className=\"rotate\">Status</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                {/* {loader && <div className=\"\"> {indicatorEl} </div>} */}\r\n                {topEarners.length === 0 && (\r\n                  <p className=\"no__loans\">Oops! There are no records yet</p>\r\n                )}\r\n                <TableBody>\r\n                  {topEarners?.map((user, index) => {\r\n                    return (\r\n                      <TableRow\r\n                        sx={{ \"& > *\": { borderBottom: \"unset\" } }}\r\n                        onClick={() => handleClick(user?.id)}\r\n                        key={index}>\r\n                        <TableCell></TableCell>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          scope=\"row\"\r\n                          className=\"upper-case\">\r\n                          {index + 1}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {user?.first_name} {user?.last_name}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {\" \"}\r\n                          {numberFormat(\r\n                            user.investments[user.investments.length - 1]\r\n                              ?.amount\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {numberFormat(\r\n                            user?.investments[user.investments.length - 1]\r\n                              ?.amount *\r\n                              0.3 +\r\n                              user.investments[user.investments.length - 1]\r\n                                ?.amount\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {\" \"}\r\n                          {user.withdrawals.length !== 0\r\n                            ? numberFormat(\r\n                                user.withdrawals[user.withdrawals.length - 1]\r\n                                  ?.amount\r\n                              )\r\n                            : 0}{\" \"}\r\n                        </TableCell>\r\n                        {/* <TableCell>{numberFormat(((user?.investments[user.investments.length - 1]?.amount * 0.3) + user.investments[user.investments.length - 1]?.amount)) - 0}</TableCell> */}\r\n                        <TableCell>\r\n                          {\r\n                            // numberFormat(user?.investments[user.investments.length - 1]?.balance)\r\n                            numberFormat(\r\n                              user?.investments[user.investments.length - 1]\r\n                                ?.amount *\r\n                                0.3 +\r\n                                user.investments[user.investments.length - 1]\r\n                                  ?.amount -\r\n                                (user.withdrawals.length !== 0\r\n                                  ? user.withdrawals[\r\n                                      user.withdrawals.length - 1\r\n                                    ]?.amount\r\n                                  : 0)\r\n                            )\r\n                          }\r\n                        </TableCell>\r\n                        {/* <TableCell>{user.investments[user.investments.length - 1]?.created_at ? addMonths(new Date(user.investments[user.investments.length - 1]?.created_at), 6).toString() : 'N/A'} </TableCell> */}\r\n                        <TableCell\r\n                          className={\r\n                            user.investments[user.investments.length - 1]\r\n                              ?.status === \"open\" ||\r\n                            user.investments[user.investments.length - 1]\r\n                              ?.status === \"pending\"\r\n                              ? \"red\"\r\n                              : \"green\"\r\n                          }>\r\n                          {user.investments[user.investments.length - 1]\r\n                            ?.status == \"pending\" ||\r\n                          user.investments[user.investments.length - 1]\r\n                            ?.status === \"open\"\r\n                            ? \"Minning\"\r\n                            : \"Cashed Out\"}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </section>\r\n        </>\r\n      )}\r\n\r\n      {/* Current User Data */}\r\n      {loggedInUser.role === \"user\" && (\r\n        <>\r\n          <h4 className=\"summary__title t-xl title-case m-l-4\">\r\n            {\" \"}\r\n            Your Deposits/Investments{\" \"}\r\n          </h4>\r\n          <section className=\"row\">\r\n            <TableContainer component={Paper}>\r\n              <Table aria-label=\"collapsible table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell />\r\n                    <TableCell className=\"rotate\">S/N</TableCell>\r\n                    <TableCell className=\"rotate\">Ref</TableCell>\r\n                    <TableCell className=\"rotate\">Deposit</TableCell>\r\n                    <TableCell className=\"rotate\">Plan</TableCell>\r\n                    <TableCell className=\"rotate\">Take Home</TableCell>\r\n                    <TableCell className=\"rotate\">Withdrawn</TableCell>\r\n                    <TableCell className=\"rotate\">Balance</TableCell>\r\n                    <TableCell className=\"rotate\">Date</TableCell>\r\n                    <TableCell className=\"rotate\">Status</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                {/* {loader && <div className=\"\"> {indicatorEl} </div>} */}\r\n                {userData?.investments?.length === 0 && (\r\n                  <p className=\"no__loans\">\r\n                    Oops! you've not made any deposits yet!\r\n                  </p>\r\n                )}\r\n                <TableBody>\r\n                  {userData?.investments?.map((investment, index) => {\r\n                    return (\r\n                      <TableRow\r\n                        sx={{ \"& > *\": { borderBottom: \"unset\" } }}\r\n                        onClick={() => handleClick(userData.id)}\r\n                        key={index}>\r\n                        <TableCell></TableCell>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          scope=\"row\"\r\n                          className=\"upper-case\">\r\n                          {index + 1}\r\n                        </TableCell>\r\n                        <TableCell> {investment.ref_no}</TableCell>\r\n                        <TableCell>\r\n                          {\" \"}\r\n                          {numberFormat(investment.amount)}\r\n                        </TableCell>\r\n                        <TableCell> {investment.plan}</TableCell>\r\n                        <TableCell>\r\n                          {\" \"}\r\n                          {numberFormat(investment.balance)}\r\n                        </TableCell>\r\n                        <TableCell> {numberFormat(0)}</TableCell>\r\n                        <TableCell>{numberFormat(0)}</TableCell>\r\n                        <TableCell>\r\n                          {format(new Date(investment?.created_at), \"PP\")}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          className={\r\n                            investment.status === \"pending\" ||\r\n                            investment.status === \"declined\"\r\n                              ? \"red title-case\"\r\n                              : \"green title-case\"\r\n                          }>\r\n                          {\" \"}\r\n                          {investment.status}\r\n                        </TableCell>\r\n                        {/* <TableCell className={user.investments[user.investments.length - 1]?.status === \"open\" || user.investments[user.investments.length - 1]?.status === \"pending\" ? \"red\" : \"green\" }>{user.investments[user.investments.length - 1]?.status == 'pending' || user.investments[user.investments.length - 1]?.status === \"open\" ? 'Minning' : 'Cashed Out' }</TableCell> */}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </section>\r\n          {/* <Link > */}\r\n\r\n          <div\r\n            className=\"float__action launcher-button\"\r\n            onClick={() => handleClick(userData.id)}>\r\n            Make a deposit <IconButton> + </IconButton>\r\n          </div>\r\n\r\n          {/* </Link> */}\r\n        </>\r\n      )}\r\n      <CandlestickChart />\r\n      <CryptoCarousel />\r\n      <CoinsTable />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Builder/Header.js",["313"],"import React, { useEffect, useState } from \"react\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport NotificationsActiveIcon from \"@material-ui/icons/NotificationsActive\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\nimport GitLogo from \"../../Assets/imgs/Git-logo.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./builder.css\";\r\n// import { useStateValue } from '../../Util/StateProvider';\r\n\r\nfunction Header() {\r\n  const [user, setUser] = useState();\r\n  const history = useHistory();\r\n  // const user = getUserInfo();\r\n  // const token = getToken();\r\n\r\n  useEffect(() => {\r\n    getUserInfo();\r\n  }, []);\r\n\r\n  // function getToken() {\r\n  //   const tokenString = localStorage.getItem('accessToken');\r\n  //   if(!tokenString) {\r\n  //     history.push(\"/login\");\r\n  //   }\r\n  //   tokenString);\r\n  //   const userToken = JSON.parse(tokenString);\r\n  //   tokenString);\r\n  //   return tokenString;\r\n  // }\r\n\r\n  const getUserInfo = () => {\r\n    // getToken();\r\n    const userInfo = localStorage.getItem(\"userInfo\");\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    const user = JSON.parse(userInfo);\r\n    // user.data);\r\n    setUser(user.data);\r\n    // return user?.data;\r\n    // user.data.firstname);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <div className=\"header__left\">\r\n          <div className=\"logo-header\">\r\n            <img src={GitLogo} className=\"w-100\" alt=\"Dividend Global\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"header__center\">\r\n          <IconButton>\r\n            <SearchIcon />\r\n          </IconButton>\r\n          <input type=\"text\" className=\"\" placeholder=\"Search anything...\" />\r\n        </div>\r\n        <div className=\"header__right\">\r\n          <div className=\"header__option\">\r\n            <IconButton>\r\n              <AppsIcon />\r\n            </IconButton>\r\n          </div>\r\n          <div className=\"header__option\">\r\n            <IconButton>\r\n              <NotificationsActiveIcon />\r\n            </IconButton>\r\n          </div>\r\n          <div className=\"header__info\">\r\n            <Avatar />\r\n            <h4 className=\"title-case\">\r\n              {\" \"}\r\n              {user?.firstname} {user?.lastname} <br />\r\n              <span className=\"summary__label font-9\">\r\n                {user?.role === \"user\" ? \"Investor\" : \"Administrator\"}\r\n              </span>\r\n            </h4>\r\n\r\n            <IconButton\r\n              onClick={() => {\r\n                localStorage.removeItem(\"userInfo\");\r\n                history.push(\"/\");\r\n              }}>\r\n              <LogoutIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Pages/InvestorDetails.js",["314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350"],"import React, { useState, useEffect, useRef } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport CreditScoreIcon from \"@mui/icons-material/CreditScore\";\nimport CurrencyExchangeIcon from \"@mui/icons-material/CurrencyExchange\";\nimport Box from \"@mui/material/Box\";\nimport moment from \"moment\";\nimport API from \"../../Util/API\";\nimport FileCopyIcon from \"@mui/icons-material/FileCopy\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { FileUploader, DownloadFile } from \"../../Util/FileUploader\";\nimport AddCardIcon from \"@mui/icons-material/AddCard\";\nimport AssignmentIcon from \"@mui/icons-material/Assignment\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { useLoading, Oval } from \"@agney/react-loading\";\nimport { format } from \"date-fns\";\nimport numberFormat from \"../../Util/CurrencyFormatter\";\nimport BASE_URL from \"../../Util/API\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport { CLoadingButton } from \"@coreui/react-pro\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./Pages.scss\";\n\n// import {FileUploader, DownloadFile} from \"../../Util/FileUploader\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 800,\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n};\n\nfunction InvestorDetails() {\n  const payLoan = {\n    amount_to_remit: 0,\n  };\n\n  const loanStatusx = {\n    status: \"\",\n  };\n  // const getStartDate=()=>{\n  //   return ;\n  // }\n  const max_duration = 14;\n  const plan = \"Delux\";\n  const interest = 30;\n  const maturity_date = moment().add(14, \"days\").format(\"MM-DD-YYYY\");\n\n  const { id } = useParams();\n  // const location = useLocation();\n  const [user, setUser] = useState({});\n  const [totalInvestment, setTotalInvestment] = useState();\n  const [TakeLoanBtn, setTakeLoanBtn] = useState(false);\n  const [toaster, setToaster] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [loanHistory, setLoanHistory] = useState([]);\n  const [payments, setPayments] = useState([]);\n  const [textToCopy, setTextToCopy] = useState(\n    \"bc1qh25jnm4h6fqdmh0qxd8c8cmlqpxgdhtsaw5jgj\"\n  );\n  const [btnDisabled, setBtnDisabled] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [superAdmin, setSuperAdmin] = useState(false);\n  const handleClose = () => setOpen(false);\n  const [newDepositModal, setNewDepositModal] = useState(false);\n  const [openInvestmentToUpdate, setOpenInvestmentToUpdate] = useState(false);\n  const [uploadPhoto, setUploadPhoto] = useState(false);\n  const [uploadDoc, setUploadDoc] = useState(false);\n  const handleAvataModalClose = () => setUploadPhoto(false);\n  const handleDocumentModalClose = () => setUploadDoc(false);\n  const [newAvatar, setNewAvatar] = useState();\n  const [newDocument, setNewDocument] = useState();\n  const [newDWithdrawalModal, setWithdrawalModal] = useState(false);\n  const handleWithdrawalFormClose = () => setWithdrawalModal(false);\n  const handleFormClose = () => setNewDepositModal(false);\n  const handleUpdateInvestmentFormClose = () =>\n    setOpenInvestmentToUpdate(false);\n  // const [newInvestment, setNewInvestment] = useState(investmentDetails);\n  // const handleFormClose = () => setNewLoanModal(false);\n  const [paidBack, setPaidBack] = useState(0);\n  const [loanId, setLoanId] = useState();\n  const [loanToUpdate, setLoanToUpdate] = useState({});\n  const [allInvestments, setAllInvestments] = useState([]);\n  const [investment, setInvestment] = useState({});\n  const [amount, setAmount] = useState(parseInt(0));\n  const [amount_to_withdraw, setAmountToWithdraw] = useState(parseInt(0));\n  const [proof_of_payment, setProofOfPayment] = useState(\"\");\n  const [investmentToUpdate, setInvestmentToUpdate] = useState({});\n\n  const { indicatorEl } = useLoading({\n    loading: true,\n    indicator: <Oval width=\"50\" />,\n    loaderProps: {\n      valueText: \"Please wait, loading records\",\n      style: { position: \"absolute\", left: \"50%\", top: \"50%\" },\n    },\n  });\n\n  const history = useHistory();\n  useEffect(() => {\n    fetchUserDetails();\n    getUserInfo();\n  }, []);\n\n  const convertAmount = (e) => {\n    setAmount(parseInt(e.target.value));\n  };\n\n  const getUserInfo = () => {\n    const userInfo = localStorage.getItem(\"userInfo\");\n\n    const user = JSON.parse(userInfo);\n    // user);\n    if (user.data.role === \"admin\") setSuperAdmin(true);\n  };\n\n  const convertAmountToWithdraw = (e) => {\n    setAmountToWithdraw(parseInt(e.target.value));\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard\n      .writeText(textToCopy)\n      .then(() => {\n        setCopied(true);\n        // textToCopy);\n        setTimeout(() => {\n          setCopied(false);\n        }, 2000); // Display 'Copied!' message for 2 seconds\n      })\n      .catch((err) => {\n        console.error(\"Failed to copy: \", err);\n      });\n  };\n\n  const updateInvestmentStatus = (investmentId, val) => {\n    // investmentId, val);\n    axios\n      .put(`${BASE_URL}/investment/${investmentId}`, { status: val })\n      .then((response) => {\n        // response);\n        toast.success(response.data.message);\n        fetchUserDetails();\n        handleFormClose();\n      })\n      .catch((error) => {\n        // error);\n        toast.error(error.message);\n      });\n    // investment);\n    setInvestmentToUpdate(investment);\n  };\n\n  const handleUpdateStatusFormOpen = (investment) => {\n    // investment);\n    setOpenInvestmentToUpdate(true);\n    setInvestment(investment);\n  };\n\n  const handleNewDepositSubmit = (e) => {\n    e.preventDefault();\n    // typeof amount);\n    axios\n      .post(`${BASE_URL}/investment/${id}`, {\n        plan,\n        maturity_date,\n        interest,\n        amount,\n        proof_of_payment,\n      })\n      .then((response) => {\n        // response);\n        toast.success(response.data.message);\n        fetchUserDetails();\n        handleFormClose();\n      })\n      .catch((error) => {\n        // error);\n        toast.error(error.message);\n      });\n  };\n\n  const handleWithdrawal = (e) => {\n    e.preventDefault();\n    // investment);\n    // if(amount_to_withdraw > amount_invested){\n    //   toast.error(\"You cant withdraw above \"+ amount_invested )\n    //   return false\n    // }\n    axios\n      .post(`${BASE_URL}/investment/${id}/withdrawal/${investment.id}`, {\n        amount_to_withdraw,\n      })\n      .then((response) => {\n        // response);\n        toast.success(response.data.message);\n        fetchUserDetails();\n        handleFormClose();\n      })\n      .catch((error) => {\n        // error);\n        toast.error(error.message);\n      });\n  };\n\n  const handleOpen = (loan) => {\n    setLoanToUpdate(loan);\n    setOpen(true);\n  };\n\n  const handleNewFormOpen = (id) => {\n    setNewDepositModal(true);\n  };\n\n  const handleNewWithdrawalFormOpen = (investment) => {\n    // investment);\n    setInvestment(investment);\n    setWithdrawalModal(true);\n  };\n\n  const formatCurrency = (value) =>\n    new Intl.NumberFormat(\"en-GB\", {\n      style: \"currency\",\n      currency: \"NGN\",\n      maximumFractionDigits: 0,\n    }).format(value);\n\n  // Easy(153hrs, 10times),  and Delux(7days, 15times), Mega(14days, 20times) Plan\n  const determineInvestorPlan = (amountToInvest) => {\n    if (amountToInvest <= 500) {\n      return amountToInvest * 10;\n    } else if (amountToInvest <= 800) {\n      return amountToInvest * 15;\n    } else return amountToInvest * 20;\n  };\n\n  const fetchUserDetails = async () => {\n    setLoader(true);\n    await axios.get(`${BASE_URL}/user/${id}`).then((response) => {\n      setUser(response.data.results);\n      if (\n        response.data.results.profile_pic == null ||\n        response.data.results.profile_pic === \"\"\n      ) {\n        // \"profile_pic isnt available\");\n        setBtnDisabled(true);\n      }\n      // response);\n      setAllInvestments(response.data.results.investments);\n\n      let tot = response.data.results?.investments?.reduce(\n        (total, currentValue) => (total = total + currentValue.amount),\n        0\n      );\n      setTotalInvestment(tot);\n      setLoader(false);\n    });\n  };\n\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const getLoanHistories = (user_id) => {\n    axios\n      .get(`${BASE_URL}/user/${user_id}`)\n      .then((response) => {\n        const { data } = response;\n        setAllInvestments(\n          data.results.sort((a, b) =>\n            a.created_at\n              .split(\"-\")\n              .reverse()\n              .join()\n              .localeCompare(b.created_at.split(\"-\").reverse().join())\n          )\n        );\n        setLoanId(data.results[data.results.length - 1].id);\n        // Activate Take new Loan Button Logic\n        if (allInvestments.length > 0) {\n          let prevRecord = data.results[data.results.length - 1];\n          if (\n            prevRecord.status === \"closed\" ||\n            prevRecord.status === \"declined\"\n          ) {\n            setTakeLoanBtn(true);\n          }\n        }\n\n        data.results.map((history) => {\n          // Set the array to loop here\n          setLoanHistory(history?.payments);\n          const histories = history.payments;\n          // totalPaidBack(history.payments);\n          setLoader(false);\n        });\n      })\n      .catch(function (res) {\n        toast.error(res);\n      });\n  };\n\n  return (\n    <div className=\"account__detail\">\n      <section className=\"row m-t-xxl summary b-b mt-55\">\n        <div className=\"summary__left\">\n          <div className=\"header__info\">\n            <div className=\"user-info\">\n              <div className=\"user-avatar\">\n                <Avatar\n                  src={`${BASE_URL}/${user.profile_pic}`}\n                  style={{ borderRadius: 0 }}\n                />\n              </div>\n              <p\n                className=\"summary__label title-case pointer\"\n                style={{ color: btnDisabled ? \"red\" : \"\" }}\n                onClick={() => setUploadPhoto(true)}>\n                Upload Photo\n              </p>\n            </div>\n\n            <div className=\"user-info\">\n              <h4 className=\"summary__title title-case\">\n                {user?.first_name} {user?.last_name}\n              </h4>\n              <p className=\"summary__label lower-case\">{user?.email}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"summary__center\">\n          <div className=\"header__info\">\n            <div className=\"user-info plr-20\">\n              <p className=\"summary__label\">Primary Contact</p>\n              <h4 className=\"summary__title title-case\"> {user?.phone_1}</h4>\n            </div>\n            <div className=\"user-info plr-20\">\n              <p className=\"summary__label\">Country</p>\n              <h4 className=\"summary__title\">{user?.country}</h4>\n            </div>\n\n            <div className=\"user-info plr-20\">\n              <p className=\"summary__label\">Wallet Type</p>\n              <h4 className=\"summary__title\">\n                {\" \"}\n                {user?.wallet_type ? user?.wallet_type : \"BitCoin\"}\n              </h4>\n            </div>\n            <div className=\"user-info plr-20\">\n              <p className=\"summary__label\">Joined</p>\n              <h4 className=\"summary__title\">\n                {\" \"}\n                {user?.created_at\n                  ? format(new Date(user?.created_at), \"PP\")\n                  : \"N/A\"}\n              </h4>\n            </div>\n          </div>\n        </div>\n        <div className=\"summary__right\">\n          <div className=\"user-info\">\n            <p className=\"summary__label\">Total Invested</p>\n            <h4 className=\"summary__title t-xl\">\n              {\" \"}\n              {numberFormat(totalInvestment)}\n            </h4>\n            {/* <p className=\"summary__label\">24 Dec, 2022</p> */}\n          </div>\n        </div>\n      </section>\n      <div className=\"d-flex\">\n        <h4 className=\"summary__title t-xl m-5em\"> Investment History</h4>\n        <button\n          className=\"btn bg__green pull-right\"\n          name=\"newLoan\"\n          // disabled={btnDisabled}\n          onClick={() => handleNewFormOpen()}>\n          {\" \"}\n          Invest Now!\n        </button>\n      </div>\n      <section className=\"row-m summary al-base\">\n        <div className=\"summary__left w-100\">\n          <div className=\"header__info\">\n            <section className=\"row\">\n              {allInvestments.length == 0 && !loader && (\n                <p className=\"empty__record\">Oops! No Investments yet...</p>\n              )}\n              <TableContainer component={Paper}>\n                <Table aria-label=\"collapsible table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell />\n                      <TableCell>Ref</TableCell>\n                      <TableCell>Investment</TableCell>\n                      <TableCell>Package</TableCell>\n                      <TableCell>Growth</TableCell>\n                      <TableCell>duration</TableCell>\n                      <TableCell>Take Home</TableCell>\n                      <TableCell> Date</TableCell>\n                      <TableCell>Maturity Date</TableCell>\n                      <TableCell>Status</TableCell>\n                      <TableCell> Action </TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {allInvestments?.map((investment) => {\n                      return (\n                        <TableRow\n                          sx={{ \"& > *\": { borderBottom: \"unset\" } }}\n                          key={investment?.id}>\n                          <TableCell></TableCell>\n                          <TableCell className=\"upper-case\">\n                            {investment?.ref_no}\n                          </TableCell>\n                          <TableCell>\n                            {numberFormat(investment?.amount)}\n                          </TableCell>\n                          <TableCell>{investment?.plan}</TableCell>\n                          <TableCell>\n                            {numberFormat(\n                              (investment?.interest / 100) * investment.amount\n                            )}\n                          </TableCell>\n                          <TableCell>14 days</TableCell>\n                          <TableCell>\n                            {/* {numberFormat(determineInvestorPlan(investment.amount))} */}\n                            {numberFormat(\n                              (investment?.interest / 100) * investment.amount +\n                                investment.amount\n                            )}\n                          </TableCell>\n                          <TableCell>\n                            {format(new Date(investment?.created_at), \"PP\")}\n                          </TableCell>\n                          <TableCell>\n                            {moment(investment?.created_at)\n                              .add(14, \"days\")\n                              .format(\"ll\")}\n                          </TableCell>\n                          <TableCell\n                            className={\n                              investment?.status === \"pending\" ||\n                              investment?.status === \"declined\"\n                                ? \"red title-case\"\n                                : \"green title-case\"\n                            }>\n                            {investment?.status}\n                          </TableCell>\n                          <TableCell className=\"btn-group\">\n                            {!superAdmin &&\n                              (investment?.status === \"approved\" ||\n                                investment?.status === \"open\") && (\n                                <CurrencyExchangeIcon\n                                  onClick={() =>\n                                    handleNewWithdrawalFormOpen(investment)\n                                  }\n                                />\n                              )}\n                            {superAdmin && investment?.status === \"pending\" && (\n                              <CreditScoreIcon\n                                onClick={() =>\n                                  handleUpdateStatusFormOpen(investment)\n                                }\n                              />\n                            )}\n                          </TableCell>\n                        </TableRow>\n                      );\n                    })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </section>\n          </div>\n        </div>\n        {/* <div className=\"other-details w-30\">\n          <div className=\"user-info mb-20\">\n            <p className=\"summary__label\">State of Residence</p>\n            <h4 className=\"summary__title title-case\">\n              {user?.state_of_residence\n                ? user?.state_of_residence\n                : \"N/A\"}\n            </h4>\n          </div>\n          <div className=\"user-info mb-20\">\n          <p className=\"summary__label\">City of Residence</p>\n            <h4 className=\"summary__title title-case\">\n              {user?.city\n                ? user?.city\n                : \"N/A\"}\n            </h4>\n          </div>\n          <div className=\"user-info mb-20\">\n          <p className=\"summary__label\">Alternate Contact</p>\n            <h4 className=\"summary__title title-case\">\n              {user?.phone_2\n                ? user?.phone_2\n                : \"N/A\"}\n            </h4>\n          </div>\n          <div className=\"user-info mb-20\">\n          <p className=\"summary__label\">Wallet Address</p>\n            <h4 className=\"summary__title title-case\">\n              {user?.wallet_info\n                ? user?.wallet_info\n                : \"N/A\"}\n            </h4>\n          </div>\n          \n        </div> */}\n      </section>\n      <Modal\n        open={newDepositModal}\n        onClose={handleFormClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\">\n        <Box sx={style}>\n          <Typography id=\"modal-modal-title\">\n            <h4 className=\"summary__title t-xl title-case\"> Make a Deposit </h4>\n            <div className=\"flex\">\n              <ErrorOutlineIcon />\n              <span className=\"sub-title\">\n                Deposit in BitCoin the equivalent you wish to invest into the\n                minning account below\n              </span>\n            </div>\n          </Typography>\n          <form className=\"loan-form p-lg\" onSubmit={handleNewDepositSubmit}>\n            {btnDisabled && (\n              <p\n                className=\"sub-title\"\n                style={{ color: \"red\", marginBottom: 7 }}>\n                Deposits has been disabled until a Profile Photo is uploaded.{\" \"}\n                <br />\n                Note: This will be match with your Valid Means of ID Uploaded\n              </p>\n            )}\n\n            <section style={{ display: \"flex\", alignItems: \"center\" }}>\n              <section\n                className=\"row wallet__address\"\n                style={{ marginBottom: 0 }}>\n                <label\n                  htmlFor=\"Loan Amount\"\n                  className=\"wallet__label label-name\">\n                  <span className=\"\">Wallet Address</span>\n                </label>\n                <p className=\"\">{textToCopy}</p>\n              </section>\n              <FileCopyIcon\n                onClick={copyToClipboard}\n                style={{ cursor: \"pointer\", marginLeft: 7 }}\n              />\n            </section>\n            {copied && (\n              <p\n                className=\"sub-title\"\n                style={{ marginLeft: \"26%\", paddingTop: 7 }}>\n                Wallet Address Copied\n              </p>\n            )}\n            <section className=\"row m-t-xxl\">\n              <div className=\"form\">\n                <input\n                  type=\"number\"\n                  className=\"page-form\"\n                  autoComplete=\"off\"\n                  name=\"amount\"\n                  // onChange={handleInputChangeNewDeposit}\n                  onChange={(e) => convertAmount(e)}\n                  value={parseInt(amount)}\n                  pattern=\"[+-]?\\d+(?:[.,]\\d+)?\"\n                  placeholder={numberFormat(50000)}\n                />\n                <label htmlFor=\"Loan Amount\" className=\"label-name\">\n                  <span className=\"content-name\">Amount Deposited</span>\n                </label>\n              </div>\n              <div className=\"form\">\n                <FormControl variant=\"standard\">\n                  <InputLabel id=\"\" className=\"label-name-select\">\n                    Upload Proof of payment\n                  </InputLabel>\n                  <input\n                    type=\"file\"\n                    className=\"page-form file\"\n                    autoComplete=\"off\"\n                    placeholder=\" \"\n                    name=\"proof_of_payment\"\n                    // onChange={handleInputChangeNewDeposit}\n                    onChange={(e) => setProofOfPayment(e.target.value)}\n                    value={proof_of_payment}\n                  />\n                </FormControl>\n              </div>\n            </section>\n\n            {!btnDisabled && (\n              <button type=\"submit\" className=\"btn btn-primary pull-right\">\n                Confirm my deposit\n              </button>\n            )}\n            <button\n              className=\"btn btn-secondary pull-right\"\n              onClick={handleFormClose}>\n              {\" \"}\n              close{\" \"}\n            </button>\n          </form>\n        </Box>\n      </Modal>\n\n      {/* Withdrawal Modal starts  */}\n\n      <Modal\n        open={newDWithdrawalModal}\n        onClose={handleWithdrawalFormClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\">\n        <Box sx={style}>\n          <Typography id=\"modal-modal-title\">\n            <h4 className=\"summary__title t-xl title-case\">\n              {\" \"}\n              Make a Withdrawal{\" \"}\n            </h4>\n            <div className=\"flex\">\n              <span className=\"sub-title\">\n                You shall receive the equalivalent into the BitCoin Address\n                below within 24hours\n              </span>\n              <ErrorOutlineIcon />\n            </div>\n          </Typography>\n          <form className=\"loan-form p-lg\" onSubmit={handleWithdrawal}>\n            <section className=\"row wallet__address\">\n              <label htmlFor=\"Loan Amount\" className=\"wallet__label label-name\">\n                <span className=\"\">Your Wallet Address</span>\n              </label>\n              <p className=\"ml-20\">\n                bc1qh25jnm4h6fqdmh0qxd8c8cmlqpxgdhtsaw5jgj\n              </p>\n            </section>\n            <section className=\"row m-t-xxl\">\n              <div className=\"form\">\n                <input\n                  type=\"number\"\n                  className=\"page-form\"\n                  autoComplete=\"off\"\n                  name=\"amount_to_withdraw\"\n                  // onChange={handleInputChangeNewDeposit}\n                  onChange={(e) => convertAmountToWithdraw(e)}\n                  value={parseInt(amount_to_withdraw)}\n                  pattern=\"[+-]?\\d+(?:[.,]\\d+)?\"\n                  // placeholder={numberFormat(50000)}\n                />\n                <label htmlFor=\"Loan Amount\" className=\"label-name\">\n                  <span className=\"content-name\"> Amount to Withdraw</span>\n                </label>\n              </div>\n            </section>\n\n            <button type=\"submit\" className=\"btn btn-primary pull-right\">\n              Initiate Withdrawal\n            </button>\n            <button\n              className=\"btn btn-secondary pull-right\"\n              onClick={handleWithdrawalFormClose}>\n              {\" \"}\n              Cancel{\" \"}\n            </button>\n          </form>\n        </Box>\n      </Modal>\n\n      {/* Withdrawal Modal ends */}\n\n      {/* Approve/ Acknowledge Receipt of Investment */}\n      {/* {OpenvestmentToUpdate.status === \"pending\" && ( */}\n      <Modal\n        open={openInvestmentToUpdate}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\">\n        <Box sx={style}>\n          <div className=\"d-flex\">\n            <Typography id=\"modal-modal-title\">\n              <h4 className=\"summary__title t-xl upper-case\"> </h4>\n            </Typography>\n            <div className=\"user-info plr-20\">\n              <p className=\"summary__label f-man\"> Investment </p>\n              <h4 className=\"summary__title title-case request\">\n                {numberFormat(investment?.amount)}\n              </h4>\n            </div>\n          </div>\n          <div className=\"b-b\"></div>\n          <section className=\"row f-man jus-sp-around\">\n            <div className=\"summary__center\">\n              <div className=\"header__info\">\n                <div className=\"user-info plr-20\">\n                  <p className=\"summary__label title-case\">Reference</p>\n                  <h4 className=\"summary__title upper-case\">\n                    {\" \"}\n                    {investment?.ref_no}\n                  </h4>\n                </div>\n\n                <div className=\"user-info plr-20\">\n                  <p className=\"summary__label title-case\">Package/Plan</p>\n                  <h4 className=\"summary__title\"> {investment.plan}</h4>\n                </div>\n\n                <div className=\"user-info plr-20\">\n                  <p className=\"summary__label\">Investment Date</p>\n                  <h4 className=\"summary__title\">\n                    {moment(investment?.created_at).format(\"ll\")}\n                  </h4>\n                </div>\n                <div className=\"user-info plr-20\">\n                  <p className=\"summary__label\"> Take Home </p>\n                  <h4 className=\"summary__title title-case\">\n                    {numberFormat(\n                      investment?.amount * (investment?.interest / 100) +\n                        investment?.amount\n                    )}\n                  </h4>\n                </div>\n                <div className=\"user-info plr-20\">\n                  <p className=\"summary__label\"> Status</p>\n                  <h4 className=\"summary__title title-case\">\n                    {\" \"}\n                    {investment.status}\n                  </h4>\n                </div>\n              </div>\n            </div>\n          </section>\n          {superAdmin && (\n            <div>\n              <button\n                type=\"submit\"\n                className=\"btn bg__green pull-right\"\n                onClick={() =>\n                  updateInvestmentStatus(investment.id, \"approved\")\n                }\n                name=\"approved\"\n                value=\"approved\">\n                {\" \"}\n                Approve{\" \"}\n              </button>\n              <button\n                className=\"btn bg__red pull-right\"\n                name=\"declined\"\n                value=\"declined\"\n                onClick={() =>\n                  updateInvestmentStatus(investment.id, \"declined\")\n                }>\n                {\" \"}\n                Decline{\" \"}\n              </button>\n            </div>\n          )}\n          <button\n            onClick={handleUpdateInvestmentFormClose}\n            className=\"btn btn-secondary pull-right\">\n            {\" \"}\n            cancel{\" \"}\n          </button>\n        </Box>\n      </Modal>\n      {/* )} */}\n      {/* Document Upload  Starts*/}\n\n      <Modal\n        open={uploadPhoto}\n        onClose={handleAvataModalClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\">\n        <Box sx={style}>\n          <div className=\"d-flex\">\n            <Typography id=\"modal-modal-title\">\n              <h4 className=\"summary__title t-xl title-case\">\n                {\" \"}\n                Update Profile Photo{\" \"}\n              </h4>\n            </Typography>\n          </div>\n          <div className=\"b-b\"></div>\n          <section className=\"row f-man jus-sp-around\">\n            <div className=\"summary__center\">\n              <div className=\"header__info\">\n                <div className=\"form\">\n                  <FormControl variant=\"standard\">\n                    <InputLabel id=\"\" className=\"label-name-select\">\n                      {/* <AddIcon/> */}\n                    </InputLabel>\n                    <input\n                      type=\"file\"\n                      className=\"page-form file\"\n                      autoComplete=\"off\"\n                      placeholder=\" \"\n                      onChange={(e) => setNewAvatar(e.target.files[0])}\n                      name=\"file\"\n                    />\n                  </FormControl>\n                </div>\n              </div>\n            </div>\n            <button\n              onClick={() =>\n                FileUploader(\n                  `${BASE_URL}/user/${id}/image`,\n                  \"profile_pic\",\n                  newAvatar,\n                  \"Avatar\",\n                  fetchUserDetails\n                )\n              }\n              className=\"btn btn-primary pull-right\">\n              {\" \"}\n              Upload{\" \"}\n            </button>\n            <button\n              onClick={handleAvataModalClose}\n              className=\"btn btn-secondary pull-right\">\n              {\" \"}\n              CLOSE{\" \"}\n            </button>\n            {/* </form> */}\n          </section>\n        </Box>\n      </Modal>\n\n      {/* Document Modal */}\n\n      <Modal\n        open={uploadDoc}\n        onClose={handleDocumentModalClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\">\n        <Box sx={style}>\n          <div className=\"d-flex\">\n            <Typography id=\"modal-modal-title\">\n              <h4 className=\"summary__title t-xl title-case\">\n                {\" \"}\n                Upload a valid means ID (National ID, Drivers Licence, Voters\n                Card or work ID)\n              </h4>\n            </Typography>\n          </div>\n          <div className=\"b-b\"></div>\n          <section className=\"row f-man jus-sp-around\">\n            <div className=\"summary__center\">\n              <div className=\"header__info\">\n                <div className=\"form\">\n                  <FormControl variant=\"standard\">\n                    <InputLabel id=\"\" className=\"label-name-select\">\n                      Upload Here\n                    </InputLabel>\n                    <input\n                      type=\"file\"\n                      className=\"page-form file\"\n                      autoComplete=\"off\"\n                      placeholder=\" \"\n                      onChange={(e) => setNewDocument(e.target.files[0])}\n                      name=\"file\"\n                    />\n                  </FormControl>\n                </div>\n              </div>\n            </div>\n            <button\n              onClick={() =>\n                FileUploader(\n                  `${BASE_URL}/user/${id}/document`,\n                  \"document\",\n                  newDocument,\n                  \"Document\",\n                  fetchUserDetails\n                )\n              }\n              className=\"btn btn-primary pull-right\">\n              {\" \"}\n              Upload{\" \"}\n            </button>\n            <button\n              onClick={handleDocumentModalClose}\n              className=\"btn btn-secondary pull-right\">\n              {\" \"}\n              cancel{\" \"}\n            </button>\n            {/* </form> */}\n          </section>\n        </Box>\n      </Modal>\n\n      {/* Document Uploads Ends */}\n    </div>\n  );\n}\n\nexport default InvestorDetails;\n","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/widgets/RecentActivity.js",[],"/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Util/Toaster.js",[],"/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Util/Loader.js",[],"/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Util/CurrencyFormatter.js",[],"/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Builder/SidebarRow.js",[],"/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Util/API.js",[],"/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/widgets/Ticker.js",["351","352"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { TrendingCoins } from \"../../Util/API\";\n// import AliceCarousel from 'react-alice-carousel';\nimport { numberWithCommas } from \"./CoinsTable\";\nimport AliceCarousel from \"react-alice-carousel\";\nimport { useLoading } from \"@agney/react-loading\";\n\nfunction Ticker() {\n  const [trending, setTrending] = useState([]);\n  // const { currency }  = [\"USD\", \"NGN\"];\n  const fetchTrendingCoin = async () => {\n    const { data } = await axios.get(TrendingCoins(\"USD\"));\n    setTrending(data);\n  };\n  // trending);\n\n  useEffect(() => {\n    fetchTrendingCoin();\n  }, []);\n\n  const items = trending.map((coin) => {\n    let profit = coin.price_change_percentage_24h >= 0;\n    return (\n      <div>\n        <span\n          className=\"upper-case\"\n          style={{ paddingLeft: \"25px\", textAlign: \"center\" }}>\n          {coin.name} - {coin?.symbol}\n          <br />\n          <span\n            style={{\n              color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\n              fontWeight: 400,\n            }}>\n            {profit && \"+\"}\n            {coin.price_change_percentage_24h?.toFixed(2)}%\n          </span>{\" \"}\n          &nbsp;\n          <span style={{ fontSize: 10, fontWeight: 400 }}>\n            ${numberWithCommas(coin?.current_price.toFixed(2))}\n          </span>\n        </span>\n      </div>\n    );\n  });\n\n  const responsive = {\n    0: {\n      items: 5,\n    },\n    512: {\n      items: 7,\n    },\n    860: {\n      items: 15,\n    },\n  };\n  return (\n    <div\n      style={{\n        marginTop: \"-80px\",\n        textShadow: \"0 0 5px rgba(0,0,0,1)\",\n        fontSize: \"11px\",\n      }}>\n      <AliceCarousel\n        mouseTracking\n        infinite\n        autoPlayInterval={1000}\n        animationDuration={1500}\n        disableDotsControls\n        responsive={responsive}\n        autoPlay\n        disableButtonsControls\n        items={items}\n      />\n    </div>\n  );\n}\n\nexport default Ticker;\n","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Util/FileUploader.js",[],"/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Util/axiosInstance.js",[],"/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/widgets/CoinsTable.js",["353","354","355","356"],"import React, { useEffect, useState } from \"react\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport {\n  Container,\n  createTheme,\n  TableCell,\n  LinearProgress,\n  TextField,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableContainer,\n  Table,\n  Paper,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { CoinList } from \"../../Util/API\";\nimport { useHistory } from \"react-router-dom\";\n\nexport function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport default function CoinsTable() {\n  const [coins, setCoins] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [page, setPage] = useState(1);\n\n  //   const useStyles = makeStyles({\n  //     row: {\n  //       backgroundColor: \"#16171a\",\n  //       cursor: \"pointer\",\n  //       \"&:hover\": {\n  //         backgroundColor: \"#131111\",\n  //       },\n  //       fontFamily: \"Montserrat\",\n  //     },\n  //     pagination: {\n  //       \"& .MuiPaginationItem-root\": {\n  //         color: \"gold\",\n  //       },\n  //     },\n  //   });\n  const history = useHistory();\n\n  const fetchCoins = async () => {\n    setLoading(true);\n    const { data } = await axios.get(CoinList(\"USD\"));\n    // data);\n\n    setCoins(data);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchCoins();\n  }, [\"USD\"]);\n\n  const handleSearch = () => {\n    return coins.filter(\n      (coin) => coin.name.toLowerCase().includes(search)\n      // coin.symbol.toLowerCase().includes(search)\n    );\n  };\n\n  return (\n    <Container style={{ textAlign: \"center\" }}>\n      <h3 className=\"coin-header\">\n        Cryptocurrency Prices by <span> Market Cap</span>\n      </h3>\n      <TableContainer component={Paper}>\n        {loading ? (\n          <LinearProgress style={{ backgroundColor: \"gold\" }} />\n        ) : (\n          <Table aria-label=\"simple table\">\n            <TableHead style={{ backgroundColor: \"#EEBC1D\" }}>\n              <TableRow>\n                {[\"Coin\", \"Price\", \"24h Change\", \"Market Cap\"].map((head) => (\n                  <TableCell\n                    style={{\n                      color: \"black\",\n                      fontWeight: \"700\",\n                      fontFamily: \"Montserrat\",\n                      width: \"150px\",\n                    }}\n                    key={head}\n                    align={head === \"Coin\" ? \"\" : \"right\"}>\n                    {head}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {handleSearch()\n                .slice((page - 1) * 10, (page - 1) * 10 + 10)\n                .map((row) => {\n                  const profit = row.price_change_percentage_24h > 0;\n                  return (\n                    <TableRow\n                      onClick={() => history.push(`/coins/${row.id}`)}\n                      style={{\n                        cursor: \"pointer\",\n                      }}\n                      key={row.name}>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        style={{\n                          display: \"flex\",\n                          gap: 15,\n                        }}>\n                        <img\n                          src={row?.image}\n                          alt={row.name}\n                          height=\"50\"\n                          style={{ marginBottom: 10 }}\n                        />\n                        <div\n                          style={{ display: \"flex\", flexDirection: \"column\" }}>\n                          <span\n                            style={{\n                              textTransform: \"uppercase\",\n                              fontSize: 22,\n                            }}>\n                            {row.symbol}\n                          </span>\n                          <span style={{ color: \"darkgrey\" }}>{row.name}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        ${numberWithCommas(row.current_price.toFixed(2))}\n                      </TableCell>\n                      <TableCell\n                        align=\"right\"\n                        style={{\n                          color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\n                          fontWeight: 500,\n                        }}>\n                        {profit && \"+\"}\n                        {row.price_change_percentage_24h.toFixed(2)}%\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        $\n                        {numberWithCommas(\n                          row.market_cap.toString().slice(0, -6)\n                        )}\n                        M\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        )}\n      </TableContainer>\n\n      {/* Comes from @material-ui/lab */}\n      <Pagination\n        count={(handleSearch()?.length / 10).toFixed(0)}\n        style={{\n          padding: 20,\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n        //   classes={{ ul: classes.pagination }}\n        onChange={(_, value) => {\n          setPage(value);\n          window.scroll(0, 450);\n        }}\n      />\n    </Container>\n  );\n}\n","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/widgets/Carousel.js",["357","358"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { TrendingCoins } from \"../../Util/API\";\nimport AliceCarousel from \"react-alice-carousel\";\nimport { numberWithCommas } from \"./CoinsTable\";\n\nfunction CryptoCarousel() {\n  const [trending, setTrending] = useState([]);\n  // const { currency }  = [\"USD\", \"NGN\"];\n  const fetchTrendingCoin = async () => {\n    const { data } = await axios.get(TrendingCoins(\"USD\"));\n    setTrending(data);\n  };\n  // trending);\n\n  useEffect(() => {\n    fetchTrendingCoin();\n  }, [\"USD\"]);\n\n  const items = trending.map((coin) => {\n    let profit = coin.price_change_percentage_2h >= 0;\n    return (\n      <div>\n        <img\n          src={coin?.image}\n          alt={coin.name}\n          height=\"60\"\n          style={{ marginBottom: 10 }}\n        />\n        <p className=\"upper-case\">\n          {coin?.symbol}{\" \"}\n          <span\n            style={{\n              color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\n              fontWeight: 500,\n            }}>\n            {profit && \"+\"}\n            {coin.price_change_percentage_2h?.toFixed(2)}%\n          </span>{\" \"}\n        </p>{\" \"}\n        &nbsp;\n        <span style={{ fontSize: 22, fontWeight: 500 }}>\n          ${numberWithCommas(coin?.current_price.toFixed(2))}\n        </span>\n      </div>\n    );\n  });\n  const responsive = {\n    0: {\n      items: 2,\n    },\n    512: {\n      items: 5,\n    },\n  };\n  return (\n    <div className=\"CryptoCarousel\">\n      <AliceCarousel\n        mouseTracking\n        infinite\n        autoPlayInterval={1000}\n        animationDuration={1500}\n        disableDotsControls\n        responsive={responsive}\n        autoPlay\n        disableButtonsControls\n        items={items}\n      />\n    </div>\n  );\n}\n\nexport default CryptoCarousel;\n","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/widgets/GraphInfo.js",["359","360","361"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line, Doughnut } from \"react-chartjs-2\";\r\nimport BASE_URL from \"../../Util/API\";\r\nimport axios from \"axios\";\r\n\r\n// Doughnut Data\r\n\r\n// data for line graph\r\nconst lineGraphData = {\r\n  labels: [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ],\r\n  datasets: [\r\n    {\r\n      label: \"Deposit\",\r\n      data: [\r\n        2500000, 2500000, 2500000, 6200000, 2500000, 2500000, 2500000, 11500000,\r\n        2500000, 2500000, 2500000, 2500000,\r\n      ],\r\n      fill: false,\r\n      borderColor: \"#22c58c\",\r\n    },\r\n    {\r\n      label: \"Withdrawn\",\r\n      data: [25000, 700000, 7790000, 950000, 700000, 1950000],\r\n      fill: false,\r\n      borderColor: \"#ff2757\",\r\n    },\r\n  ],\r\n};\r\n\r\n//   Graph Options Turn Legends off\r\n// const options = {\r\n//   plugins: {\r\n//     legend: {\r\n//       display: false\r\n//     },\r\n//   }\r\n// }\r\n\r\nconst options = {\r\n  plugins: {\r\n    tooltip: {\r\n      enabled: true,\r\n    },\r\n    legend: {\r\n      display: false,\r\n    },\r\n  },\r\n  cutout: \"90%\",\r\n  responsive: true,\r\n  maintainAspectRatio: true,\r\n  spacing: 5,\r\n};\r\n\r\nconst GraphInfo = () => {\r\n  const [disbursed, setDisbursed] = useState(0);\r\n  const [paidInByCustomers, setPaidInByCustomers] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // getAllBorrowers();\r\n    // getUserInfo();\r\n    // calPaidInByCustomers();\r\n    // getAllLoans();\r\n    getAllInvestors();\r\n    // filterBorrowers();\r\n  }, []);\r\n\r\n  const ratioPaidLoanedBalance = {\r\n    labels: [\"Deposit\", \"Withdrawn\"],\r\n    datasets: [\r\n      {\r\n        label: \"My Funds\",\r\n        data: [disbursed, paidInByCustomers],\r\n        backgroundColor: [\r\n          // 'rgb(36 111 162)',\r\n          \"#7bcd1cf7\",\r\n          \"#ff2757\",\r\n        ],\r\n        borderColor: [\r\n          // 'rgb(36 111 162)',\r\n          \"#7bcd1cf7\",\r\n          \"#ff2757\",\r\n          // '#7bcd1cf7'\r\n        ],\r\n        hoverBackgroundColor: [\r\n          // 'rgb(36 111 162)',\r\n          \"#7bcd1cf7\",\r\n          \"#ff2757\",\r\n        ],\r\n        hoverOffset: 8,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const getAllInvestors = () => {\r\n    let tempArr = [];\r\n    let tempWithdrawal = [];\r\n    axios\r\n      .get(`${BASE_URL}/users`)\r\n      .then((response) => {\r\n        response.data.results.map((user) => {\r\n          user.investments.map((investment) => {\r\n            tempArr.push(investment);\r\n            let totalDisbursed = tempArr.reduce(\r\n              (total, currentValue) => (total = total + currentValue.amount),\r\n              0\r\n            );\r\n            setDisbursed(totalDisbursed);\r\n            //\r\n          });\r\n          user.withdrawals.map((withdrawal) => {\r\n            tempWithdrawal.push(withdrawal);\r\n            let paidIn = tempWithdrawal.reduce(\r\n              (total, currentValue) => (total = total + currentValue.amount),\r\n              0\r\n            );\r\n            setPaidInByCustomers(paidIn);\r\n            //\r\n          });\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        // error);\r\n        // toast.error(error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"graph__info\">\r\n      <div className=\"right\">\r\n        <Doughnut data={ratioPaidLoanedBalance} options={options} />\r\n\r\n        <div className=\"legends\">\r\n          <div className=\"wallet bg-lemon\"></div>Deposit\r\n          <div className=\"loaned m-l-sm bg-red\"></div>Withdrawn\r\n          {/* <div className=\"paid m-l-sm bg-blue\"></div>Wallet */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"left\">\r\n        <Line data={lineGraphData} options={options} />\r\n        <div className=\"legends pull-right\">\r\n          <div className=\"investment bg-green\"></div>Deposit\r\n          <div className=\"reward m-l-sm bg-red\"></div>Withdrawn\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraphInfo;\r\n","/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/widgets/CandleStick.js",["362"],"import React, { useState, useEffect } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport dayjs from \"dayjs\"; // Assuming dayjs library is used for date formatting\n\nconst CandlestickChart = () => {\n  const [chartData, setChartData] = useState({\n    series: [\n      {\n        name: \"candle\",\n        data: [\n          {\n            x: new Date(1538778600000),\n            y: [6629.81, 6650.5, 6623.04, 6633.33],\n          },\n          {\n            x: new Date(1538780400000),\n            y: [6632.01, 6643.59, 6620, 6630.11],\n          },\n          {\n            x: new Date(1538782200000),\n            y: [6630.71, 6648.95, 6623.34, 6635.65],\n          },\n          {\n            x: new Date(1538784000000),\n            y: [6635.65, 6651, 6629.67, 6638.24],\n          },\n          {\n            x: new Date(1538785800000),\n            y: [6638.24, 6640, 6620, 6624.47],\n          },\n          {\n            x: new Date(1538787600000),\n            y: [6624.53, 6636.03, 6621.68, 6624.31],\n          },\n          {\n            x: new Date(1538789400000),\n            y: [6624.61, 6632.2, 6617, 6626.02],\n          },\n          {\n            x: new Date(1538791200000),\n            y: [6627, 6627.62, 6584.22, 6603.02],\n          },\n          {\n            x: new Date(1538793000000),\n            y: [6605, 6608.03, 6598.95, 6604.01],\n          },\n          {\n            x: new Date(1538794800000),\n            y: [6604.5, 6614.4, 6602.26, 6608.02],\n          },\n          {\n            x: new Date(1538796600000),\n            y: [6608.02, 6610.68, 6601.99, 6608.91],\n          },\n          {\n            x: new Date(1538798400000),\n            y: [6608.91, 6618.99, 6608.01, 6612],\n          },\n          {\n            x: new Date(1538800200000),\n            y: [6612, 6615.13, 6605.09, 6612],\n          },\n          {\n            x: new Date(1538802000000),\n            y: [6612, 6624.12, 6608.43, 6622.95],\n          },\n          {\n            x: new Date(1538803800000),\n            y: [6623.91, 6623.91, 6615, 6615.67],\n          },\n          {\n            x: new Date(1538805600000),\n            y: [6618.69, 6618.74, 6610, 6610.4],\n          },\n          {\n            x: new Date(1538807400000),\n            y: [6611, 6622.78, 6610.4, 6614.9],\n          },\n          {\n            x: new Date(1538809200000),\n            y: [6614.9, 6626.2, 6613.33, 6623.45],\n          },\n          {\n            x: new Date(1538811000000),\n            y: [6623.48, 6627, 6618.38, 6620.35],\n          },\n          {\n            x: new Date(1538812800000),\n            y: [6619.43, 6620.35, 6610.05, 6615.53],\n          },\n          {\n            x: new Date(1538814600000),\n            y: [6615.53, 6617.93, 6610, 6615.19],\n          },\n          {\n            x: new Date(1538816400000),\n            y: [6615.19, 6621.6, 6608.2, 6620],\n          },\n          {\n            x: new Date(1538818200000),\n            y: [6619.54, 6625.17, 6614.15, 6620],\n          },\n          {\n            x: new Date(1538820000000),\n            y: [6620.33, 6634.15, 6617.24, 6624.61],\n          },\n          {\n            x: new Date(1538821800000),\n            y: [6625.95, 6626, 6611.66, 6617.58],\n          },\n          {\n            x: new Date(1538823600000),\n            y: [6619, 6625.97, 6595.27, 6598.86],\n          },\n          {\n            x: new Date(1538825400000),\n            y: [6598.86, 6598.88, 6570, 6587.16],\n          },\n          {\n            x: new Date(1538827200000),\n            y: [6588.86, 6600, 6580, 6593.4],\n          },\n          {\n            x: new Date(1538829000000),\n            y: [6593.99, 6598.89, 6585, 6587.81],\n          },\n          {\n            x: new Date(1538830800000),\n            y: [6587.81, 6592.73, 6567.14, 6578],\n          },\n          {\n            x: new Date(1538832600000),\n            y: [6578.35, 6581.72, 6567.39, 6579],\n          },\n          {\n            x: new Date(1538834400000),\n            y: [6579.38, 6580.92, 6566.77, 6575.96],\n          },\n          {\n            x: new Date(1538836200000),\n            y: [6575.96, 6589, 6571.77, 6588.92],\n          },\n          {\n            x: new Date(1538838000000),\n            y: [6588.92, 6594, 6577.55, 6589.22],\n          },\n          {\n            x: new Date(1538839800000),\n            y: [6589.3, 6598.89, 6589.1, 6596.08],\n          },\n          {\n            x: new Date(1538841600000),\n            y: [6597.5, 6600, 6588.39, 6596.25],\n          },\n          {\n            x: new Date(1538843400000),\n            y: [6598.03, 6600, 6588.73, 6595.97],\n          },\n          {\n            x: new Date(1538845200000),\n            y: [6595.97, 6602.01, 6588.17, 6602],\n          },\n          {\n            x: new Date(1538847000000),\n            y: [6602, 6607, 6596.51, 6599.95],\n          },\n          {\n            x: new Date(1538848800000),\n            y: [6600.63, 6601.21, 6590.39, 6591.02],\n          },\n          {\n            x: new Date(1538850600000),\n            y: [6591.02, 6603.08, 6591, 6591],\n          },\n          {\n            x: new Date(1538852400000),\n            y: [6591, 6601.32, 6585, 6592],\n          },\n          {\n            x: new Date(1538854200000),\n            y: [6593.13, 6596.01, 6590, 6593.34],\n          },\n          {\n            x: new Date(1538856000000),\n            y: [6593.34, 6604.76, 6582.63, 6593.86],\n          },\n          {\n            x: new Date(1538857800000),\n            y: [6593.86, 6604.28, 6586.57, 6600.01],\n          },\n          {\n            x: new Date(1538859600000),\n            y: [6601.81, 6603.21, 6592.78, 6596.25],\n          },\n          {\n            x: new Date(1538861400000),\n            y: [6596.25, 6604.2, 6590, 6602.99],\n          },\n          {\n            x: new Date(1538863200000),\n            y: [6602.99, 6606, 6584.99, 6587.81],\n          },\n          {\n            x: new Date(1538865000000),\n            y: [6587.81, 6595, 6583.27, 6591.96],\n          },\n          {\n            x: new Date(1538866800000),\n            y: [6591.97, 6596.07, 6585, 6588.39],\n          },\n          {\n            x: new Date(1538868600000),\n            y: [6587.6, 6598.21, 6587.6, 6594.27],\n          },\n          {\n            x: new Date(1538870400000),\n            y: [6596.44, 6601, 6590, 6596.55],\n          },\n          {\n            x: new Date(1538872200000),\n            y: [6598.91, 6605, 6596.61, 6600.02],\n          },\n          {\n            x: new Date(1538874000000),\n            y: [6600.55, 6605, 6589.14, 6593.01],\n          },\n          {\n            x: new Date(1538875800000),\n            y: [6593.15, 6605, 6592, 6603.06],\n          },\n          {\n            x: new Date(1538877600000),\n            y: [6603.07, 6604.5, 6599.09, 6603.89],\n          },\n          {\n            x: new Date(1538879400000),\n            y: [6604.44, 6604.44, 6600, 6603.5],\n          },\n          {\n            x: new Date(1538881200000),\n            y: [6603.5, 6603.99, 6597.5, 6603.86],\n          },\n          {\n            x: new Date(1538883000000),\n            y: [6603.85, 6605, 6600, 6604.07],\n          },\n          {\n            x: new Date(1538884800000),\n            y: [6604.98, 6606, 6604.07, 6606],\n          },\n          {\n            x: new Date(2023, 10, 1, 13, 30, 0),\n            y: [6629.81, 6650.5, 6623.04, 6633.33],\n          },\n          {\n            x: new Date(2023, 10, 1, 14, 0, 0),\n            y: [6632.01, 6643.59, 6620, 6630.11],\n          },\n          {\n            x: new Date(2023, 10, 1, 14, 8, 0),\n            y: [6630.71, 6648.95, 6623.34, 6635.65],\n          },\n          {\n            x: new Date(2023, 10, 1, 16, 21, 0),\n            y: [6635.65, 6651, 6629.67, 6638.24],\n          },\n          {\n            x: new Date(2023, 10, 1, 16, 58, 0),\n            y: [6638.24, 6640, 6620, 6624.47],\n          },\n          {\n            x: new Date(2023, 10, 1, 17, 4, 0),\n            y: [6624.53, 6636.03, 6621.68, 6624.31],\n          },\n          {\n            x: new Date(2023, 10, 1, 17, 13, 0),\n            y: [6624.61, 6632.2, 6617, 6626.02],\n          },\n          {\n            x: new Date(2023, 10, 2, 17, 49, 0),\n            y: [6627, 6627.62, 6584.22, 6603.02],\n          },\n          {\n            x: new Date(2023, 10, 2, 15, 0, 0),\n            y: [6605, 6608.03, 6598.95, 6604.01],\n          },\n          {\n            x: new Date(2023, 10, 2, 15, 33, 0),\n            y: [6604.5, 6614.4, 6602.26, 6608.02],\n          },\n          {\n            x: new Date(2023, 10, 2, 15, 37, 0),\n            y: [6608.02, 6610.68, 6601.99, 6608.91],\n          },\n        ],\n      },\n    ],\n    options: {\n      chart: {\n        height: 350,\n        type: \"candlestick\",\n      },\n      title: {\n        text: \"Trading Chart - November 2023\",\n        align: \"left\",\n      },\n      annotations: {\n        xaxis: [\n          {\n            x: \"Nov 06 14:00\",\n            borderColor: \"#00E396\",\n            label: {\n              borderColor: \"#00E396\",\n              style: {\n                fontSize: \"12px\",\n                color: \"#fff\",\n                background: \"#00E396\",\n              },\n              orientation: \"horizontal\",\n              offsetY: 7,\n              text: \"Annotation Test\",\n            },\n          },\n        ],\n      },\n      tooltip: {\n        enabled: true,\n      },\n      xaxis: {\n        type: \"category\",\n        labels: {\n          formatter: (val) => dayjs(val).format(\"MMM DD HH:mm\"),\n        },\n      },\n      yaxis: {\n        tooltip: {\n          enabled: true,\n        },\n      },\n    },\n  });\n\n  // Simulating constructor behavior using useEffect\n  useEffect(() => {\n    // You might fetch data or perform initial setup here\n    // For simplicity, the data is hard-coded within the component\n    // ... code that initializes or fetches data ...\n  }, []);\n\n  return (\n    <div id=\"chart\">\n      <ReactApexChart\n        options={chartData.options}\n        series={chartData.series}\n        type=\"candlestick\"\n        height={350}\n      />\n    </div>\n  );\n};\n\nexport default CandlestickChart;\n",{"ruleId":"363","severity":1,"message":"364","line":6,"column":10,"nodeType":"365","messageId":"366","endLine":6,"endColumn":23},{"ruleId":"363","severity":1,"message":"367","line":7,"column":8,"nodeType":"365","messageId":"366","endLine":7,"endColumn":15},{"ruleId":"363","severity":1,"message":"368","line":7,"column":19,"nodeType":"365","messageId":"366","endLine":7,"endColumn":31},{"ruleId":"369","replacedBy":"370"},{"ruleId":"371","replacedBy":"372"},{"ruleId":"363","severity":1,"message":"373","line":2,"column":8,"nodeType":"365","messageId":"366","endLine":2,"endColumn":20},{"ruleId":"363","severity":1,"message":"374","line":2,"column":11,"nodeType":"365","messageId":"366","endLine":2,"endColumn":24},{"ruleId":"375","severity":1,"message":"376","line":70,"column":8,"nodeType":"377","endLine":70,"endColumn":29,"suggestions":"378"},{"ruleId":"363","severity":1,"message":"379","line":1,"column":17,"nodeType":"365","messageId":"366","endLine":1,"endColumn":25},{"ruleId":"363","severity":1,"message":"380","line":7,"column":8,"nodeType":"365","messageId":"366","endLine":7,"endColumn":15},{"ruleId":"363","severity":1,"message":"381","line":29,"column":10,"nodeType":"365","messageId":"366","endLine":29,"endColumn":18},{"ruleId":"363","severity":1,"message":"382","line":37,"column":7,"nodeType":"365","messageId":"366","endLine":37,"endColumn":18},{"ruleId":"363","severity":1,"message":"379","line":1,"column":17,"nodeType":"365","messageId":"366","endLine":1,"endColumn":25},{"ruleId":"363","severity":1,"message":"383","line":1,"column":27,"nodeType":"365","messageId":"366","endLine":1,"endColumn":36},{"ruleId":"363","severity":1,"message":"384","line":2,"column":8,"nodeType":"365","messageId":"366","endLine":2,"endColumn":18},{"ruleId":"363","severity":1,"message":"385","line":3,"column":8,"nodeType":"365","messageId":"366","endLine":3,"endColumn":11},{"ruleId":"363","severity":1,"message":"386","line":4,"column":8,"nodeType":"365","messageId":"366","endLine":4,"endColumn":13},{"ruleId":"363","severity":1,"message":"387","line":5,"column":8,"nodeType":"365","messageId":"366","endLine":5,"endColumn":17},{"ruleId":"363","severity":1,"message":"388","line":6,"column":8,"nodeType":"365","messageId":"366","endLine":6,"endColumn":17},{"ruleId":"363","severity":1,"message":"389","line":7,"column":8,"nodeType":"365","messageId":"366","endLine":7,"endColumn":22},{"ruleId":"363","severity":1,"message":"390","line":8,"column":8,"nodeType":"365","messageId":"366","endLine":8,"endColumn":17},{"ruleId":"363","severity":1,"message":"391","line":9,"column":8,"nodeType":"365","messageId":"366","endLine":9,"endColumn":16},{"ruleId":"363","severity":1,"message":"392","line":10,"column":8,"nodeType":"365","messageId":"366","endLine":10,"endColumn":13},{"ruleId":"363","severity":1,"message":"393","line":11,"column":8,"nodeType":"365","messageId":"366","endLine":11,"endColumn":13},{"ruleId":"363","severity":1,"message":"394","line":12,"column":8,"nodeType":"365","messageId":"366","endLine":12,"endColumn":11},{"ruleId":"363","severity":1,"message":"395","line":15,"column":10,"nodeType":"365","messageId":"366","endLine":15,"endColumn":20},{"ruleId":"363","severity":1,"message":"396","line":15,"column":22,"nodeType":"365","messageId":"366","endLine":15,"endColumn":26},{"ruleId":"363","severity":1,"message":"397","line":16,"column":10,"nodeType":"365","messageId":"366","endLine":16,"endColumn":16},{"ruleId":"363","severity":1,"message":"398","line":18,"column":8,"nodeType":"365","messageId":"366","endLine":18,"endColumn":16},{"ruleId":"363","severity":1,"message":"399","line":20,"column":10,"nodeType":"365","messageId":"366","endLine":20,"endColumn":24},{"ruleId":"363","severity":1,"message":"400","line":20,"column":26,"nodeType":"365","messageId":"366","endLine":20,"endColumn":31},{"ruleId":"363","severity":1,"message":"401","line":6,"column":8,"nodeType":"365","messageId":"366","endLine":6,"endColumn":20},{"ruleId":"402","severity":1,"message":"403","line":307,"column":25,"nodeType":"404","endLine":307,"endColumn":37},{"ruleId":"402","severity":1,"message":"403","line":312,"column":25,"nodeType":"404","endLine":312,"endColumn":37},{"ruleId":"402","severity":1,"message":"403","line":317,"column":25,"nodeType":"404","endLine":317,"endColumn":37},{"ruleId":"402","severity":1,"message":"403","line":322,"column":25,"nodeType":"404","endLine":322,"endColumn":37},{"ruleId":"402","severity":1,"message":"403","line":328,"column":25,"nodeType":"404","endLine":328,"endColumn":37},{"ruleId":"402","severity":1,"message":"403","line":361,"column":25,"nodeType":"404","endLine":361,"endColumn":37},{"ruleId":"363","severity":1,"message":"405","line":6,"column":8,"nodeType":"365","messageId":"366","endLine":6,"endColumn":18},{"ruleId":"363","severity":1,"message":"406","line":11,"column":8,"nodeType":"365","messageId":"366","endLine":11,"endColumn":17},{"ruleId":"363","severity":1,"message":"400","line":18,"column":26,"nodeType":"365","messageId":"366","endLine":18,"endColumn":31},{"ruleId":"363","severity":1,"message":"407","line":20,"column":10,"nodeType":"365","messageId":"366","endLine":20,"endColumn":22},{"ruleId":"363","severity":1,"message":"408","line":39,"column":10,"nodeType":"365","messageId":"366","endLine":39,"endColumn":32},{"ruleId":"363","severity":1,"message":"409","line":39,"column":34,"nodeType":"365","messageId":"366","endLine":39,"endColumn":58},{"ruleId":"363","severity":1,"message":"410","line":40,"column":10,"nodeType":"365","messageId":"366","endLine":40,"endColumn":28},{"ruleId":"363","severity":1,"message":"411","line":45,"column":9,"nodeType":"365","messageId":"366","endLine":45,"endColumn":20},{"ruleId":"363","severity":1,"message":"412","line":46,"column":10,"nodeType":"365","messageId":"366","endLine":46,"endColumn":14},{"ruleId":"363","severity":1,"message":"413","line":46,"column":16,"nodeType":"365","messageId":"366","endLine":46,"endColumn":23},{"ruleId":"363","severity":1,"message":"414","line":47,"column":10,"nodeType":"365","messageId":"366","endLine":47,"endColumn":15},{"ruleId":"363","severity":1,"message":"415","line":47,"column":17,"nodeType":"365","messageId":"366","endLine":47,"endColumn":25},{"ruleId":"363","severity":1,"message":"416","line":48,"column":19,"nodeType":"365","messageId":"366","endLine":48,"endColumn":29},{"ruleId":"363","severity":1,"message":"417","line":50,"column":9,"nodeType":"365","messageId":"366","endLine":50,"endColumn":16},{"ruleId":"363","severity":1,"message":"418","line":51,"column":19,"nodeType":"365","messageId":"366","endLine":51,"endColumn":29},{"ruleId":"363","severity":1,"message":"419","line":53,"column":9,"nodeType":"365","messageId":"366","endLine":53,"endColumn":11},{"ruleId":"363","severity":1,"message":"420","line":93,"column":12,"nodeType":"365","messageId":"366","endLine":93,"endColumn":19},{"ruleId":"363","severity":1,"message":"421","line":10,"column":10,"nodeType":"365","messageId":"366","endLine":10,"endColumn":14},{"ruleId":"363","severity":1,"message":"422","line":10,"column":28,"nodeType":"365","messageId":"366","endLine":10,"endColumn":39},{"ruleId":"363","severity":1,"message":"394","line":15,"column":8,"nodeType":"365","messageId":"366","endLine":15,"endColumn":11},{"ruleId":"363","severity":1,"message":"423","line":17,"column":10,"nodeType":"365","messageId":"366","endLine":17,"endColumn":24},{"ruleId":"363","severity":1,"message":"424","line":21,"column":10,"nodeType":"365","messageId":"366","endLine":21,"endColumn":26},{"ruleId":"363","severity":1,"message":"425","line":23,"column":7,"nodeType":"365","messageId":"366","endLine":23,"endColumn":12},{"ruleId":"363","severity":1,"message":"426","line":35,"column":11,"nodeType":"365","messageId":"366","endLine":35,"endColumn":13},{"ruleId":"363","severity":1,"message":"427","line":36,"column":9,"nodeType":"365","messageId":"366","endLine":36,"endColumn":17},{"ruleId":"363","severity":1,"message":"412","line":37,"column":10,"nodeType":"365","messageId":"366","endLine":37,"endColumn":14},{"ruleId":"363","severity":1,"message":"413","line":37,"column":16,"nodeType":"365","messageId":"366","endLine":37,"endColumn":23},{"ruleId":"363","severity":1,"message":"418","line":38,"column":19,"nodeType":"365","messageId":"366","endLine":38,"endColumn":29},{"ruleId":"363","severity":1,"message":"428","line":39,"column":18,"nodeType":"365","messageId":"366","endLine":39,"endColumn":27},{"ruleId":"363","severity":1,"message":"429","line":40,"column":10,"nodeType":"365","messageId":"366","endLine":40,"endColumn":20},{"ruleId":"363","severity":1,"message":"430","line":40,"column":22,"nodeType":"365","messageId":"366","endLine":40,"endColumn":35},{"ruleId":"363","severity":1,"message":"431","line":42,"column":10,"nodeType":"365","messageId":"366","endLine":42,"endColumn":22},{"ruleId":"363","severity":1,"message":"432","line":42,"column":24,"nodeType":"365","messageId":"366","endLine":42,"endColumn":39},{"ruleId":"363","severity":1,"message":"433","line":43,"column":11,"nodeType":"365","messageId":"366","endLine":43,"endColumn":22},{"ruleId":"434","severity":1,"message":"435","line":63,"column":42,"nodeType":"436","messageId":"437","endLine":63,"endColumn":44},{"ruleId":"363","severity":1,"message":"438","line":5,"column":10,"nodeType":"365","messageId":"366","endLine":5,"endColumn":16},{"ruleId":"363","severity":1,"message":"439","line":5,"column":18,"nodeType":"365","messageId":"366","endLine":5,"endColumn":28},{"ruleId":"363","severity":1,"message":"440","line":6,"column":8,"nodeType":"365","messageId":"366","endLine":6,"endColumn":16},{"ruleId":"363","severity":1,"message":"441","line":16,"column":8,"nodeType":"365","messageId":"366","endLine":16,"endColumn":32},{"ruleId":"442","severity":1,"message":"443","line":73,"column":14,"nodeType":"444","messageId":"445","endLine":73,"endColumn":39},{"ruleId":"363","severity":1,"message":"446","line":2,"column":10,"nodeType":"365","messageId":"366","endLine":2,"endColumn":19},{"ruleId":"363","severity":1,"message":"447","line":2,"column":21,"nodeType":"365","messageId":"366","endLine":2,"endColumn":32},{"ruleId":"363","severity":1,"message":"438","line":3,"column":10,"nodeType":"365","messageId":"366","endLine":3,"endColumn":16},{"ruleId":"363","severity":1,"message":"439","line":3,"column":18,"nodeType":"365","messageId":"366","endLine":3,"endColumn":28},{"ruleId":"363","severity":1,"message":"406","line":5,"column":8,"nodeType":"365","messageId":"366","endLine":5,"endColumn":17},{"ruleId":"363","severity":1,"message":"448","line":8,"column":8,"nodeType":"365","messageId":"366","endLine":8,"endColumn":18},{"ruleId":"363","severity":1,"message":"399","line":11,"column":10,"nodeType":"365","messageId":"366","endLine":11,"endColumn":24},{"ruleId":"363","severity":1,"message":"449","line":24,"column":11,"nodeType":"365","messageId":"366","endLine":24,"endColumn":22},{"ruleId":"363","severity":1,"message":"450","line":24,"column":24,"nodeType":"365","messageId":"366","endLine":24,"endColumn":35},{"ruleId":"375","severity":1,"message":"451","line":32,"column":6,"nodeType":"377","endLine":32,"endColumn":8,"suggestions":"452"},{"ruleId":"363","severity":1,"message":"394","line":13,"column":8,"nodeType":"365","messageId":"366","endLine":13,"endColumn":11},{"ruleId":"363","severity":1,"message":"399","line":14,"column":10,"nodeType":"365","messageId":"366","endLine":14,"endColumn":24},{"ruleId":"363","severity":1,"message":"425","line":18,"column":7,"nodeType":"365","messageId":"366","endLine":18,"endColumn":12},{"ruleId":"363","severity":1,"message":"433","line":31,"column":11,"nodeType":"365","messageId":"366","endLine":31,"endColumn":22},{"ruleId":"363","severity":1,"message":"453","line":49,"column":9,"nodeType":"365","messageId":"366","endLine":49,"endColumn":19},{"ruleId":"434","severity":1,"message":"435","line":55,"column":26,"nodeType":"436","messageId":"437","endLine":55,"endColumn":28},{"ruleId":"454","severity":1,"message":"455","line":56,"column":25,"nodeType":"456","messageId":"457","endLine":56,"endColumn":27},{"ruleId":"363","severity":1,"message":"384","line":2,"column":8,"nodeType":"365","messageId":"366","endLine":2,"endColumn":18},{"ruleId":"363","severity":1,"message":"385","line":3,"column":8,"nodeType":"365","messageId":"366","endLine":3,"endColumn":11},{"ruleId":"363","severity":1,"message":"394","line":12,"column":8,"nodeType":"365","messageId":"366","endLine":12,"endColumn":11},{"ruleId":"363","severity":1,"message":"421","line":13,"column":10,"nodeType":"365","messageId":"366","endLine":13,"endColumn":14},{"ruleId":"363","severity":1,"message":"399","line":19,"column":10,"nodeType":"365","messageId":"366","endLine":19,"endColumn":24},{"ruleId":"363","severity":1,"message":"425","line":23,"column":7,"nodeType":"365","messageId":"366","endLine":23,"endColumn":12},{"ruleId":"363","severity":1,"message":"433","line":36,"column":11,"nodeType":"365","messageId":"366","endLine":36,"endColumn":22},{"ruleId":"434","severity":1,"message":"435","line":60,"column":26,"nodeType":"436","messageId":"437","endLine":60,"endColumn":28},{"ruleId":"454","severity":1,"message":"455","line":61,"column":25,"nodeType":"456","messageId":"457","endLine":61,"endColumn":27},{"ruleId":"363","severity":1,"message":"383","line":1,"column":27,"nodeType":"365","messageId":"366","endLine":1,"endColumn":36},{"ruleId":"363","severity":1,"message":"386","line":2,"column":8,"nodeType":"365","messageId":"366","endLine":2,"endColumn":13},{"ruleId":"363","severity":1,"message":"387","line":3,"column":8,"nodeType":"365","messageId":"366","endLine":3,"endColumn":17},{"ruleId":"363","severity":1,"message":"388","line":4,"column":8,"nodeType":"365","messageId":"366","endLine":4,"endColumn":17},{"ruleId":"363","severity":1,"message":"389","line":5,"column":8,"nodeType":"365","messageId":"366","endLine":5,"endColumn":22},{"ruleId":"363","severity":1,"message":"390","line":6,"column":8,"nodeType":"365","messageId":"366","endLine":6,"endColumn":17},{"ruleId":"363","severity":1,"message":"391","line":7,"column":8,"nodeType":"365","messageId":"366","endLine":7,"endColumn":16},{"ruleId":"363","severity":1,"message":"392","line":8,"column":8,"nodeType":"365","messageId":"366","endLine":8,"endColumn":13},{"ruleId":"363","severity":1,"message":"395","line":10,"column":10,"nodeType":"365","messageId":"366","endLine":10,"endColumn":20},{"ruleId":"363","severity":1,"message":"396","line":10,"column":22,"nodeType":"365","messageId":"366","endLine":10,"endColumn":26},{"ruleId":"363","severity":1,"message":"397","line":11,"column":10,"nodeType":"365","messageId":"366","endLine":11,"endColumn":16},{"ruleId":"363","severity":1,"message":"394","line":13,"column":8,"nodeType":"365","messageId":"366","endLine":13,"endColumn":11},{"ruleId":"363","severity":1,"message":"405","line":65,"column":8,"nodeType":"365","messageId":"366","endLine":65,"endColumn":18},{"ruleId":"363","severity":1,"message":"398","line":66,"column":8,"nodeType":"365","messageId":"366","endLine":66,"endColumn":16},{"ruleId":"363","severity":1,"message":"394","line":67,"column":8,"nodeType":"365","messageId":"366","endLine":67,"endColumn":11},{"ruleId":"363","severity":1,"message":"400","line":79,"column":26,"nodeType":"365","messageId":"366","endLine":79,"endColumn":31},{"ruleId":"363","severity":1,"message":"407","line":82,"column":10,"nodeType":"365","messageId":"366","endLine":82,"endColumn":22},{"ruleId":"363","severity":1,"message":"412","line":89,"column":10,"nodeType":"365","messageId":"366","endLine":89,"endColumn":14},{"ruleId":"363","severity":1,"message":"413","line":89,"column":16,"nodeType":"365","messageId":"366","endLine":89,"endColumn":23},{"ruleId":"363","severity":1,"message":"414","line":90,"column":10,"nodeType":"365","messageId":"366","endLine":90,"endColumn":15},{"ruleId":"363","severity":1,"message":"415","line":90,"column":17,"nodeType":"365","messageId":"366","endLine":90,"endColumn":25},{"ruleId":"363","severity":1,"message":"416","line":92,"column":19,"nodeType":"365","messageId":"366","endLine":92,"endColumn":29},{"ruleId":"363","severity":1,"message":"418","line":95,"column":19,"nodeType":"365","messageId":"366","endLine":95,"endColumn":29},{"ruleId":"363","severity":1,"message":"419","line":97,"column":9,"nodeType":"365","messageId":"366","endLine":97,"endColumn":11},{"ruleId":"454","severity":1,"message":"455","line":119,"column":29,"nodeType":"456","messageId":"457","endLine":119,"endColumn":31},{"ruleId":"363","severity":1,"message":"420","line":154,"column":12,"nodeType":"365","messageId":"366","endLine":154,"endColumn":19},{"ruleId":"363","severity":1,"message":"458","line":1,"column":38,"nodeType":"365","messageId":"366","endLine":1,"endColumn":48},{"ruleId":"363","severity":1,"message":"421","line":5,"column":10,"nodeType":"365","messageId":"366","endLine":5,"endColumn":14},{"ruleId":"363","severity":1,"message":"459","line":6,"column":8,"nodeType":"365","messageId":"366","endLine":6,"endColumn":19},{"ruleId":"363","severity":1,"message":"394","line":8,"column":8,"nodeType":"365","messageId":"366","endLine":8,"endColumn":11},{"ruleId":"363","severity":1,"message":"460","line":9,"column":10,"nodeType":"365","messageId":"366","endLine":9,"endColumn":15},{"ruleId":"363","severity":1,"message":"461","line":9,"column":25,"nodeType":"365","messageId":"366","endLine":9,"endColumn":34},{"ruleId":"363","severity":1,"message":"462","line":9,"column":36,"nodeType":"365","messageId":"366","endLine":9,"endColumn":50},{"ruleId":"363","severity":1,"message":"463","line":9,"column":52,"nodeType":"365","messageId":"366","endLine":9,"endColumn":59},{"ruleId":"363","severity":1,"message":"464","line":19,"column":8,"nodeType":"365","messageId":"366","endLine":19,"endColumn":21},{"ruleId":"363","severity":1,"message":"465","line":30,"column":10,"nodeType":"365","messageId":"366","endLine":30,"endColumn":21},{"ruleId":"363","severity":1,"message":"466","line":34,"column":10,"nodeType":"365","messageId":"366","endLine":34,"endColumn":15},{"ruleId":"363","severity":1,"message":"467","line":34,"column":17,"nodeType":"365","messageId":"366","endLine":34,"endColumn":25},{"ruleId":"363","severity":1,"message":"429","line":38,"column":10,"nodeType":"365","messageId":"366","endLine":38,"endColumn":20},{"ruleId":"363","severity":1,"message":"430","line":38,"column":22,"nodeType":"365","messageId":"366","endLine":38,"endColumn":35},{"ruleId":"375","severity":1,"message":"468","line":53,"column":6,"nodeType":"377","endLine":53,"endColumn":8,"suggestions":"469"},{"ruleId":"434","severity":1,"message":"435","line":64,"column":42,"nodeType":"436","messageId":"437","endLine":64,"endColumn":44},{"ruleId":"434","severity":1,"message":"435","line":65,"column":45,"nodeType":"436","messageId":"437","endLine":65,"endColumn":47},{"ruleId":"434","severity":1,"message":"435","line":76,"column":45,"nodeType":"436","messageId":"437","endLine":76,"endColumn":47},{"ruleId":"454","severity":1,"message":"455","line":390,"column":38,"nodeType":"456","messageId":"457","endLine":390,"endColumn":40},{"ruleId":"375","severity":1,"message":"451","line":20,"column":6,"nodeType":"377","endLine":20,"endColumn":8,"suggestions":"470"},{"ruleId":"363","severity":1,"message":"471","line":1,"column":38,"nodeType":"365","messageId":"366","endLine":1,"endColumn":44},{"ruleId":"363","severity":1,"message":"394","line":8,"column":8,"nodeType":"365","messageId":"366","endLine":8,"endColumn":11},{"ruleId":"363","severity":1,"message":"472","line":10,"column":8,"nodeType":"365","messageId":"366","endLine":10,"endColumn":15},{"ruleId":"363","severity":1,"message":"439","line":12,"column":18,"nodeType":"365","messageId":"366","endLine":12,"endColumn":28},{"ruleId":"363","severity":1,"message":"473","line":20,"column":24,"nodeType":"365","messageId":"366","endLine":20,"endColumn":36},{"ruleId":"363","severity":1,"message":"474","line":21,"column":8,"nodeType":"365","messageId":"366","endLine":21,"endColumn":19},{"ruleId":"363","severity":1,"message":"475","line":22,"column":8,"nodeType":"365","messageId":"366","endLine":22,"endColumn":22},{"ruleId":"363","severity":1,"message":"447","line":29,"column":21,"nodeType":"365","messageId":"366","endLine":29,"endColumn":32},{"ruleId":"363","severity":1,"message":"423","line":32,"column":10,"nodeType":"365","messageId":"366","endLine":32,"endColumn":24},{"ruleId":"363","severity":1,"message":"399","line":33,"column":10,"nodeType":"365","messageId":"366","endLine":33,"endColumn":24},{"ruleId":"363","severity":1,"message":"476","line":51,"column":9,"nodeType":"365","messageId":"366","endLine":51,"endColumn":16},{"ruleId":"363","severity":1,"message":"477","line":55,"column":9,"nodeType":"365","messageId":"366","endLine":55,"endColumn":20},{"ruleId":"363","severity":1,"message":"478","line":61,"column":9,"nodeType":"365","messageId":"366","endLine":61,"endColumn":21},{"ruleId":"363","severity":1,"message":"479","line":70,"column":10,"nodeType":"365","messageId":"366","endLine":70,"endColumn":21},{"ruleId":"363","severity":1,"message":"480","line":71,"column":10,"nodeType":"365","messageId":"366","endLine":71,"endColumn":17},{"ruleId":"363","severity":1,"message":"418","line":71,"column":19,"nodeType":"365","messageId":"366","endLine":71,"endColumn":29},{"ruleId":"363","severity":1,"message":"481","line":73,"column":10,"nodeType":"365","messageId":"366","endLine":73,"endColumn":21},{"ruleId":"363","severity":1,"message":"482","line":74,"column":10,"nodeType":"365","messageId":"366","endLine":74,"endColumn":18},{"ruleId":"363","severity":1,"message":"483","line":74,"column":20,"nodeType":"365","messageId":"366","endLine":74,"endColumn":31},{"ruleId":"363","severity":1,"message":"484","line":75,"column":22,"nodeType":"365","messageId":"366","endLine":75,"endColumn":35},{"ruleId":"363","severity":1,"message":"485","line":80,"column":10,"nodeType":"365","messageId":"366","endLine":80,"endColumn":14},{"ruleId":"363","severity":1,"message":"486","line":98,"column":10,"nodeType":"365","messageId":"366","endLine":98,"endColumn":18},{"ruleId":"363","severity":1,"message":"487","line":98,"column":20,"nodeType":"365","messageId":"366","endLine":98,"endColumn":31},{"ruleId":"363","severity":1,"message":"488","line":99,"column":10,"nodeType":"365","messageId":"366","endLine":99,"endColumn":16},{"ruleId":"363","severity":1,"message":"489","line":100,"column":10,"nodeType":"365","messageId":"366","endLine":100,"endColumn":22},{"ruleId":"363","severity":1,"message":"490","line":106,"column":10,"nodeType":"365","messageId":"366","endLine":106,"endColumn":28},{"ruleId":"363","severity":1,"message":"433","line":108,"column":11,"nodeType":"365","messageId":"366","endLine":108,"endColumn":22},{"ruleId":"363","severity":1,"message":"417","line":117,"column":9,"nodeType":"365","messageId":"366","endLine":117,"endColumn":16},{"ruleId":"375","severity":1,"message":"491","line":121,"column":6,"nodeType":"377","endLine":121,"endColumn":8,"suggestions":"492"},{"ruleId":"363","severity":1,"message":"493","line":224,"column":9,"nodeType":"365","messageId":"366","endLine":224,"endColumn":19},{"ruleId":"363","severity":1,"message":"494","line":239,"column":9,"nodeType":"365","messageId":"366","endLine":239,"endColumn":23},{"ruleId":"363","severity":1,"message":"495","line":247,"column":9,"nodeType":"365","messageId":"366","endLine":247,"endColumn":30},{"ruleId":"363","severity":1,"message":"496","line":278,"column":9,"nodeType":"365","messageId":"366","endLine":278,"endColumn":30},{"ruleId":"363","severity":1,"message":"497","line":282,"column":9,"nodeType":"365","messageId":"366","endLine":282,"endColumn":25},{"ruleId":"434","severity":1,"message":"435","line":308,"column":36,"nodeType":"436","messageId":"437","endLine":308,"endColumn":38},{"ruleId":"363","severity":1,"message":"498","line":311,"column":17,"nodeType":"365","messageId":"366","endLine":311,"endColumn":26},{"ruleId":"454","severity":1,"message":"455","line":404,"column":38,"nodeType":"456","messageId":"457","endLine":404,"endColumn":40},{"ruleId":"363","severity":1,"message":"421","line":3,"column":10,"nodeType":"365","messageId":"366","endLine":3,"endColumn":14},{"ruleId":"363","severity":1,"message":"395","line":8,"column":10,"nodeType":"365","messageId":"366","endLine":8,"endColumn":20},{"ruleId":"363","severity":1,"message":"499","line":5,"column":3,"nodeType":"365","messageId":"366","endLine":5,"endColumn":14},{"ruleId":"363","severity":1,"message":"500","line":8,"column":3,"nodeType":"365","messageId":"366","endLine":8,"endColumn":12},{"ruleId":"363","severity":1,"message":"501","line":27,"column":18,"nodeType":"365","messageId":"366","endLine":27,"endColumn":27},{"ruleId":"375","severity":1,"message":"502","line":58,"column":7,"nodeType":"444","endLine":58,"endColumn":12},{"ruleId":"363","severity":1,"message":"421","line":3,"column":10,"nodeType":"365","messageId":"366","endLine":3,"endColumn":14},{"ruleId":"375","severity":1,"message":"502","line":19,"column":7,"nodeType":"444","endLine":19,"endColumn":12},{"ruleId":"434","severity":1,"message":"435","line":113,"column":42,"nodeType":"436","messageId":"437","endLine":113,"endColumn":44},{"ruleId":"434","severity":1,"message":"435","line":114,"column":45,"nodeType":"436","messageId":"437","endLine":114,"endColumn":47},{"ruleId":"434","severity":1,"message":"435","line":123,"column":45,"nodeType":"436","messageId":"437","endLine":123,"endColumn":47},{"ruleId":"363","severity":1,"message":"503","line":6,"column":21,"nodeType":"365","messageId":"366","endLine":6,"endColumn":33},"no-unused-vars","'StateProvider' is defined but never used.","Identifier","unusedVar","'reducer' is defined but never used.","'initialState' is defined but never used.","no-native-reassign",["504"],"no-negated-in-lhs",["505"],"'AuthProvider' is defined but never used.","'createContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateToken'. Either include it or remove the dependency array.","ArrayExpression",["506"],"'useState' is defined but never used.","'Widgets' is defined but never used.","'getToken' is defined but never used.","'getUserInfo' is assigned a value but never used.","'useEffect' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Paper' is defined but never used.","'axios' is defined but never used.","'API' is defined but never used.","'useLoading' is defined but never used.","'Oval' is defined but never used.","'format' is defined but never used.","'BASE_URL' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'HowToRegIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'MiniLoader' is defined but never used.","'FormLabel' is defined but never used.","'ErrorToaster' is defined but never used.","'financial_professional' is assigned a value but never used.","'setFinancialProfessional' is assigned a value but never used.","'regSuccessfulModal' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","'history' is assigned a value but never used.","'setToaster' is assigned a value but never used.","'br' is assigned a value but never used.","'onEnter' is defined but never used.","'Link' is defined but never used.","'useNavigate' is defined but never used.","'CLoadingButton' is defined but never used.","'RestorePageSharp' is defined but never used.","'style' is assigned a value but never used.","'id' is assigned a value but never used.","'location' is assigned a value but never used.","'setLoader' is assigned a value but never used.","'superAdmin' is assigned a value but never used.","'setSuperAdmin' is assigned a value but never used.","'allInvestors' is assigned a value but never used.","'setAllInvestors' is assigned a value but never used.","'indicatorEl' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Avatar' is defined but never used.","'IconButton' is defined but never used.","'AppsIcon' is defined but never used.","'AccountBalanceWalletIcon' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'useParams' is defined but never used.","'useLocation' is defined but never used.","'InputLabel' is defined but never used.","'wallet_type' is assigned a value but never used.","'wallet_info' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUserInfo'. Either include it or remove the dependency array.",["507"],"'tempAdmins' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useContext' is defined but never used.","'AuthContext' is defined but never used.","'parse' is defined but never used.","'addMonths' is defined but never used.","'formatDistance' is defined but never used.","'subDays' is defined but never used.","'axiosInstance' is defined but never used.","'systemUsers' is assigned a value but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllInvestors' and 'getUserInfo'. Either include them or remove the dependency array.",["508"],["509"],"'useRef' is defined but never used.","'AddIcon' is defined but never used.","'DownloadFile' is defined but never used.","'AddCardIcon' is defined but never used.","'AssignmentIcon' is defined but never used.","'payLoan' is assigned a value but never used.","'loanStatusx' is assigned a value but never used.","'max_duration' is assigned a value but never used.","'TakeLoanBtn' is assigned a value but never used.","'toaster' is assigned a value but never used.","'loanHistory' is assigned a value but never used.","'payments' is assigned a value but never used.","'setPayments' is assigned a value but never used.","'setTextToCopy' is assigned a value but never used.","'open' is assigned a value but never used.","'paidBack' is assigned a value but never used.","'setPaidBack' is assigned a value but never used.","'loanId' is assigned a value but never used.","'loanToUpdate' is assigned a value but never used.","'investmentToUpdate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUserDetails'. Either include it or remove the dependency array.",["510"],"'handleOpen' is assigned a value but never used.","'formatCurrency' is assigned a value but never used.","'determineInvestorPlan' is assigned a value but never used.","'capitalizeFirstLetter' is assigned a value but never used.","'getLoanHistories' is assigned a value but never used.","'histories' is assigned a value but never used.","'createTheme' is defined but never used.","'TextField' is defined but never used.","'setSearch' is assigned a value but never used.","The \"USD\" literal is not a valid dependency because it never changes. You can safely remove it.","'setChartData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"513","fix":"517"},{"desc":"518","fix":"519"},"Update the dependencies array to be: [authTokens, loading, updateToken]",{"range":"520","text":"521"},"Update the dependencies array to be: [getUserInfo]",{"range":"522","text":"523"},"Update the dependencies array to be: [getAllInvestors, getUserInfo]",{"range":"524","text":"525"},{"range":"526","text":"523"},"Update the dependencies array to be: [fetchUserDetails]",{"range":"527","text":"528"},[1993,2014],"[authTokens, loading, updateToken]",[1093,1095],"[getUserInfo]",[2087,2089],"[getAllInvestors, getUserInfo]",[744,746],[4836,4838],"[fetchUserDetails]"]