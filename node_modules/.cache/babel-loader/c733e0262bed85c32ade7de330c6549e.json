{"ast":null,"code":"var _jsxFileName = \"/Users/primalaero/investment/src/Components/widgets/GraphInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Line, Doughnut } from 'react-chartjs-2';\nimport BASE_URL from '../../Util/API';\nimport axios from 'axios'; // Doughnut Data \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst doughnutData = {\n  labels: ['Withdrawn', 'Deposit'],\n  datasets: [{\n    label: 'My Funds',\n    data: [974834, paidInByCustomers],\n    backgroundColor: [// 'rgb(36 111 162)',\n    '#ff2757', '#7bcd1cf7'],\n    borderColor: [// 'rgb(36 111 162)',\n    '#ff2757', '#7bcd1cf7'],\n    hoverBackgroundColor: [// 'rgb(36 111 162)',\n    '#ff2757', '#7bcd1cf7'],\n    hoverOffset: 8\n  }]\n}; // data for line graph\n\nconst lineGraphData = {\n  labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  datasets: [{\n    label: 'Deposit',\n    data: [2500000, 2500000, 2500000, 6200000, 2500000, 2500000, 2500000, 11500000, 2500000, 2500000, 2500000, 2500000],\n    fill: false,\n    borderColor: '#22c58c'\n  }, {\n    label: 'Withdrawn',\n    data: [25000, 700000, 7790000, 950000, 700000, 1950000],\n    fill: false,\n    borderColor: '#ff2757'\n  }]\n}; //   Graph Options Turn Legends off\n\nconst options = {\n  plugins: {\n    legend: {\n      display: false\n    }\n  }\n};\n\nconst GraphInfo = () => {\n  _s();\n\n  const [disbursed, setDisbursed] = useState(0);\n  const [paidInByCustomers, setPaidInByCustomers] = useState(0);\n  useEffect(() => {\n    // getAllBorrowers();\n    // getUserInfo();\n    // calPaidInByCustomers();\n    // getAllLoans();\n    getAllInvestors(); // filterBorrowers();\n  }, []);\n  const ratioPaidLoanedBalance = {\n    labels: ['Wallet ', 'Loaned', 'Paid In'],\n    datasets: [{\n      label: 'My Funds',\n      data: [disbursed, 0],\n      backgroundColor: ['rgb(36 111 162)', '#ff2757', '#7bcd1cf7'],\n      borderColor: ['rgb(36 111 162)', '#ff2757', '#7bcd1cf7'],\n      hoverBackgroundColor: ['rgb(36 111 162)', '#ff2757', '#7bcd1cf7'],\n      hoverOffset: 8\n    }]\n  };\n\n  const getAllInvestors = () => {\n    let tempArr = [];\n    axios.get(`${BASE_URL}/users`).then(response => {\n      response.data.results.map(user => {\n        user.investments.map(investment => {\n          tempArr.push(investment);\n          let totalDisbursed = tempArr.reduce((total, currentValue) => total = total + currentValue.amount, 0);\n          setDisbursed(totalDisbursed); // \n        });\n      });\n    }).catch(error => {\n      console.log(error); // toast.error(error.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph__info\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(Doughnut, {\n        data: ratioPaidLoanedBalance,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legends\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet bg-lemon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }, this), \"Deposit\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loaned m-l-sm bg-red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 29\n        }, this), \"Withdrawn\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(Line, {\n        data: lineGraphData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legends pull-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"investment bg-green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }, this), \"Deposit\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reward m-l-sm bg-red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }, this), \"Withdrawn\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GraphInfo, \"KfChzu7lWLBN6i9c+hBc/Z6xxHg=\");\n\n_c = GraphInfo;\nexport default GraphInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"GraphInfo\");","map":{"version":3,"sources":["/Users/primalaero/investment/src/Components/widgets/GraphInfo.js"],"names":["React","useState","useEffect","Line","Doughnut","BASE_URL","axios","doughnutData","labels","datasets","label","data","paidInByCustomers","backgroundColor","borderColor","hoverBackgroundColor","hoverOffset","lineGraphData","fill","options","plugins","legend","display","GraphInfo","disbursed","setDisbursed","setPaidInByCustomers","getAllInvestors","ratioPaidLoanedBalance","tempArr","get","then","response","results","map","user","investments","investment","push","totalDisbursed","reduce","total","currentValue","amount","catch","error","console","log"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { Line, Doughnut } from 'react-chartjs-2';\r\nimport BASE_URL from '../../Util/API';\r\nimport axios from 'axios';\r\n\r\n// Doughnut Data \r\n\r\nconst doughnutData = {\r\n    labels: [ \r\n        'Withdrawn',\r\n        'Deposit'\r\n      ],\r\n      datasets: [{\r\n        label: 'My Funds',\r\n        data: [974834, paidInByCustomers],\r\n        backgroundColor: [\r\n          // 'rgb(36 111 162)',\r\n          '#ff2757',\r\n          '#7bcd1cf7'\r\n        ],\r\n        borderColor: [\r\n            // 'rgb(36 111 162)',\r\n            '#ff2757',\r\n            '#7bcd1cf7'\r\n          ],\r\n          hoverBackgroundColor: [\r\n            // 'rgb(36 111 162)',\r\n          '#ff2757',\r\n          '#7bcd1cf7'\r\n          ],\r\n        hoverOffset: 8,\r\n      }]}\r\n\r\n// data for line graph\r\nconst lineGraphData = {\r\n    labels: ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],\r\n    datasets: [\r\n      {\r\n        label: 'Deposit',\r\n        data: [2500000, 2500000, 2500000, 6200000, 2500000, 2500000, 2500000, 11500000, 2500000, 2500000, 2500000, 2500000 ],\r\n        fill: false,\r\n        borderColor:  '#22c58c'\r\n      },\r\n      {\r\n        label: 'Withdrawn',\r\n        data: [25000, 700000, 7790000,950000,700000, 1950000],\r\n        fill: false,\r\n        borderColor: '#ff2757'\r\n      },\r\n    ],\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//   Graph Options Turn Legends off\r\n  const options = {\r\n    plugins: {\r\n      legend: {\r\n        display: false\r\n      },\r\n    }\r\n  }\r\n\r\n\r\n\r\nconst GraphInfo = () => {\r\n\r\n\r\n  const [disbursed, setDisbursed] = useState(0);\r\n  const [paidInByCustomers, setPaidInByCustomers] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // getAllBorrowers();\r\n    // getUserInfo();\r\n    // calPaidInByCustomers();\r\n    // getAllLoans();\r\n    getAllInvestors();\r\n    // filterBorrowers();\r\n  }, []);\r\n  \r\n\r\n\r\n  const ratioPaidLoanedBalance = {\r\n    labels: [ \r\n        'Wallet ',\r\n        'Loaned',\r\n        'Paid In'\r\n      ],\r\n      datasets: [{\r\n        label: 'My Funds',\r\n        data: [disbursed, 0],\r\n        backgroundColor: [\r\n          'rgb(36 111 162)',\r\n          '#ff2757',\r\n          '#7bcd1cf7'\r\n        ],\r\n        borderColor: [\r\n            'rgb(36 111 162)',\r\n            '#ff2757',\r\n            '#7bcd1cf7'\r\n          ],\r\n          hoverBackgroundColor: [\r\n            'rgb(36 111 162)',\r\n          '#ff2757',\r\n          '#7bcd1cf7'\r\n          ],\r\n        hoverOffset: 8,\r\n      }]}\r\n\r\n\r\n\r\n  const getAllInvestors = ()=> {\r\n    let tempArr = [];\r\n    axios.get(`${BASE_URL}/users`)\r\n      .then((response) => {\r\n        response.data.results.map((user)=>{\r\n            user.investments.map((investment)=>{\r\n                tempArr.push(investment);\r\n                let totalDisbursed = tempArr.reduce((total, currentValue) =>  total = total + currentValue.amount , 0 );\r\n                setDisbursed(totalDisbursed);\r\n                // \r\n            })\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        // toast.error(error.message);\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"graph__info\">\r\n            <div className=\"right\">\r\n                <Doughnut data =  {ratioPaidLoanedBalance}  options = {options}/> \r\n\r\n                 <div className=\"legends\">\r\n                            <div className=\"wallet bg-lemon\"></div>Deposit\r\n                            <div className=\"loaned m-l-sm bg-red\"></div>Withdrawn\r\n                            {/* <div className=\"paid m-l-sm bg-blue\"></div>Wallet */}\r\n                        </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"left\">\r\n                        <Line data={lineGraphData} options={options} />\r\n                        <div className=\"legends pull-right\">\r\n                            <div className=\"investment bg-green\"></div>Deposit\r\n                            <div className=\"reward m-l-sm bg-red\"></div>Withdrawn\r\n                        </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GraphInfo;"]},"metadata":{},"sourceType":"module"}