{"ast":null,"code":"var _jsxFileName = \"/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/widgets/CoinsTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { Container, createTheme, TableCell, LinearProgress, TextField, TableBody, TableRow, TableHead, TableContainer, Table, Paper } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { CoinList } from \"../../Util/API\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\nexport default function CoinsTable() {\n  _s();\n\n  var _handleSearch;\n\n  const [coins, setCoins] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [page, setPage] = useState(1); //   const useStyles = makeStyles({\n  //     row: {\n  //       backgroundColor: \"#16171a\",\n  //       cursor: \"pointer\",\n  //       \"&:hover\": {\n  //         backgroundColor: \"#131111\",\n  //       },\n  //       fontFamily: \"Montserrat\",\n  //     },\n  //     pagination: {\n  //       \"& .MuiPaginationItem-root\": {\n  //         color: \"gold\",\n  //       },\n  //     },\n  //   });\n\n  const history = useHistory();\n\n  const fetchCoins = async () => {\n    setLoading(true);\n    const {\n      data\n    } = await axios.get(CoinList(\"USD\")); // console.log(data);\n\n    setCoins(data);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchCoins();\n  }, [\"USD\"]);\n\n  const handleSearch = () => {\n    return coins.filter(coin => coin.name.toLowerCase().includes(search) // coin.symbol.toLowerCase().includes(search)\n    );\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"coin-header\",\n      children: [\"Cryptocurrency Prices by \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Market Cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: loading ? /*#__PURE__*/_jsxDEV(LinearProgress, {\n        style: {\n          backgroundColor: \"gold\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          style: {\n            backgroundColor: \"#EEBC1D\"\n          },\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [\"Coin\", \"Price\", \"24h Change\", \"Market Cap\"].map(head => /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                color: \"black\",\n                fontWeight: \"700\",\n                fontFamily: \"Montserrat\",\n                width: \"150px\"\n              },\n              align: head === \"Coin\" ? \"\" : \"right\",\n              children: head\n            }, head, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: handleSearch().slice((page - 1) * 10, (page - 1) * 10 + 10).map(row => {\n            const profit = row.price_change_percentage_24h > 0;\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              onClick: () => history.push(`/coins/${row.id}`),\n              style: {\n                cursor: \"pointer\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                style: {\n                  display: \"flex\",\n                  gap: 15\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: row === null || row === void 0 ? void 0 : row.image,\n                  alt: row.name,\n                  height: \"50\",\n                  style: {\n                    marginBottom: 10\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    flexDirection: \"column\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      textTransform: \"uppercase\",\n                      fontSize: 22\n                    },\n                    children: row.symbol\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: \"darkgrey\"\n                    },\n                    children: row.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [\"$\", numberWithCommas(row.current_price.toFixed(2))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                style: {\n                  color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\n                  fontWeight: 500\n                },\n                children: [profit && \"+\", row.price_change_percentage_24h.toFixed(2), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [\"$\", numberWithCommas(row.market_cap.toString().slice(0, -6)), \"M\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 23\n              }, this)]\n            }, row.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      count: (((_handleSearch = handleSearch()) === null || _handleSearch === void 0 ? void 0 : _handleSearch.length) / 10).toFixed(0),\n      style: {\n        padding: 20,\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      } //   classes={{ ul: classes.pagination }}\n      ,\n      onChange: (_, value) => {\n        setPage(value);\n        window.scroll(0, 450);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CoinsTable, \"qy2UbBMKwIXJ57b3Z4JegHmmDBc=\", false, function () {\n  return [useHistory];\n});\n\n_c = CoinsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinsTable\");","map":{"version":3,"sources":["/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/widgets/CoinsTable.js"],"names":["React","useEffect","useState","Pagination","Container","createTheme","TableCell","LinearProgress","TextField","TableBody","TableRow","TableHead","TableContainer","Table","Paper","axios","CoinList","useHistory","numberWithCommas","x","toString","replace","CoinsTable","coins","setCoins","loading","setLoading","search","setSearch","page","setPage","history","fetchCoins","data","get","handleSearch","filter","coin","name","toLowerCase","includes","textAlign","backgroundColor","map","head","color","fontWeight","fontFamily","width","slice","row","profit","price_change_percentage_24h","push","id","cursor","display","gap","image","marginBottom","flexDirection","textTransform","fontSize","symbol","current_price","toFixed","market_cap","length","padding","justifyContent","_","value","window","scroll"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport {\n  Container,\n  createTheme,\n  TableCell,\n  LinearProgress,\n  TextField,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableContainer,\n  Table,\n  Paper,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { CoinList } from \"../../Util/API\";\nimport { useHistory } from \"react-router-dom\";\n\nexport function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport default function CoinsTable() {\n  const [coins, setCoins] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [page, setPage] = useState(1);\n\n  //   const useStyles = makeStyles({\n  //     row: {\n  //       backgroundColor: \"#16171a\",\n  //       cursor: \"pointer\",\n  //       \"&:hover\": {\n  //         backgroundColor: \"#131111\",\n  //       },\n  //       fontFamily: \"Montserrat\",\n  //     },\n  //     pagination: {\n  //       \"& .MuiPaginationItem-root\": {\n  //         color: \"gold\",\n  //       },\n  //     },\n  //   });\n  const history = useHistory();\n\n  const fetchCoins = async () => {\n    setLoading(true);\n    const { data } = await axios.get(CoinList(\"USD\"));\n    // console.log(data);\n\n    setCoins(data);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchCoins();\n  }, [\"USD\"]);\n\n  const handleSearch = () => {\n    return coins.filter(\n      (coin) => coin.name.toLowerCase().includes(search)\n      // coin.symbol.toLowerCase().includes(search)\n    );\n  };\n\n  return (\n    <Container style={{ textAlign: \"center\" }}>\n      <h3 className=\"coin-header\">\n        Cryptocurrency Prices by <span> Market Cap</span>\n      </h3>\n      <TableContainer component={Paper}>\n        {loading ? (\n          <LinearProgress style={{ backgroundColor: \"gold\" }} />\n        ) : (\n          <Table aria-label=\"simple table\">\n            <TableHead style={{ backgroundColor: \"#EEBC1D\" }}>\n              <TableRow>\n                {[\"Coin\", \"Price\", \"24h Change\", \"Market Cap\"].map((head) => (\n                  <TableCell\n                    style={{\n                      color: \"black\",\n                      fontWeight: \"700\",\n                      fontFamily: \"Montserrat\",\n                      width: \"150px\",\n                    }}\n                    key={head}\n                    align={head === \"Coin\" ? \"\" : \"right\"}>\n                    {head}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {handleSearch()\n                .slice((page - 1) * 10, (page - 1) * 10 + 10)\n                .map((row) => {\n                  const profit = row.price_change_percentage_24h > 0;\n                  return (\n                    <TableRow\n                      onClick={() => history.push(`/coins/${row.id}`)}\n                      style={{\n                        cursor: \"pointer\",\n                      }}\n                      key={row.name}>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        style={{\n                          display: \"flex\",\n                          gap: 15,\n                        }}>\n                        <img\n                          src={row?.image}\n                          alt={row.name}\n                          height=\"50\"\n                          style={{ marginBottom: 10 }}\n                        />\n                        <div\n                          style={{ display: \"flex\", flexDirection: \"column\" }}>\n                          <span\n                            style={{\n                              textTransform: \"uppercase\",\n                              fontSize: 22,\n                            }}>\n                            {row.symbol}\n                          </span>\n                          <span style={{ color: \"darkgrey\" }}>{row.name}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        ${numberWithCommas(row.current_price.toFixed(2))}\n                      </TableCell>\n                      <TableCell\n                        align=\"right\"\n                        style={{\n                          color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\n                          fontWeight: 500,\n                        }}>\n                        {profit && \"+\"}\n                        {row.price_change_percentage_24h.toFixed(2)}%\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        $\n                        {numberWithCommas(\n                          row.market_cap.toString().slice(0, -6)\n                        )}\n                        M\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        )}\n      </TableContainer>\n\n      {/* Comes from @material-ui/lab */}\n      <Pagination\n        count={(handleSearch()?.length / 10).toFixed(0)}\n        style={{\n          padding: 20,\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n        //   classes={{ ul: classes.pagination }}\n        onChange={(_, value) => {\n          setPage(value);\n          window.scroll(0, 450);\n        }}\n      />\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}