{"ast":null,"code":"import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport dayjs from 'dayjs';\nconst BASE_URL = 'https://dry-falls-41890.herokuapp.com/api/v1/';\nlet authTokens = localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null;\nconst axiosInstance = axios.create({\n  BASE_URL,\n  headers: {\n    Authorization: `Bearer ${authTokens === null || authTokens === void 0 ? void 0 : authTokens.accessToken}`\n  }\n});\naxiosInstance.interceptors.request.use(async req => {\n  if (!authTokens) {\n    // authTokens = localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens'))\n    req.headers.Authorization = `Bearer ${authTokens === null || authTokens === void 0 ? void 0 : authTokens.accessToken}`;\n  }\n  const user = jwt_decode(authTokens.accessToken);\n  const isExpired = dayjs.unix(user.exp).diff(dayjs()) < 1;\n  if (isExpired) return req;\n  const response = await axios.post(`${BASE_URL}/token`, {\n    refreshToken: authTokens.refreshToken\n  });\n  localStorage.setItem('authTokens', JSON.stringify(response.data));\n  req.headers.Authorization = `Bearer ${authTokens === null || authTokens === void 0 ? void 0 : authTokens.accessToken}`;\n  return req;\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","jwt_decode","dayjs","BASE_URL","authTokens","localStorage","getItem","JSON","parse","axiosInstance","create","headers","Authorization","accessToken","interceptors","request","use","req","user","isExpired","unix","exp","diff","response","post","refreshToken","setItem","stringify","data"],"sources":["/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Util/axiosInstance.js"],"sourcesContent":["import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport dayjs from 'dayjs';\n\n\nconst BASE_URL =  'https://dry-falls-41890.herokuapp.com/api/v1/';\n\n\nlet authTokens = localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')): null;\n\nconst axiosInstance = axios.create({\n    BASE_URL,\n    headers: { Authorization: `Bearer ${authTokens?.accessToken}` }\n});\n\n\naxiosInstance.interceptors.request.use(async req => {\n    if(!authTokens){\n        // authTokens = localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens'))\n        req.headers.Authorization = `Bearer ${authTokens?.accessToken}`\n    }\n    const user = jwt_decode(authTokens.accessToken)\n    const isExpired = dayjs.unix(user.exp).diff(dayjs()) < 1;\n    if(isExpired) return req\n\n    const response = await axios.post(`${BASE_URL}/token`, {\n        refreshToken: authTokens.refreshToken\n    });\n\n    localStorage.setItem('authTokens', JSON.stringify(response.data))\n    req.headers.Authorization = `Bearer ${authTokens?.accessToken}`\n\n    return req;\n\n\n    \n})\n\n\nexport default axiosInstance;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,KAAK,MAAM,OAAO;AAGzB,MAAMC,QAAQ,GAAI,+CAA+C;AAGjE,IAAIC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,GAAE,IAAI;AAE1G,MAAMG,aAAa,GAAGT,KAAK,CAACU,MAAM,CAAC;EAC/BP,QAAQ;EACRQ,OAAO,EAAE;IAAEC,aAAa,EAAG,UAASR,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAES,WAAY;EAAE;AAClE,CAAC,CAAC;AAGFJ,aAAa,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,MAAMC,GAAG,IAAI;EAChD,IAAG,CAACb,UAAU,EAAC;IACX;IACAa,GAAG,CAACN,OAAO,CAACC,aAAa,GAAI,UAASR,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAES,WAAY,EAAC;EACnE;EACA,MAAMK,IAAI,GAAGjB,UAAU,CAACG,UAAU,CAACS,WAAW,CAAC;EAC/C,MAAMM,SAAS,GAAGjB,KAAK,CAACkB,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,CAACC,IAAI,CAACpB,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;EACxD,IAAGiB,SAAS,EAAE,OAAOF,GAAG;EAExB,MAAMM,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAAE,GAAErB,QAAS,QAAO,EAAE;IACnDsB,YAAY,EAAErB,UAAU,CAACqB;EAC7B,CAAC,CAAC;EAEFpB,YAAY,CAACqB,OAAO,CAAC,YAAY,EAAEnB,IAAI,CAACoB,SAAS,CAACJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EACjEX,GAAG,CAACN,OAAO,CAACC,aAAa,GAAI,UAASR,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAES,WAAY,EAAC;EAE/D,OAAOI,GAAG;AAId,CAAC,CAAC;AAGF,eAAeR,aAAa"},"metadata":{},"sourceType":"module"}