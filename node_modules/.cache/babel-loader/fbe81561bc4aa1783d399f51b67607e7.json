{"ast":null,"code":"var _jsxFileName = \"/Users/primalaero/loanhub/src/Components/Auth/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useHistory } from 'react-router-dom';\nimport MiniLoader from '../../Util/Loader'; // import { useStateValue } from '../../Util/StateProvider';\n\nimport BASE_URL from '../../Util/API';\nimport { onAuthStateChanged, signOut, signInWithEmailAndPassword } from 'firebase/auth'; // import { auth } from '../../firebase';\n\nimport axios from 'axios'; // import { useHistory } from 'react-router-dom';\n// import logo from '../../Assets/imgs/logo.svg';\n\nimport './auth.css';\nimport { auth } from '../../Util/firebase';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ErrorToaster } from '../../Util/Toaster'; // import { Person } from '@material-ui/icons/Person';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(_ref) {\n  _s();\n\n  let {\n    setToken\n  } = _ref;\n  // const [state , dispatch] = useStateValue();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState({});\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const [toaster, setToaster] = useState(false); // const [msg, setMessage] = useState(\"\");\n  // const submitHandler = async (e) => {\n  //     e.preventDefault();\n  //       axios\n  //   .post(`${BASE_URL}/login`, { username, password })\n  //   .then((response) => {\n  //     setLoading(false);\n  //     console.log(response);\n  //     const {\n  //       data: { accessToken },\n  //     } = response;\n  //     axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\n  //     localStorage.setItem('accessToken', accessToken);\n  //     localStorage.getItem(accessToken);\n  //   })\n  //   .catch(() => {\n  //     setLoading(false);\n  //   });\n  // }\n\n  async function loginUser(credentials) {\n    return fetch(`${BASE_URL}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    }).then(data => data.json());\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = await loginUser({\n      username,\n      password\n    });\n    setToken(token);\n  };\n\n  function onEnter(e) {\n    e.stopPropagation();\n\n    if (e.key === 'Enter') {\n      handleSubmit();\n    }\n  } //   const submitHandler = async (e) => {\n  //     e.preventDefault();\n  //     //   Loading to true\n  // axios.post(`${BASE_URL}/login`, {email, password})\n  //   .then((response) => {\n  //     setLoginError(false);\n  //     setLoading(false);\n  //     const {\n  //       data: { accessToken },\n  //     } = response;\n  //         axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\n  //         localStorage.setItem('accessToken', accessToken);\n  //         axios.get(`${BASE_URL}/me`).then((response) => {\n  //           const { data } = response;\n  //           localStorage.setItem('operator', JSON.stringify(data));\n  //         });\n  //         history.push('/app/dashboard');\n  //       })\n  //       .catch(() => {\n  //         setLoading(false);\n  //         setLoginError(true);\n  //       });\n  //   }\n  // const submitHandler = async (e) => {\n  //     e.preventDefault();\n  //     try{\n  //         const user = await signInWithEmailAndPassword(auth, email, password);\n  //         if(user) {\n  //             setSuccess(\"Looks good! Login Successful\")\n  //             history.push(\"/app/dashboard\");\n  //             console.log(user); \n  //             setLoading(false);\n  //         }\n  //     }catch (error) {\n  //         if(error.message === 'Firebase: Error (auth/network-request-failed).') {\n  //             setError(\"Heads up! Network connectivity is lost\")\n  //         }else if(error.message === 'Firebase: Error (auth/user-not-found).') {\n  //             setError(\"Oops! User doesn't exist\")\n  //         }else if (\"Firebase: Error (auth/wrong-password).\"){\n  //             setError(\"Ouch! Username/Password mismatch\")\n  //         }\n  //         setToaster(true)\n  //         setLoading(false);\n  //     };\n  // } \n\n\n  const logOut = async () => {\n    await signOut(auth);\n  };\n\n  onAuthStateChanged(auth, currentUser => {\n    setUser(currentUser);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"Pay Bills! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub-title\",\n          children: \"Login to continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login__form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form mb-lg mtb-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"page-form text-white\",\n            placeholder: \" \",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            className: \"label-name floating__label\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"content-name text-white\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form mtb-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"page-form text-white\",\n            placeholder: \" \",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"label-name floating__label\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"content-name text-white\",\n              children: \"Security\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"typical-error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 31\n        }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"typical-success\",\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub-title t-right mt-md mb-lg\",\n          children: \"Forgotten?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-btn\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sub-title copyright\",\n      children: \"Pay Bills! \\xA9 2022. All rights reserved\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"nNVdDGqLI5zmuQRil2H6xYBoWK4=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/primalaero/loanhub/src/Components/Auth/Login.js"],"names":["React","useState","PropTypes","Link","useHistory","MiniLoader","BASE_URL","onAuthStateChanged","signOut","signInWithEmailAndPassword","axios","auth","ToastContainer","toast","ErrorToaster","Login","setToken","username","setUsername","password","setPassword","user","setUser","error","setError","success","setSuccess","loading","setLoading","history","toaster","setToaster","loginUser","credentials","fetch","method","headers","body","JSON","stringify","then","data","json","handleSubmit","e","preventDefault","token","onEnter","stopPropagation","key","logOut","currentUser","target","value","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, {useState}  from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport MiniLoader from '../../Util/Loader';\r\n// import { useStateValue } from '../../Util/StateProvider';\r\nimport BASE_URL from '../../Util/API';\r\nimport {onAuthStateChanged, signOut, signInWithEmailAndPassword  } from 'firebase/auth';\r\n// import { auth } from '../../firebase';\r\nimport axios from 'axios';\r\n// import { useHistory } from 'react-router-dom';\r\n// import logo from '../../Assets/imgs/logo.svg';\r\nimport './auth.css'\r\nimport { auth } from '../../Util/firebase';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {ErrorToaster} from '../../Util/Toaster'\r\n// import { Person } from '@material-ui/icons/Person';\r\n\r\n\r\nexport default function Login({ setToken }) {\r\n    // const [state , dispatch] = useStateValue();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [user, setUser] = useState({ });\r\n    const [error, setError] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n    const [toaster, setToaster] = useState(false);\r\n    // const [msg, setMessage] = useState(\"\");\r\n\r\n    \r\n\r\n    // const submitHandler = async (e) => {\r\n    //     e.preventDefault();\r\n    //       axios\r\n    //   .post(`${BASE_URL}/login`, { username, password })\r\n    //   .then((response) => {\r\n    //     setLoading(false);\r\n    //     console.log(response);\r\n    //     const {\r\n    //       data: { accessToken },\r\n    //     } = response;\r\n    //     axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\r\n    //     localStorage.setItem('accessToken', accessToken);\r\n    //     localStorage.getItem(accessToken);\r\n    //   })\r\n    //   .catch(() => {\r\n    //     setLoading(false);\r\n    //   });\r\n\r\n    // }\r\n\r\n    async function loginUser(credentials) {\r\n        return fetch(`${BASE_URL}/login`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(credentials)\r\n        })\r\n          .then(data => data.json())\r\n         \r\n       }\r\n\r\n       const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const token = await loginUser({\r\n          username,\r\n          password\r\n        });\r\n        setToken(token);\r\n      }\r\n\r\n\r\n    function onEnter(e){\r\n        e.stopPropagation();\r\n        if (e.key === 'Enter') {\r\n            handleSubmit();\r\n        }\r\n      }\r\n\r\n    //   const submitHandler = async (e) => {\r\n    //     e.preventDefault();\r\n    //     //   Loading to true\r\n        // axios.post(`${BASE_URL}/login`, {email, password})\r\n        //   .then((response) => {\r\n        //     setLoginError(false);\r\n        //     setLoading(false);\r\n        //     const {\r\n        //       data: { accessToken },\r\n        //     } = response;\r\n    //         axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\r\n    //         localStorage.setItem('accessToken', accessToken);\r\n    //         axios.get(`${BASE_URL}/me`).then((response) => {\r\n    //           const { data } = response;\r\n    //           localStorage.setItem('operator', JSON.stringify(data));\r\n    //         });\r\n    //         history.push('/app/dashboard');\r\n    //       })\r\n    //       .catch(() => {\r\n    //         setLoading(false);\r\n    //         setLoginError(true);\r\n    //       });\r\n    //   }\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const submitHandler = async (e) => {\r\n//     e.preventDefault();\r\n//     try{\r\n//         const user = await signInWithEmailAndPassword(auth, email, password);\r\n//         if(user) {\r\n//             setSuccess(\"Looks good! Login Successful\")\r\n//             history.push(\"/app/dashboard\");\r\n//             console.log(user); \r\n//             setLoading(false);\r\n//         }\r\n        \r\n//     }catch (error) {\r\n//         if(error.message === 'Firebase: Error (auth/network-request-failed).') {\r\n//             setError(\"Heads up! Network connectivity is lost\")\r\n//         }else if(error.message === 'Firebase: Error (auth/user-not-found).') {\r\n//             setError(\"Oops! User doesn't exist\")\r\n//         }else if (\"Firebase: Error (auth/wrong-password).\"){\r\n//             setError(\"Ouch! Username/Password mismatch\")\r\n//         }\r\n//         setToaster(true)\r\n//         setLoading(false);\r\n//     };\r\n// } \r\n\r\nconst logOut = async () => {\r\n    await signOut(auth);\r\n}\r\n\r\nonAuthStateChanged(auth, (currentUser)=>{\r\n    setUser(currentUser);\r\n})\r\n\r\n    return (\r\n        <div className=\"login\">\r\n           <div className=\"login__container\">\r\n               <div className=\"logo__section\">\r\n                   {/* <img src={logo} className=\"logo\" alt=\"Logo\" /> <br/> */}\r\n                    <h1 className=\"title\">Pay Bills! </h1> \r\n                    <span className=\"sub-title\">Login to continue</span>\r\n               </div>\r\n               <form className=\"login__form\" onSubmit={handleSubmit}>\r\n               <div className=\"form mb-lg mtb-10\">\r\n                        <input type=\"email\" className=\"page-form text-white\" placeholder=\" \"\r\n                        value={username}\r\n                        onChange={(e)=> setUsername(e.target.value)} required/>\r\n                        <label htmlFor=\"username\" className=\"label-name floating__label\"> \r\n                            <span className=\"content-name text-white\">Username</span>\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"form mtb-10\">\r\n                        <input type=\"password\" className=\"page-form text-white\" placeholder=\" \" \r\n                        value={password}\r\n                        onChange={(e)=> setPassword(e.target.value)}required/>\r\n                        <label htmlFor=\"password\" className=\"label-name floating__label\"> \r\n                            <span className=\"content-name text-white\">Security</span>\r\n                        </label>\r\n                    </div>\r\n                    {error && <p className=\"typical-error\">{error}</p>}\r\n                    {success && <p className=\"typical-success\">{success}</p>}\r\n                {/* <Link to=\"/password-reset\"> */}\r\n                    <span className=\"sub-title t-right mt-md mb-lg\">Forgotten?</span>\r\n                {/* </Link> */}\r\n                <button type=\"submit\" className=\"login-btn\">\r\n                     Login\r\n                     </button>\r\n                {/* </Link> */}\r\n                </form>\r\n           </div>\r\n           <span className=\"sub-title copyright\">Pay Bills! &copy; 2022. All rights reserved</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nLogin.propTypes = {\r\n    setToken: PropTypes.func.isRequired\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}