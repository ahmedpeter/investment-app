{"ast":null,"code":"var _jsxFileName = \"/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Auth/Login.js\",\n    _s = $RefreshSig$();\n\n// import React from 'react';\n// import {useState} from \"react\";\n// import { Link, useHistory } from 'react-router-dom';\n// import MiniLoader from '../../Util/Loader';\n// import API from '../../Util/API';\n// import axios from 'axios';\n// import logo from '../../Assets/imgs/Git-logo.png';\n// import './auth.css'\n// import { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n// import {ErrorToaster} from '../../Util/Toaster'\n// function Login() {\n//     const [username, setUsername] = useState(\"\");\n//     const [password, setPassword] = useState(\"\");\n//     const [success, setSuccess] = useState(false);\n//     const [loading, setLoading] = useState(false);\n//     const history = useHistory();\n//     const [toaster, setToaster] = useState(false);\n//     const [msg, setMessage] = useState(\"\");\n//     const submitHandler = async (e) => {\n//         const BASE_URL = 'https://dry-falls-41890.herokuapp.com/api/v1';\n//         setLoading(true);\n//         e.preventDefault();\n//         if(!username || !password){\n//             setMessage(\"Username/Password is a required field\");\n//             return false\n//         }\n//           axios\n//       .post(`${BASE_URL}/login`, { username, password })\n//       .then((response) => {\n//         setLoading(false);\n//         console.log(response);\n//         const data = response.data;\n//         axios.defaults.headers.common.Authorization = `Bearer ${data.accessToken}`;\n//         localStorage.setItem('accessToken', data.accessToken);\n//         const storedToken = JSON.parse(localStorage.getItem(\"accessToken\"));\n//        const rs = axios.post(`${BASE_URL}/token`, {\n//             refresh_token: storedToken.refreshToken,\n//           })\n//           const { token, user } = rs.data;\n//           localStorage.setItem(\"token\", JSON.stringify(token));\n//             localStorage.setItem(\"user\", JSON.stringify(user));\n//         return;\n//         localStorage.setItem('userInfo', JSON.stringify(response));\n//       })\n//       .catch((err) => {\n//           console.log(err);\n//           setMessage(`Oops! Something isn't right. Confirm\n//           (a) Your Username/Password and\n//           (b) Your Network connectivity`)\n//         setLoading(false);\n//       });\n//     }\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport MiniLoader from \"../../Util/Loader\";\nimport BASE_URL from \"../../Util/API\";\nimport API from \"../../Util/API\";\nimport axios from \"axios\";\nimport logo from \"../../Assets/imgs/Git-logo.png\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"./auth.css\";\nimport { ErrorToaster } from \"../../Util/Toaster\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  // const [state , dispatch] = useStateValue();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState({});\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const [toaster, setToaster] = useState(false);\n  const [msg, setMessage] = useState(\"\");\n  const br = \"<br/>\";\n\n  const submitHandler = async e => {\n    console.log(\"hello\");\n    const BASE_URL = \"https://investment-app-x8v6.onrender.com/api/v1\";\n    setLoading(true);\n    e.preventDefault();\n\n    if (!username || !password) {\n      setMessage(\"Username/Password is a required field\");\n      return false;\n    }\n\n    axios.post(`${BASE_URL}/login`, {\n      username,\n      password\n    }).then(response => {\n      setLoading(false);\n      console.log(response);\n      const {\n        data: {\n          accessToken\n        }\n      } = response;\n      const data = response.data;\n\n      if (response.status == 200) {\n        localStorage.setItem(\"userInfo\", JSON.stringify(response));\n        history.push(\"/app/dashboard\");\n      }\n\n      axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\n      localStorage.setItem(\"accessToken\", accessToken);\n      axios.defaults.headers.common.Authorization = `Bearer ${data.accessToken}`;\n      localStorage.setItem(\"accessToken\", data.accessToken);\n      const storedToken = JSON.parse(localStorage.getItem(\"accessToken\")); // localStorage.setItem('accessToken', data.accessToken);\n\n      const rs = axios.post(`${BASE_URL}/token`, {\n        refresh_token: storedToken.refreshToken\n      });\n      const {\n        token,\n        user\n      } = rs.data;\n      localStorage.setItem(\"token\", JSON.stringify(token));\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      return; //   .then((response) => {\n      //     console.log(response);\n      //     const { data } = response;\n      //     localStorage.setItem('operator', JSON.stringify(data));\n      //     console.log(data)\n      //   });\n    }).catch(err => {\n      console.log(err);\n      setMessage(`Oops! Something isn't right. Confirm \n           (a) Your Username/Password and \n           (b) Your Network connectivity`);\n      setLoading(false);\n    });\n  };\n\n  function onEnter(e) {\n    e.stopPropagation();\n\n    if (e.key === \"Enter\") {\n      submitHandler();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login__badge\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo__section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login__section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"logo\",\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 58\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub-title\",\n          children: \"Login to Dividend Global\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"login__form\",\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form mb-lg mtb-10\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"page-form f-11\",\n              placeholder: \" \",\n              value: username,\n              autoComplete: \"off\",\n              onChange: e => setUsername(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              className: \"label-name floating__label\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"content-name\",\n                children: \"Username/ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form mtb-10\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"page-form f-11\",\n              placeholder: \" \",\n              value: password,\n              autoComplete: \"off\",\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"label-name floating__label\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"content-name\",\n                children: \"Security\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), msg && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"typical-error\",\n            children: [\" \", msg]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 21\n          }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"typical-success\",\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/password-reset\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sub-title t-right mt-md mb-lg\",\n              children: \"Forgotten?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"login-btn\",\n            disabled: loading,\n            children: [!loading && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 28\n            }, this), loading && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \" Verifying...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sub-title\",\n            children: \"Don't have an account yet?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/account/investor/new\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              children: \"Open Account \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sub-title copyright\",\n      children: [\"Dividend Global! \\xA9 \", new Date().getFullYear(), \". All rights reserved\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), toaster && /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"NVxyNd8mhhF9U6+V3Nb3wycOGGE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Components/Auth/Login.js"],"names":["React","useState","Link","useHistory","MiniLoader","BASE_URL","API","axios","logo","ToastContainer","toast","ErrorToaster","Login","username","setUsername","password","setPassword","user","setUser","error","setError","success","setSuccess","loading","setLoading","history","toaster","setToaster","msg","setMessage","br","submitHandler","e","console","log","preventDefault","post","then","response","data","accessToken","status","localStorage","setItem","JSON","stringify","push","defaults","headers","common","Authorization","storedToken","parse","getItem","rs","refresh_token","refreshToken","token","catch","err","onEnter","stopPropagation","key","target","value","Date","getFullYear"],"mappings":"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","sourcesContent":["// import React from 'react';\r\n// import {useState} from \"react\";\r\n// import { Link, useHistory } from 'react-router-dom';\r\n// import MiniLoader from '../../Util/Loader';\r\n// import API from '../../Util/API';\r\n// import axios from 'axios';\r\n// import logo from '../../Assets/imgs/Git-logo.png';\r\n// import './auth.css'\r\n// import { ToastContainer, toast } from 'react-toastify';\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n// import {ErrorToaster} from '../../Util/Toaster'\r\n\r\n// function Login() {\r\n//     const [username, setUsername] = useState(\"\");\r\n//     const [password, setPassword] = useState(\"\");\r\n//     const [success, setSuccess] = useState(false);\r\n//     const [loading, setLoading] = useState(false);\r\n//     const history = useHistory();\r\n//     const [toaster, setToaster] = useState(false);\r\n//     const [msg, setMessage] = useState(\"\");\r\n\r\n//     const submitHandler = async (e) => {\r\n//         const BASE_URL = 'https://dry-falls-41890.herokuapp.com/api/v1';\r\n//         setLoading(true);\r\n//         e.preventDefault();\r\n//         if(!username || !password){\r\n//             setMessage(\"Username/Password is a required field\");\r\n//             return false\r\n//         }\r\n\r\n//           axios\r\n//       .post(`${BASE_URL}/login`, { username, password })\r\n//       .then((response) => {\r\n//         setLoading(false);\r\n//         console.log(response);\r\n//         const data = response.data;\r\n\r\n//         axios.defaults.headers.common.Authorization = `Bearer ${data.accessToken}`;\r\n\r\n//         localStorage.setItem('accessToken', data.accessToken);\r\n//         const storedToken = JSON.parse(localStorage.getItem(\"accessToken\"));\r\n//        const rs = axios.post(`${BASE_URL}/token`, {\r\n//             refresh_token: storedToken.refreshToken,\r\n//           })\r\n\r\n//           const { token, user } = rs.data;\r\n//           localStorage.setItem(\"token\", JSON.stringify(token));\r\n//             localStorage.setItem(\"user\", JSON.stringify(user));\r\n//         return;\r\n//         localStorage.setItem('userInfo', JSON.stringify(response));\r\n\r\n//       })\r\n//       .catch((err) => {\r\n//           console.log(err);\r\n//           setMessage(`Oops! Something isn't right. Confirm\r\n//           (a) Your Username/Password and\r\n//           (b) Your Network connectivity`)\r\n//         setLoading(false);\r\n//       });\r\n\r\n//     }\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport MiniLoader from \"../../Util/Loader\";\r\nimport BASE_URL from \"../../Util/API\";\r\nimport API from \"../../Util/API\";\r\nimport axios from \"axios\";\r\nimport logo from \"../../Assets/imgs/Git-logo.png\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"./auth.css\";\r\nimport { ErrorToaster } from \"../../Util/Toaster\";\r\n\r\nfunction Login() {\r\n  // const [state , dispatch] = useStateValue();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [user, setUser] = useState({});\r\n  const [error, setError] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const [toaster, setToaster] = useState(false);\r\n  const [msg, setMessage] = useState(\"\");\r\n  const br = \"<br/>\";\r\n\r\n  const submitHandler = async (e) => {\r\n    console.log(\"hello\");\r\n    const BASE_URL = \"https://investment-app-x8v6.onrender.com/api/v1\";\r\n    setLoading(true);\r\n    e.preventDefault();\r\n    if (!username || !password) {\r\n      setMessage(\"Username/Password is a required field\");\r\n      return false;\r\n    }\r\n\r\n    axios\r\n      .post(`${BASE_URL}/login`, { username, password })\r\n      .then((response) => {\r\n        setLoading(false);\r\n        console.log(response);\r\n        const {\r\n          data: { accessToken },\r\n        } = response;\r\n        const data = response.data;\r\n\r\n        if (response.status == 200) {\r\n          localStorage.setItem(\"userInfo\", JSON.stringify(response));\r\n          history.push(\"/app/dashboard\");\r\n        }\r\n        axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\r\n        localStorage.setItem(\"accessToken\", accessToken);\r\n        axios.defaults.headers.common.Authorization = `Bearer ${data.accessToken}`;\r\n\r\n        localStorage.setItem(\"accessToken\", data.accessToken);\r\n        const storedToken = JSON.parse(localStorage.getItem(\"accessToken\"));\r\n        // localStorage.setItem('accessToken', data.accessToken);\r\n        const rs = axios.post(`${BASE_URL}/token`, {\r\n          refresh_token: storedToken.refreshToken,\r\n        });\r\n\r\n        const { token, user } = rs.data;\r\n        localStorage.setItem(\"token\", JSON.stringify(token));\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        return;\r\n        //   .then((response) => {\r\n        //     console.log(response);\r\n        //     const { data } = response;\r\n        //     localStorage.setItem('operator', JSON.stringify(data));\r\n        //     console.log(data)\r\n        //   });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setMessage(`Oops! Something isn't right. Confirm \r\n           (a) Your Username/Password and \r\n           (b) Your Network connectivity`);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  function onEnter(e) {\r\n    e.stopPropagation();\r\n    if (e.key === \"Enter\") {\r\n      submitHandler();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__badge\">\r\n        <div className=\"logo__section\"></div>\r\n      </div>\r\n      <div className=\"login__section\">\r\n        <div className=\"login__container\">\r\n          <img src={logo} className=\"logo\" alt=\"Logo\" /> <br />\r\n          <span className=\"sub-title\">Login to Dividend Global</span>\r\n          <form className=\"login__form\" onSubmit={submitHandler}>\r\n            <div className=\"form mb-lg mtb-10\">\r\n              <input\r\n                type=\"email\"\r\n                className=\"page-form f-11\"\r\n                placeholder=\" \"\r\n                value={username}\r\n                autoComplete=\"off\"\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                required\r\n              />\r\n              <label htmlFor=\"username\" className=\"label-name floating__label\">\r\n                <span className=\"content-name\">Username/ID</span>\r\n              </label>\r\n            </div>\r\n            <div className=\"form mtb-10\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"page-form f-11\"\r\n                placeholder=\" \"\r\n                value={password}\r\n                autoComplete=\"off\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n              />\r\n              <label htmlFor=\"password\" className=\"label-name floating__label\">\r\n                <span className=\"content-name\">Security</span>\r\n              </label>\r\n            </div>\r\n            {msg && <p className=\"typical-error\"> {msg}</p>}\r\n            {success && <p className=\"typical-success\">{msg}</p>}\r\n            <Link to=\"/password-reset\">\r\n              <span className=\"sub-title t-right mt-md mb-lg\">Forgotten?</span>\r\n            </Link>\r\n            <button type=\"submit\" className=\"login-btn\" disabled={loading}>\r\n              {/* { loading && <MiniLoader/> } */}\r\n              {!loading && <span>Login</span>}\r\n              {loading && <span> Verifying...</span>}\r\n            </button>\r\n            <span className=\"sub-title\">Don't have an account yet?</span>\r\n            {/* <p className=\"label-name\">Don't have an account yet?</p> */}\r\n            <Link to=\"/account/investor/new\">\r\n              <button className=\"btn btn-secondary\">Open Account </button>\r\n            </Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <span className=\"sub-title copyright\">\r\n        Dividend Global! &copy; {new Date().getFullYear()}. All rights reserved\r\n      </span>\r\n      {toaster && <ToastContainer />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}