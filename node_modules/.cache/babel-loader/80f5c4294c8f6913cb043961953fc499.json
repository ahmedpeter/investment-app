{"ast":null,"code":"var _jsxFileName = \"/Users/primalaero/loanhub/src/Components/Pages/Loans.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { db } from \"../../Util/firebase\";\nimport { collection, getDocs, addDocs, updateDoc, doc, deleteDoc } from \"firebase/firestore\"; // import IconButton from '@mui/material/IconButton';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper'; // import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\n// import KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createData(name, id, loan, term, due, paid, balance, lastPayment, released, status) {\n  return {\n    name,\n    id,\n    loan,\n    term,\n    due,\n    paid,\n    balance,\n    lastPayment,\n    released,\n    status,\n    history: [{\n      date: '2020-01-05',\n      customerId: '11091700',\n      amount: 3\n    }, {\n      date: '2020-01-02',\n      customerId: 'Anonymous',\n      amount: 1\n    }]\n  };\n}\n\nfunction Row(props) {\n  const {\n    row\n  } = props; // const [open, setOpen] = React.useState(false);\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      sx: {\n        '& > *': {\n          borderBottom: 'unset'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: row.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: row.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: [\"\\u20A6\", row.loan]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: row.term\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: [\"\\u20A6\", row.due]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: [\"\\u20A6\", row.paid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: [\"\\u20A6\", row.balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: [\"\\u20A6\", row.lastPayment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: row.released\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: row.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Row;\nRow.propTypes = {\n  row: PropTypes.shape({\n    loan: PropTypes.number.isRequired,\n    history: PropTypes.arrayOf(PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      customerId: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired\n    })).isRequired,\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    term: PropTypes.string.isRequired,\n    due: PropTypes.number.isRequired,\n    paid: PropTypes.number.isRequired,\n    balance: PropTypes.number.isRequired,\n    lastPayment: PropTypes.number.isRequired,\n    released: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired\n  }).isRequired\n};\nconst rows = [createData('PB2789GV', 'Ifeoma Marvelous C. Peter', 159000, '3 Months', 204500, 18000, 186500, 18000, 'Nov 20 2021', 'Open'), createData('PB2789GV', 'Ahmed Peter', 159000, '3 Months', 204500, 18000, 186500, 18000, 'Nov 20 2021', 'Open'), createData('PB2789GV', 'Annastacia Ilamosi Amanda Peter', 159000, '3 Months', 204500, 18000, 186500, 18000, 'Nov 20 2021', 'Open')];\nexport default function Loans() {\n  _s();\n\n  const [loans, setLoans] = useState([]);\n  const loansCollectionRef = collection(db, \"loans\"); // const createLoan = async () => {\n  //   await addDoc(loansCollectionRef, newObject)\n  // };\n  // const updateLoan = async (id, loanObject) => {\n  //   const loanDoc = doc(db, \"loans\", id);\n  //   const loanToUpdate = loanObject;\n  //   await updateDoc(loanDoc, loanToUpdate);\n  // }\n  // const deleteLoan = async (id) => {\n  //   const loanDoc = doc(db, \"loans\", id);\n  //   await deleteDoc(loanDoc);\n  // }\n\n  useEffect(() => {\n    const getLoans = async () => {\n      const data = await getDocs(loansCollectionRef);\n      console.log(data.docs); // setLoans(data.docs.map((doc)=> ({...doc.data(), id: doc.id})));\n    };\n\n    getLoans();\n  }, loans);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-content m-t-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"row page__header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"tab__title ml-l-5\",\n        children: \"Loans\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"label ml-l-5 pl pl-15\",\n      children: \"View and Manage Borrowers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          \"aria-label\": \"collapsible table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Account ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Customer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Loan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Loan Term\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Due\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Last Payment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Released\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.map(row => /*#__PURE__*/_jsxDEV(Row, {\n              row: row\n            }, row.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Loans, \"74x8/AtvRjSIMjQmOde+x2eq9O8=\");\n\n_c2 = Loans;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"Loans\");","map":{"version":3,"sources":["/Users/primalaero/loanhub/src/Components/Pages/Loans.js"],"names":["React","useState","useEffect","PropTypes","db","collection","getDocs","addDocs","updateDoc","doc","deleteDoc","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","createData","name","id","loan","term","due","paid","balance","lastPayment","released","status","history","date","customerId","amount","Row","props","row","borderBottom","propTypes","shape","number","isRequired","arrayOf","string","rows","Loans","loans","setLoans","loansCollectionRef","getLoans","data","console","log","docs","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,EAAT,QAAmB,qBAAnB;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,OAA9B,EAAuCC,SAAvC,EAAkDC,GAAlD,EAAuDC,SAAvD,QAAyE,oBAAzE,C,CACA;;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB,C,CACA;AACA;;;;AAEA,SAASC,UAAT,CAAqBC,IAArB,EAA2BC,EAA3B,EAA+BC,IAA/B,EAAqCC,IAArC,EAA2CC,GAA3C,EAAgDC,IAAhD,EAAsDC,OAAtD,EAA+DC,WAA/D,EAA4EC,QAA5E,EAAsFC,MAAtF,EAA8F;AAC1F,SAAO;AACLT,IAAAA,IADK;AAELC,IAAAA,EAFK;AAGLC,IAAAA,IAHK;AAILC,IAAAA,IAJK;AAKLC,IAAAA,GALK;AAMLC,IAAAA,IANK;AAOLC,IAAAA,OAPK;AAQLC,IAAAA,WARK;AASLC,IAAAA,QATK;AAULC,IAAAA,MAVK;AAWLC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,IAAI,EAAE,YADR;AAEEC,MAAAA,UAAU,EAAE,UAFd;AAGEC,MAAAA,MAAM,EAAE;AAHV,KADO,EAMP;AACEF,MAAAA,IAAI,EAAE,YADR;AAEEC,MAAAA,UAAU,EAAE,WAFd;AAGEC,MAAAA,MAAM,EAAE;AAHV,KANO;AAXJ,GAAP;AAwBD;;AAED,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAUD,KAAhB,CADkB,CAElB;;AAEA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAE,iBAAS;AAAEE,UAAAA,YAAY,EAAE;AAAhB;AAAX,OAAd;AAAA,8BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,IAArB;AAA0B,QAAA,KAAK,EAAC,KAAhC;AAAA,kBACGD,GAAG,CAAChB;AADP;AAAA;AAAA;AAAA;AAAA,cAVF,eAaE,QAAC,SAAD;AAAA,kBAAYgB,GAAG,CAACf;AAAhB;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE,QAAC,SAAD;AAAA,6BAAoBe,GAAG,CAACd,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE,QAAC,SAAD;AAAA,kBAAYc,GAAG,CAACb;AAAhB;AAAA;AAAA;AAAA;AAAA,cAfF,eAgBE,QAAC,SAAD;AAAA,6BAAoBa,GAAG,CAACZ,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,eAiBE,QAAC,SAAD;AAAA,6BAAoBY,GAAG,CAACX,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,eAkBE,QAAC,SAAD;AAAA,6BAAoBW,GAAG,CAACV,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,eAmBE,QAAC,SAAD;AAAA,6BAAoBU,GAAG,CAACT,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF,eAoBE,QAAC,SAAD;AAAA,kBAAYS,GAAG,CAACR;AAAhB;AAAA;AAAA;AAAA;AAAA,cApBF,eAqBE,QAAC,SAAD;AAAA,kBAAYQ,GAAG,CAACP;AAAhB;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;KA/BQK,G;AAiCTA,GAAG,CAACI,SAAJ,GAAgB;AACdF,EAAAA,GAAG,EAAEhC,SAAS,CAACmC,KAAV,CAAgB;AACnBjB,IAAAA,IAAI,EAAElB,SAAS,CAACoC,MAAV,CAAiBC,UADJ;AAEnBX,IAAAA,OAAO,EAAE1B,SAAS,CAACsC,OAAV,CACPtC,SAAS,CAACmC,KAAV,CAAgB;AACdN,MAAAA,MAAM,EAAE7B,SAAS,CAACoC,MAAV,CAAiBC,UADX;AAEdT,MAAAA,UAAU,EAAE5B,SAAS,CAACuC,MAAV,CAAiBF,UAFf;AAGdV,MAAAA,IAAI,EAAE3B,SAAS,CAACuC,MAAV,CAAiBF;AAHT,KAAhB,CADO,EAMPA,UARiB;AASnBpB,IAAAA,EAAE,EAAEjB,SAAS,CAACuC,MAAV,CAAiBF,UATF;AAUnBrB,IAAAA,IAAI,EAAEhB,SAAS,CAACuC,MAAV,CAAiBF,UAVJ;AAWnBlB,IAAAA,IAAI,EAAEnB,SAAS,CAACuC,MAAV,CAAiBF,UAXJ;AAYnBjB,IAAAA,GAAG,EAAEpB,SAAS,CAACoC,MAAV,CAAiBC,UAZH;AAanBhB,IAAAA,IAAI,EAAErB,SAAS,CAACoC,MAAV,CAAiBC,UAbJ;AAcnBf,IAAAA,OAAO,EAAEtB,SAAS,CAACoC,MAAV,CAAiBC,UAdP;AAenBd,IAAAA,WAAW,EAAEvB,SAAS,CAACoC,MAAV,CAAiBC,UAfX;AAgBnBb,IAAAA,QAAQ,EAAExB,SAAS,CAACuC,MAAV,CAAiBF,UAhBR;AAiBnBZ,IAAAA,MAAM,EAAEzB,SAAS,CAACuC,MAAV,CAAiBF;AAjBN,GAAhB,EAkBFA;AAnBW,CAAhB;AAsBA,MAAMG,IAAI,GAAG,CACXzB,UAAU,CAAC,UAAD,EAAa,2BAAb,EAA0C,MAA1C,EAAkD,UAAlD,EAA8D,MAA9D,EAAsE,KAAtE,EAA8E,MAA9E,EAAsF,KAAtF,EAA6F,aAA7F,EAA4G,MAA5G,CADC,EAEXA,UAAU,CAAC,UAAD,EAAa,aAAb,EAA4B,MAA5B,EAAoC,UAApC,EAAgD,MAAhD,EAAwD,KAAxD,EAAgE,MAAhE,EAAwE,KAAxE,EAA+E,aAA/E,EAA8F,MAA9F,CAFC,EAGXA,UAAU,CAAC,UAAD,EAAa,iCAAb,EAAgD,MAAhD,EAAwD,UAAxD,EAAoE,MAApE,EAA4E,KAA5E,EAAoF,MAApF,EAA4F,KAA5F,EAAmG,aAAnG,EAAkH,MAAlH,CAHC,CAAb;AAQF,eAAe,SAAS0B,KAAT,GAAiB;AAAA;;AAE9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB7C,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM8C,kBAAkB,GAAG1C,UAAU,CAACD,EAAD,EAAK,OAAL,CAArC,CAH8B,CAK9B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEAF,EAAAA,SAAS,CAAC,MAAK;AACb,UAAM8C,QAAQ,GAAG,YAAY;AAC3B,YAAMC,IAAI,GAAG,MAAM3C,OAAO,CAACyC,kBAAD,CAA1B;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB,EAF2B,CAG3B;AACD,KAJD;;AAKAJ,IAAAA,QAAQ;AAET,GARQ,EAQNH,KARM,CAAT;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACA;AAAS,MAAA,SAAS,EAAC,kBAAnB;AAAA,6BACJ;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,YADA,eAKJ;AAAI,MAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALI,eAMJ;AAAS,MAAA,SAAS,EAAC,KAAnB;AAAA,6BACM,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAE5B,KAA3B;AAAA,+BACM,QAAC,KAAD;AAAO,wBAAW,mBAAlB;AAAA,kCACE,QAAC,SAAD;AAAA,mCACE,QAAC,QAAD;AAAA,sCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALD,eAME,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eAOE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,eAQE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARF,eASE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,eAUE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF,eAWE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAgBE,QAAC,SAAD;AAAA,sBACG0B,IAAI,CAACU,GAAL,CAAUlB,GAAD,iBACR,QAAC,GAAD;AAAoB,cAAA,GAAG,EAAEA;AAAzB,eAAUA,GAAG,CAAChB,IAAd;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA,kBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,YANI;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GAjEuByB,K;;MAAAA,K","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { db } from \"../../Util/firebase\";\nimport { collection, getDocs, addDocs, updateDoc, doc, deleteDoc, } from \"firebase/firestore\";\n// import IconButton from '@mui/material/IconButton';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n// import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\n// import KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\n\nfunction createData( name, id, loan, term, due, paid, balance, lastPayment, released, status) {\n    return {\n      name,\n      id,\n      loan,\n      term,\n      due,\n      paid,\n      balance,\n      lastPayment,\n      released,\n      status,\n      history: [\n        {\n          date: '2020-01-05',\n          customerId: '11091700',\n          amount: 3,\n        },\n        {\n          date: '2020-01-02',\n          customerId: 'Anonymous',\n          amount: 1,\n        },\n      ],\n    };\n  }\n\n  function Row(props) {\n    const { row } = props;\n    // const [open, setOpen] = React.useState(false);\n  \n    return (\n      <React.Fragment>\n        <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\n          <TableCell>\n            {/* <IconButton\n              aria-label=\"expand row\"\n              size=\"small\"\n              onClick={() => setOpen(!open)}\n            >\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n            </IconButton> */}\n          </TableCell>\n          <TableCell component=\"th\" scope=\"row\">\n            {row.name}\n          </TableCell>\n          <TableCell>{row.id}</TableCell>\n          <TableCell>&#x20A6;{row.loan}</TableCell>\n          <TableCell>{row.term}</TableCell>\n          <TableCell>&#x20A6;{row.due}</TableCell>\n          <TableCell>&#x20A6;{row.paid}</TableCell>\n          <TableCell>&#x20A6;{row.balance}</TableCell>\n          <TableCell>&#x20A6;{row.lastPayment}</TableCell>\n          <TableCell>{row.released}</TableCell>\n          <TableCell>{row.status}</TableCell>\n        </TableRow>\n      </React.Fragment>\n    );\n  }\n  \n  Row.propTypes = {\n    row: PropTypes.shape({\n      loan: PropTypes.number.isRequired,\n      history: PropTypes.arrayOf(\n        PropTypes.shape({\n          amount: PropTypes.number.isRequired,\n          customerId: PropTypes.string.isRequired,\n          date: PropTypes.string.isRequired,\n        }),\n      ).isRequired,\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      term: PropTypes.string.isRequired,\n      due: PropTypes.number.isRequired,\n      paid: PropTypes.number.isRequired,\n      balance: PropTypes.number.isRequired,\n      lastPayment: PropTypes.number.isRequired,\n      released: PropTypes.string.isRequired,\n      status: PropTypes.string.isRequired,\n    }).isRequired,\n  };\n  \n  const rows = [\n    createData('PB2789GV', 'Ifeoma Marvelous C. Peter', 159000, '3 Months', 204500, 18000,  186500, 18000, 'Nov 20 2021', 'Open'),\n    createData('PB2789GV', 'Ahmed Peter', 159000, '3 Months', 204500, 18000,  186500, 18000, 'Nov 20 2021', 'Open'),\n    createData('PB2789GV', 'Annastacia Ilamosi Amanda Peter', 159000, '3 Months', 204500, 18000,  186500, 18000, 'Nov 20 2021', 'Open'),\n  ];\n\n  \n\nexport default function Loans() {\n\n  const [loans, setLoans] = useState([]);\n  const loansCollectionRef = collection(db, \"loans\");\n \n  // const createLoan = async () => {\n  //   await addDoc(loansCollectionRef, newObject)\n  // };\n\n  // const updateLoan = async (id, loanObject) => {\n  //   const loanDoc = doc(db, \"loans\", id);\n  //   const loanToUpdate = loanObject;\n  //   await updateDoc(loanDoc, loanToUpdate);\n  // }\n\n  // const deleteLoan = async (id) => {\n  //   const loanDoc = doc(db, \"loans\", id);\n  //   await deleteDoc(loanDoc);\n  // }\n\n  useEffect(()=> {\n    const getLoans = async () => {\n      const data = await getDocs(loansCollectionRef);\n      console.log(data.docs);\n      // setLoans(data.docs.map((doc)=> ({...doc.data(), id: doc.id})));\n    };\n    getLoans();\n\n  }, loans);\n\n  return (\n    <div className=\"main-content m-t-lg\">\n    <section className=\"row page__header\" >\n<h1 className=\"tab__title ml-l-5\">Loans</h1>\n\n</section>\n<h1 className=\"label ml-l-5 pl pl-15\">View and Manage Borrowers</h1>\n<section className=\"row\">\n      <TableContainer component={Paper}>\n            <Table aria-label=\"collapsible table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell />\n                  <TableCell>Account ID</TableCell>\n                  <TableCell>Customer</TableCell>\n                  <TableCell>Loan</TableCell>\n                 <TableCell>Loan Term</TableCell>\n                  <TableCell>Due</TableCell>\n                  <TableCell>Paid</TableCell>\n                  <TableCell>Balance</TableCell>\n                  <TableCell>Last Payment</TableCell>\n                  <TableCell>Released</TableCell>\n                  <TableCell>Status</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map((row) => (\n                  <Row key={row.name} row={row} />\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n    </section> \n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}