{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nexport const useForm = (callback, validate, initialValues) => {\n  _s();\n\n  const [inputValues, setInputValues] = useState(initialValues || {});\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      if (callback) {\n        callback();\n      } else {\n        return;\n      }\n    }\n  }, [errors]);\n\n  const onSubmitHandler = event => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    setErrors(validate(inputValues));\n    setIsSubmitting(true);\n  };\n\n  const onChangeHandler = event => {\n    if (!(event === null || event === void 0 ? void 0 : event.persist)) {\n      setInputValues(inputValues => ({ ...inputValues,\n        [event === null || event === void 0 ? void 0 : event.name]: event === null || event === void 0 ? void 0 : event.value\n      }));\n    } else {\n      event === null || event === void 0 ? void 0 : event.persist();\n      const target = event === null || event === void 0 ? void 0 : event.target;\n\n      if (target === null || target === void 0 ? void 0 : target.name) {\n        setInputValues(inputValues => ({ ...inputValues,\n          [target.name]: target.value\n        }));\n      }\n    }\n  };\n\n  return {\n    onChangeHandler,\n    onSubmitHandler,\n    inputValues,\n    errors\n  };\n};\n\n_s(useForm, \"DKgi7kY+QzoJIqnPfQG10G+Dmqc=\");","map":{"version":3,"sources":["/Users/primalaero/loanhub/src/Util/useform.js"],"names":["useState","useEffect","useForm","callback","validate","initialValues","inputValues","setInputValues","errors","setErrors","isSubmitting","setIsSubmitting","Object","keys","length","onSubmitHandler","event","preventDefault","onChangeHandler","persist","name","value","target"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,MAAMC,OAAO,GAAG,CACrBC,QADqB,EAEvBC,QAFuB,EAGvBC,aAHuB,KAGE;AAAA;;AACvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAACK,aAAa,IAAI,EAAlB,CAA9C;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,KAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,MAApB,KAA+B,CAA/B,IAAoCJ,YAAxC,EAAsD;AACpD,UAAIP,QAAJ,EAAc;AACZA,QAAAA,QAAQ;AACT,OAFD,MAEO;AACL;AACD;AACF;AACF,GARQ,EAQN,CAACK,MAAD,CARM,CAAT;;AAUA,QAAMO,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAIA,KAAJ,EAAW;AACTA,MAAAA,KAAK,CAACC,cAAN;AACD;;AACDR,IAAAA,SAAS,CAACL,QAAQ,CAACE,WAAD,CAAT,CAAT;AACAK,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAND;;AAQA,QAAMO,eAAe,GAAIF,KAAD,IAAW;AACjC,QAAI,EAACA,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEG,OAAR,CAAJ,EAAqB;AACnBZ,MAAAA,cAAc,CAAED,WAAD,KAAkB,EAC/B,GAAGA,WAD4B;AAE/B,SAACU,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEI,IAAR,GAAeJ,KAAf,aAAeA,KAAf,uBAAeA,KAAK,CAAEK;AAFS,OAAlB,CAAD,CAAd;AAID,KALD,MAKO;AACLL,MAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEG,OAAP;AACA,YAAMG,MAAM,GAAGN,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEM,MAAtB;;AACA,UAAIA,MAAJ,aAAIA,MAAJ,uBAAIA,MAAM,CAAEF,IAAZ,EAAkB;AAChBb,QAAAA,cAAc,CAAED,WAAD,KAAkB,EAC/B,GAAGA,WAD4B;AAE/B,WAACgB,MAAM,CAACF,IAAR,GAAeE,MAAM,CAACD;AAFS,SAAlB,CAAD,CAAd;AAID;AACF;AACF,GAhBD;;AAkBA,SAAO;AACLH,IAAAA,eADK;AAELH,IAAAA,eAFK;AAGLT,IAAAA,WAHK;AAILE,IAAAA;AAJK,GAAP;AAMD,CAlDM;;GAAMN,O","sourcesContent":["import { useState, useEffect } from 'react';\nexport const useForm = ( \n  callback?: () => void,\nvalidate?: any,\ninitialValues?: any,) => {\n  const [inputValues, setInputValues] = useState(initialValues || {});\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      if (callback) {\n        callback();\n      } else {\n        return;\n      }\n    }\n  }, [errors]);\n\n  const onSubmitHandler = (event) => {\n    if (event) {\n      event.preventDefault();\n    }\n    setErrors(validate(inputValues));\n    setIsSubmitting(true);\n  };\n\n  const onChangeHandler = (event) => {\n    if (!event?.persist) {\n      setInputValues((inputValues) => ({\n        ...inputValues,\n        [event?.name]: event?.value,\n      }));\n    } else {\n      event?.persist();\n      const target = event?.target;\n      if (target?.name) {\n        setInputValues((inputValues) => ({\n          ...inputValues,\n          [target.name]: target.value,\n        }));\n      }\n    }\n  };\n\n  return {\n    onChangeHandler,\n    onSubmitHandler,\n    inputValues,\n    errors,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}