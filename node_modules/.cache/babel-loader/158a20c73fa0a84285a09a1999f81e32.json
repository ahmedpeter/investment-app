{"ast":null,"code":"var _jsxFileName = \"/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Util/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { createContext, useState, useEffect } from 'react-dom';\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from 'react-router-dom';\n\n//  const AuthContext = createContext();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport default AuthContext;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  let [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\n  let [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null);\n  let [loading, setLoading] = useState(true);\n  const history = useHistory();\n  let logOutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem('authTokens');\n    history.push('/login');\n  };\n  let updateToken = async () => {\n    let response = await fetch('https://dry-falls-41890.herokuapp.com/api/v1/token', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'refresh': authTokens === null || authTokens === void 0 ? void 0 : authTokens.refreshToken\n      })\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.accessToken));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n    } else {\n      logOutUser();\n    }\n    if (loading) {\n      setLoading(false);\n    }\n  };\n  let contextData = {\n    user: user,\n    authTokens: authTokens,\n    // loginUser:loginUser,\n    logOutUser: logOutUser\n  };\n  useEffect(() => {\n    if (loading) {\n      updateToken();\n    }\n    let fiveMinutes = 1000 * 60 * 5;\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n      }\n    }, fiveMinutes);\n    return () => clearInterval(interval);\n  }, [authTokens, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: loading ? null : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"QfEr+CswniJk+dabu5iJ57WLQLU=\", false, function () {\n  return [useHistory];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jwt_decode","useHistory","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","loading","setLoading","history","logOutUser","removeItem","push","updateToken","response","fetch","method","headers","body","stringify","refreshToken","data","json","status","accessToken","setItem","contextData","fiveMinutes","interval","setInterval","clearInterval","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Util/AuthContext.js"],"sourcesContent":["import React from 'react';\n import { createContext, useState, useEffect} from 'react-dom';\n import jwt_decode from \"jwt-decode\";\n import {useHistory } from 'react-router-dom';\n\n\n\n//  const AuthContext = createContext();\n const AuthContext = React.createContext();\n\n export default AuthContext;\n\n export const AuthProvider = ({children})=>{\n     let [authTokens, setAuthTokens] = useState(()=>localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')): null)\n     let [user, setUser] = useState(()=>localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')): null);\n    let [loading, setLoading]  = useState(true);\n\n    const history = useHistory();\n\n    let logOutUser = () => {\n        setAuthTokens(null)\n        setUser(null)\n        localStorage.removeItem('authTokens')\n        history.push('/login')\n    }\n\n\n    let updateToken = async ()=> {\n        let response = await fetch('https://dry-falls-41890.herokuapp.com/api/v1/token', {\n            method: 'POST',\n            headers: { \n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({'refresh': authTokens?.refreshToken})\n        })\n\n        let data = await response.json()\n        if(response.status === 200){\n            setAuthTokens(data)\n            setUser(jwt_decode(data.accessToken))\n            localStorage.setItem('authTokens', JSON.stringify(data))\n        }else {\n            logOutUser()\n        }\n\n        if(loading){\n            setLoading(false);\n        }\n    }\n\n    let contextData = {\n        user:user,\n        authTokens: authTokens,\n        // loginUser:loginUser,\n        logOutUser:logOutUser\n    }\n\n\n    useEffect(()=> {\n        if(loading){\n            updateToken()\n        }\n        let fiveMinutes = 1000 * 60 * 5\n        let interval = setInterval(()=>{\n            if(authTokens){\n                updateToken()\n            }\n        }, fiveMinutes)\n        return ()=> clearInterval(interval)\n    }, [authTokens, loading])\n\n    return(\n        <AuthContext.Provider value={contextData} >\n            {loading ? null : children }\n        </AuthContext.Provider>\n    )\n\n\n\n\n    }"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACxB,SAASC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAO,WAAW;AAC7D,OAAOC,UAAU,MAAM,YAAY;AACnC,SAAQC,UAAU,QAAQ,kBAAkB;;AAI7C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACC,MAAMC,WAAW,gBAAGR,KAAK,CAACC,aAAa,CAAC,CAAC;AAEzC,eAAeO,WAAW;AAE1B,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAG;EAAAC,EAAA;EACtC,IAAI,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,MAAIY,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,GAAE,IAAI,CAAC;EACzI,IAAI,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,MAAIY,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,GAAGX,UAAU,CAACU,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,GAAE,IAAI,CAAC;EAC9H,IAAI,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAInB,QAAQ,CAAC,IAAI,CAAC;EAE3C,MAAMoB,OAAO,GAAGjB,UAAU,CAAC,CAAC;EAE5B,IAAIkB,UAAU,GAAGA,CAAA,KAAM;IACnBV,aAAa,CAAC,IAAI,CAAC;IACnBM,OAAO,CAAC,IAAI,CAAC;IACbL,YAAY,CAACU,UAAU,CAAC,YAAY,CAAC;IACrCF,OAAO,CAACG,IAAI,CAAC,QAAQ,CAAC;EAC1B,CAAC;EAGD,IAAIC,WAAW,GAAG,MAAAA,CAAA,KAAW;IACzB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oDAAoD,EAAE;MAC7EC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEf,IAAI,CAACgB,SAAS,CAAC;QAAC,SAAS,EAAEpB,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEqB;MAAY,CAAC;IAC9D,CAAC,CAAC;IAEF,IAAIC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAChC,IAAGR,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAC;MACvBvB,aAAa,CAACqB,IAAI,CAAC;MACnBf,OAAO,CAACf,UAAU,CAAC8B,IAAI,CAACG,WAAW,CAAC,CAAC;MACrCvB,YAAY,CAACwB,OAAO,CAAC,YAAY,EAAEtB,IAAI,CAACgB,SAAS,CAACE,IAAI,CAAC,CAAC;IAC5D,CAAC,MAAK;MACFX,UAAU,CAAC,CAAC;IAChB;IAEA,IAAGH,OAAO,EAAC;MACPC,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,IAAIkB,WAAW,GAAG;IACdrB,IAAI,EAACA,IAAI;IACTN,UAAU,EAAEA,UAAU;IACtB;IACAW,UAAU,EAACA;EACf,CAAC;EAGDpB,SAAS,CAAC,MAAK;IACX,IAAGiB,OAAO,EAAC;MACPM,WAAW,CAAC,CAAC;IACjB;IACA,IAAIc,WAAW,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC;IAC/B,IAAIC,QAAQ,GAAGC,WAAW,CAAC,MAAI;MAC3B,IAAG9B,UAAU,EAAC;QACVc,WAAW,CAAC,CAAC;MACjB;IACJ,CAAC,EAAEc,WAAW,CAAC;IACf,OAAO,MAAKG,aAAa,CAACF,QAAQ,CAAC;EACvC,CAAC,EAAE,CAAC7B,UAAU,EAAEQ,OAAO,CAAC,CAAC;EAEzB,oBACIb,OAAA,CAACC,WAAW,CAACoC,QAAQ;IAACC,KAAK,EAAEN,WAAY;IAAA7B,QAAA,EACpCU,OAAO,GAAG,IAAI,GAAGV;EAAQ;IAAAoC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAM3B,CAAC;AAAAtC,EAAA,CApESF,YAAY;EAAA,QAKNJ,UAAU;AAAA;AAAA6C,EAAA,GALhBzC,YAAY;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}