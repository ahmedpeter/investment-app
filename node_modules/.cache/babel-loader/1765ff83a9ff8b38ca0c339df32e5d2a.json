{"ast":null,"code":"import{toast}from\"react-toastify\";import axios from\"axios\";import{saveAs}from'file-saver';export var FileUploader=function FileUploader(url,title,val,msg,func){var config={headers:{'Content-Type':'multipart/form-data'}};var formData=new FormData();formData.append(title,val);if(!val){toast.error(\"Select a file to Upload\");return;}axios.put(url,formData,config).then(function(res){toast.success(\"\".concat(msg,\" Uploaded successfully!\"));// cause a re-render of state\nfunc();}).catch(function(err){return toast.error(\"Error Uploading File. Try Again\");});};export var DownloadFile=function DownloadFile(url){saveAs(url);};","map":{"version":3,"sources":["/Users/muhammedmusa/Documents/Other-Projects/globaltrade/investment-app/src/Util/FileUploader.js"],"names":["toast","axios","saveAs","FileUploader","url","title","val","msg","func","config","headers","formData","FormData","append","error","put","then","res","success","catch","err","DownloadFile"],"mappings":"AAAA,OAASA,KAAT,KAAsB,gBAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,MAAR,KAAqB,YAArB,CAGA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,GAAD,CAAMC,KAAN,CAAaC,GAAb,CAAkBC,GAAlB,CAAuBC,IAAvB,CAAiC,CACzD,GAAMC,CAAAA,MAAM,CAAG,CAAEC,OAAO,CAAE,CAAE,eAAgB,qBAAlB,CAAX,CAAf,CACA,GAAMC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,QAAJ,EAAjB,CACID,QAAQ,CAACE,MAAT,CAAgBR,KAAhB,CAAuBC,GAAvB,EACA,GAAG,CAACA,GAAJ,CAAQ,CACRN,KAAK,CAACc,KAAN,CAAY,yBAAZ,EACA,OACC,CACDb,KAAK,CACJc,GADD,CACKX,GADL,CACUO,QADV,CACoBF,MADpB,EAECO,IAFD,CAEM,SAACC,GAAD,CAAS,CACXjB,KAAK,CAACkB,OAAN,WAAiBX,GAAjB,6BACA;AACAC,IAAI,GAEP,CAPD,EAQCW,KARD,CAQO,SAACC,GAAD,QAASpB,CAAAA,KAAK,CAACc,KAAN,CAAY,iCAAZ,CAAT,EARP,EASL,CAjBI,CAoBL,MAAO,IAAMO,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACjB,GAAD,CAAS,CACjCF,MAAM,CAACE,GAAD,CAAN,CACD,CAFI","sourcesContent":["import { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport {saveAs} from 'file-saver';\n\n\nexport const FileUploader = (url, title, val, msg, func ) => {\n    const config = { headers: { 'Content-Type': 'multipart/form-data' } };\n    const formData = new FormData();\n        formData.append(title, val)\n        if(!val){\n        toast.error(\"Select a file to Upload\");\n        return\n        }\n        axios\n        .put(url, formData, config)\n        .then((res) => {\n            toast.success(`${msg} Uploaded successfully!`);\n            // cause a re-render of state\n            func();\n            \n        })\n        .catch((err) => toast.error(\"Error Uploading File. Try Again\"));\n  };\n\n\n  export const DownloadFile = (url) => {\n      saveAs(url);\n    }"]},"metadata":{},"sourceType":"module"}