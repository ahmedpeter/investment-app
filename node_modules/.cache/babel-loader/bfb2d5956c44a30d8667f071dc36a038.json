{"ast":null,"code":"var _jsxFileName = \"/Users/primalaero/investment/src/Components/Pages/Administrators.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport axios from \"axios\";\nimport { useLoading, Oval } from '@agney/react-loading';\nimport { format } from \"date-fns\";\nimport BASE_URL from \"../../Util/API\";\nimport API from '../../Util/API';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"./Pages.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 800,\n  bgcolor: 'background.paper',\n  boxShadow: 24,\n  p: 4\n};\n\nfunction Administrators() {\n  _s();\n\n  const [allAdmins, setAllAdmins] = useState([]);\n  const {\n    indicatorEl\n  } = useLoading({\n    loading: true,\n    indicator: /*#__PURE__*/_jsxDEV(Oval, {\n      width: \"50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this),\n    loaderProps: {\n      valueText: 'Please wait, loading records',\n      style: {\n        position: 'absolute',\n        left: '50%',\n        top: '50%'\n      }\n    }\n  });\n  useEffect(() => {\n    // set loading to true\n    // fetchUserDetails();\n    getAllAdministrators(); // paidInTotal();\n    // console.log(location);\n  }, []);\n\n  const getAllAdministrators = () => {\n    let tempAdmins = [];\n    API.get(`${BASE_URL}/users`).then(response => {\n      console.log(response);\n      let users = response.data.results;\n      users.map(user => {\n        if (user.role == \"admin\") {\n          setAllAdmins(allAdmins => [...allAdmins, user]);\n        }\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(error.message);\n    });\n  };\n\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account__detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"summary__title t-xl m-5em\",\n        children: \"System Administrators\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"summary al-base\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header__info\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"row\",\n          children: [allAdmins.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"empty__record\",\n            children: \"Oops! There are no records yet...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              \"aria-label\": \"collapsible table\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"S/N\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"First Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Last Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Email \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \" Role\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \" Registered\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: allAdmins === null || allAdmins === void 0 ? void 0 : allAdmins.map((admin, index) => {\n                  return /*#__PURE__*/_jsxDEV(TableRow, {\n                    sx: {\n                      \"& > *\": {\n                        borderBottom: \"unset\"\n                      }\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: index + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: capitalizeFirstLetter(admin === null || admin === void 0 ? void 0 : admin.first_name)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: capitalizeFirstLetter(admin === null || admin === void 0 ? void 0 : admin.last_name)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: admin === null || admin === void 0 ? void 0 : admin.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: capitalizeFirstLetter(admin === null || admin === void 0 ? void 0 : admin.role)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: [\" \", format(new Date(admin === null || admin === void 0 ? void 0 : admin.created_at), \"PP\"), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 27\n                    }, this)]\n                  }, admin.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Administrators, \"uKOGHDDkEYfYQ3+SCJtk7O7Z95s=\", false, function () {\n  return [useLoading];\n});\n\n_c = Administrators;\nexport default Administrators;\n\nvar _c;\n\n$RefreshReg$(_c, \"Administrators\");","map":{"version":3,"sources":["/Users/primalaero/investment/src/Components/Pages/Administrators.js"],"names":["React","useState","useEffect","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","axios","useLoading","Oval","format","BASE_URL","API","ToastContainer","toast","style","position","top","left","transform","width","bgcolor","boxShadow","p","Administrators","allAdmins","setAllAdmins","indicatorEl","loading","indicator","loaderProps","valueText","getAllAdministrators","tempAdmins","get","then","response","console","log","users","data","results","map","user","role","catch","error","message","capitalizeFirstLetter","string","charAt","toUpperCase","slice","length","admin","index","borderBottom","first_name","last_name","email","Date","created_at","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport axios from \"axios\";\nimport { useLoading, Oval } from '@agney/react-loading';\nimport { format } from \"date-fns\";\nimport BASE_URL from \"../../Util/API\";\nimport API from '../../Util/API';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"./Pages.scss\";\n\n\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 800,\n  bgcolor: 'background.paper',\n  boxShadow: 24,\n  p: 4,\n};\n\n\n\n\nfunction Administrators() {\n\n  \n  const [allAdmins, setAllAdmins] = useState([]);\n  const { indicatorEl } = useLoading({\n    loading: true,\n    indicator: <Oval width=\"50\"/>,\n    loaderProps: {\n      valueText: 'Please wait, loading records',\n      style: {position:'absolute', left: '50%', top: '50%'}\n    },\n  });\n\n  useEffect(() => {\n    // set loading to true\n    // fetchUserDetails();\n    getAllAdministrators();\n    // paidInTotal();\n    // console.log(location);\n    \n  }, []);\n\n  const getAllAdministrators = ()=> {\n      let tempAdmins = [];\n    API.get(`${BASE_URL}/users`)\n      .then((response) => {\n        console.log(response);\n        let users = response.data.results;\n        users.map((user)=>{\n            if(user.role == \"admin\"){\n                setAllAdmins(allAdmins => [...allAdmins, user] );\n            }\n        })\n        \n      })\n      .catch((error) => {\n        console.log(error);\n        toast.error(error.message);\n      });\n  }\n\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n  return (\n    <div className=\"account__detail\">\n      <div className=\"d-flex\">\n      <h4 className=\"summary__title t-xl m-5em\">System Administrators</h4>\n        {/* <button className=\"btn bg__green pull-right bold\"> Create New Account </button> */}\n      </div>\n      <section className=\"summary al-base\">\n          <div className=\"header__info\">\n            <section className=\"row\">\n              {allAdmins.length === 0  && <p className=\"empty__record\">Oops! There are no records yet...</p>}\n              <TableContainer component={Paper}>\n                <Table aria-label=\"collapsible table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell />\n                      <TableCell>S/N</TableCell>\n                      <TableCell>First Name</TableCell>\n                      <TableCell>Last Name</TableCell>\n                      <TableCell>Email </TableCell>\n                      <TableCell> Role</TableCell>\n                      <TableCell> Registered</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {allAdmins?.map((admin, index) => {\n                      return (\n                        \n                        <TableRow sx={{ \"& > *\": { borderBottom: \"unset\" } }} key={admin.id}>\n                          <TableCell></TableCell>\n                          <TableCell>{index + 1 }</TableCell>\n                          <TableCell>{capitalizeFirstLetter(admin?.first_name)}</TableCell>\n                          <TableCell>{capitalizeFirstLetter(admin?.last_name)}</TableCell>\n                          <TableCell>{admin?.email}</TableCell>\n                          <TableCell>{capitalizeFirstLetter(admin?.role)}</TableCell>\n                          <TableCell> {format(new Date(admin?.created_at), \"PP\")} </TableCell>\n                          \n                          \n                        </TableRow>\n                      );\n                    })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </section>\n          </div>\n        {/* </div> */}\n        \n      </section>\n    </div>\n  );\n}\n\nexport default Administrators;\n"]},"metadata":{},"sourceType":"module"}